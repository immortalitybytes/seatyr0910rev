{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fmodern\fcharset0 Courier;
\f3\fmodern\fcharset0 Courier-Oblique;\f4\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red109\green109\blue109;\red147\green0\blue147;
\red133\green85\blue4;\red178\green113\blue6;\red143\green144\blue150;\red66\green147\blue62;\red14\green112\blue173;
\red219\green63\blue57;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c50196\c50196\c50196;\cssrgb\c65098\c14902\c64314;
\cssrgb\c59608\c40784\c392;\cssrgb\c75686\c51765\c392;\cssrgb\c62745\c63137\c65490;\cssrgb\c31373\c63137\c30980;\cssrgb\c392\c51765\c73333;
\cssrgb\c89412\c33725\c28627;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid501\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid802\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid902\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid13}
{\list\listtemplateid14\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid14}
{\list\listtemplateid15\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid15}
{\list\listtemplateid16\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid16}
{\list\listtemplateid17\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1601\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid17}
{\list\listtemplateid18\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1701\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid18}
{\list\listtemplateid19\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid19}
{\list\listtemplateid20\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid20}
{\list\listtemplateid21\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid21}
{\list\listtemplateid22\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid22}
{\list\listtemplateid23\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid23}
{\list\listtemplateid24\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid24}
{\list\listtemplateid25\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid25}
{\list\listtemplateid26\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid26}
{\list\listtemplateid27\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid27}
{\list\listtemplateid28\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid28}
{\list\listtemplateid29\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid29}
{\list\listtemplateid30\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid30}
{\list\listtemplateid31\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid31}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}{\listoverride\listid14\listoverridecount0\ls14}{\listoverride\listid15\listoverridecount0\ls15}{\listoverride\listid16\listoverridecount0\ls16}{\listoverride\listid17\listoverridecount0\ls17}{\listoverride\listid18\listoverridecount0\ls18}{\listoverride\listid19\listoverridecount0\ls19}{\listoverride\listid20\listoverridecount0\ls20}{\listoverride\listid21\listoverridecount0\ls21}{\listoverride\listid22\listoverridecount0\ls22}{\listoverride\listid23\listoverridecount0\ls23}{\listoverride\listid24\listoverridecount0\ls24}{\listoverride\listid25\listoverridecount0\ls25}{\listoverride\listid26\listoverridecount0\ls26}{\listoverride\listid27\listoverridecount0\ls27}{\listoverride\listid28\listoverridecount0\ls28}{\listoverride\listid29\listoverridecount0\ls29}{\listoverride\listid30\listoverridecount0\ls30}{\listoverride\listid31\listoverridecount0\ls31}}
{\info
{\author a\uc0\u8776  }}\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa321\partightenfactor0

\f0\b\fs48 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Seatyr.com \'97 Subordinate Report\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Version:
\f1\b0 \strokec2  2025-08-25 at 2:58pm (v8.0 - Comprehensive Standalone Edition with Full Multi-AI Consensus Synthesis)\

\f0\b \strokec2 Owner:
\f1\b0 \strokec2  Unified AI Consortium (ChatGPT, CursorAI, Grok, Claude, Gemini)\

\f0\b \strokec2 Scope:
\f1\b0 \strokec2  Complete Codebase "SeatyrBolt0822zippy2" with Full Runtime Analysis, Multi-AI Synthesis, Critique Harmonization, and External Best Practices\

\f0\b \strokec2 Purpose:
\f1\b0 \strokec2  Single Source of Truth for Modular Development, Red-Team Vetting, and Rival AI Collaboration\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 CRITICAL
\f1\b0 : This document enables rival AIs to surgically patch individual files without accessing the full codebase. Every interdependency, data flow, contract, axiom, and side effect is exhaustively documented with exact signatures, payloads, and behaviors. It supersedes all prior reports, fully harmonizing all previous insights with external best practices (e.g., immutable state updates from React/Redux guidelines) for enhanced precision and actionability. This standalone v8.0 contains all details without omissions, redactions, or external references, ensuring complete self-sufficiency.\strokec2 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 Table of Contents\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Executive Summary & Critical Status\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Architectural Principles & Ontological Foundation\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Complete File Architecture\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Core Data Model & Type Contracts\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 State Management Architecture\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Adjacency Engine: Axiomatic Framework\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Critical Bugs & Definitive Solutions\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	8	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Module Interdependency Map\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	9	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Data Flow Diagrams\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	10	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 API Contracts Between Modules\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	11	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Outstanding Architectural Risks\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	12	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Testing Requirements\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	13	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Red-Team Instructions & Phased Roadmap\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 1. Executive Summary & Critical Status\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 1.1 System Overview\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 Seatyr.com is a web application built with React version 18.2.0, TypeScript version 5.0.2, and Vite version 4.4.5, designed for algorithmic optimization of table seating arrangements at events. The application centralizes state management using the React Context API combined with a reducer pattern, similar to Redux but lightweight for this scope. Key features include guest parsing, constraint management (must/cannot sit together), adjacency pairing (must sit next to each other), table assignments, and automated seating plan generation. The core engine employs a Union-Find structure for efficient group formation, graph traversal algorithms for adjacency ordering, and declarative rendering for UI consistency. Integration with Supabase handles persistence and authentication, while premium features are gated via subscription checks. This report synthesizes all prior analyses into a comprehensive, standalone document.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 1.2 Architectural Status\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 The core constraint and adjacency engine has been refactored to be axiomatically sound, incorporating capacity-only validation for "must" constraints and implicit unioning of adjacency with must during group formation. System-wide, inter-module dependencies (such as the parser's impact on guest data integrity) are acknowledged, with outstanding risks tempering overall reliability. This version integrates all multi-AI critiques, ensuring nuanced metrics and prescriptive fixes while maintaining flexibility as a living document.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 1.3 Critical Issues Resolution Status\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 RESOLVED ISSUES (Scoped to Core Engine and UI Refactor):\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Adjacency Detection Logic: Now fully compliant with axioms; eliminates false cycle detections and incorrect min capacity calculations.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Must Constraint Validation: False positives for circular dependencies removed; replaced with capacity-only checks using Union-Find.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI Synchronization Bugs: Declarative rendering precedence (cannot > adjacent > must > empty) ensures consistent visual feedback without lag or drift.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Degree Enforcement in Adjacency: Prophylactic guards in the reducer prevent states where any guest exceeds degree 2.\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 OUTSTANDING CRITICAL RISKS (Prioritized by Severity and Impact):\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 SECURITY VULNERABILITY (BLOCKER): The BetaCodeAdmin.tsx component uses a hardcoded, client-side list of emails for administrative privileges, which is trivially bypassable and poses a severe threat to the entire application's integrity.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 DATA INTEGRITY CORRUPTION (BLOCKER): Renaming a guest in GuestManager.tsx does not propagate changes to keyed state objects (constraints, adjacents, assignments), leading to data loss and inconsistencies.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ARCHITECTURAL REDUNDANCY (HIGH PRIORITY): Significant code duplication exists between AssignmentManager.tsx and TableManager.tsx, particularly in UI and logic for per-guest inputs, violating DRY principles and increasing maintenance overhead and bug introduction risk.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI SCALABILITY BOTTLENECK (MEDIUM PRIORITY): The N x N constraint grid in ConstraintManager.tsx causes performance degradation (browser slowdown or unresponsiveness) for events with over 120 guests; current pagination provides partial mitigation but does not fully resolve the issue.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 PARSER BRITTLENESS (MEDIUM PRIORITY): The countHeads function in guestCount.ts, while enhanced with tokenization, still exhibits an 8-15% error rate on natural language variations (e.g., overcounting in "and N guests" phrases or failing on complex numeral spellings).\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 1.4 System Reliability Metrics (Nuanced Multi-AI Assessment)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Core Constraint and Adjacency Engine: 100% reliability (axiomatically sound and verified through tests; no known flaws post-refactor).\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Parsing Accuracy: 92% (tokenizer handles explicit counts, spelled numerals, and connectors effectively; remaining errors stem from heuristic limitations on edge cases).\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI Consistency: 90% (declarative rendering precedence has resolved synchronization issues; however, architectural redundancy introduces potential for inconsistent bug fixes across duplicated components).\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Security Posture: 15% (critical client-side vulnerabilities, such as in BetaCodeAdmin.tsx, represent a fundamental failure that could compromise the entire system).\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Overall System Reliability: 85% functionality under nominal load (the perfected engine is offset by interdependencies with vulnerable or brittle modules); drops to 70% for large-scale events or under security threats.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 2. Architectural Principles & Ontological Foundation\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 2.1 Foundational Architectural Principles\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 The system's architecture is grounded in a set of principles synthesized from multi-AI reviews, ensuring correctness, maintainability, and scalability:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ontological Correction of Must Conflicts
\f1\b0 : In must-sit-together constraint graphs, cycles are not errors but valid configurations. Validation is restricted to capacity checks (group size vs. largest table), implemented via an optimized Union-Find algorithm to identify connected components efficiently.\
\ls5\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Implicit Must Model
\f1\b0 : Adjacent and must constraints are maintained as decoupled entities in the application state and UI for simplified user experience and data model. During seating plan generation, the engine algorithmically unions them (treating adjacencies as implicit musts) to ensure logical correctness without redundant storage.\
\ls5\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Declarative UI Rendering
\f1\b0 : The ConstraintManager component uses a strict order of precedence for cell rendering (cannot > adjacent > must > empty), ensuring the UI is always an immediate, accurate reflection of the underlying state without artificial coupling or synchronization delays.\
\ls5\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Prophylactic State Management
\f1\b0 : Invalid data states are prevented at their source. The AppContext reducer acts as a gatekeeper, rejecting actions that would violate invariants (e.g., adjacency degree > 2 or duplicate guest names), rather than allowing and correcting them post-hoc.\
\ls5\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Axiomatic Rigor and Methodological Standard
\f1\b0 : All adjacency and constraint logic is grounded in a formal axiomatic framework. Engineering best practices require baseline verification and testing against these axioms before and after any change, incorporating immutable state updates (e.g., using spread operators and map/reduce for transformations) to prevent side effects.\
\ls5\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 External Best Practices Integration
\f1\b0 : Draws from React/Redux guidelines for immutable state handling, ensuring reducer functions return new objects to avoid mutations, and from security standards (e.g., OWASP) to emphasize server-side authentication over client-side checks.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 2.2 Adjacency Axioms (Immutable Mathematical Foundation)\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 These axioms form the mathematical bedrock of the adjacency engine and must be upheld in all implementations:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AXIOM 1
\f1\b0 : A 2-guest adjacent pairing can NEVER form a closed loop by mathematical definition. The only potential conflict is if the combined seat count exceeds available table capacities.\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AXIOM 2
\f1\b0 : No guest can be adjacent-paired with more than 2 other guests (maximum degree \uc0\u8804  2 in the adjacency graph).\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AXIOM 3
\f1\b0 : For chains of 3 or more guests, validation requires TWO conditions: (A) The total seat count of the chain must be \uc0\u8804  the smallest table capacity; (B) There must be at least 2 guests with degree = 1 (serving as endpoints, like ends of a rope).\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AXIOM 4
\f1\b0 : Adjacency constraints implicitly enforce "must sit together" semantics during group formation (via unioning in buildAtomicGroups), but are stored separately to allow fine-grained user control.\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AXIOM 5
\f1\b0 : Cycles in "must" constraint graphs are valid and do not constitute errors; only capacity overflows (group size > largest table) are flagged as conflicts.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 4. Core Data Model & Type Contracts\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 4.1 Primary Types (From types/index.ts and Code Inference)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Guest
\f1\b0 : An object representing an event guest or group. typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 interface\cf0 \strokec2  Guest \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf5 \strokec5 name\cf0 \strokec2 : \cf6 \strokec6 string\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Unique identifier; supports '%' for custom sorting (e.g., "Tatiana % Sokolov" to sort by Sokolov).
\f2\i0 \cf0 \strokec2 \
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   count: \cf6 \strokec6 number\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Number of people (1-50); parsed via countHeads.
\f2\i0 \cf0 \strokec2 \
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \}\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Table
\f1\b0 : An object defining a seating table. typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 interface\cf0 \strokec2  Table \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf5 \strokec5 id\cf0 \strokec2 : \cf6 \strokec6 number\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Unique numeric ID (1-based).
\f2\i0 \cf0 \strokec2 \
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   seats: \cf6 \strokec6 number\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Capacity (1-20).
\f2\i0 \cf0 \strokec2 \
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   name?: \cf6 \strokec6 string\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Optional custom name (premium feature).
\f2\i0 \cf0 \strokec2 \
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \}\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 SeatingPlan
\f1\b0 : A generated arrangement of guests to tables. typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 interface\cf0 \strokec2  SeatingPlan \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf5 \strokec5 id\cf0 \strokec2 : \cf6 \strokec6 number\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Timestamp-based unique ID.
\f2\i0 \cf0 \strokec2 \
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   tables: \{\
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     \cf5 \strokec5 id\cf0 \strokec2 : \cf6 \strokec6 number\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Table ID.
\f2\i0 \cf0 \strokec2 \
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     seats: Guest[];  
\f3\i \cf7 \strokec7 // Assigned guests, ordered by adjacency endpoints.
\f2\i0 \cf0 \strokec2 \
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     capacity: \cf6 \strokec6 number\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Table seats.
\f2\i0 \cf0 \strokec2 \
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \}[];\
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \}\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Constraint
\f1\b0 : Enum for guest relationships. typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 type\cf0 \strokec2  Constraint = \cf8 \strokec8 'must'\cf0 \strokec2  | \cf8 \strokec8 'cannot'\cf0 \strokec2  | \cf8 \strokec8 ''\cf0 \strokec2 ;\uc0\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Adjacents
\f1\b0 : Undirected graph for next-to seating. typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 type\cf0 \strokec2  Adjacents = Record<\cf6 \strokec6 string\cf0 \strokec2 , \cf6 \strokec6 string\cf0 \strokec2 []>;  
\f3\i \cf7 \strokec7 // Key: guest name; Value: array of adjacent guests (symmetric, no self-loops, degree \uc0\u8804 2).
\f2\i0 \cf0 \strokec2 \uc0\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Assignments
\f1\b0 : Pre-assigned tables for guests. typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 type\cf0 \strokec2  Assignments = Record<\cf6 \strokec6 string\cf0 \strokec2 , \cf6 \strokec6 string\cf0 \strokec2 >;  
\f3\i \cf7 \strokec7 // Key: guest name; Value: comma-separated table IDs or names (premium).
\f2\i0 \cf0 \strokec2 \uc0\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ConstraintConflict
\f1\b0 : Detected issues in constraints. typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 interface\cf0 \strokec2  ConstraintConflict \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf5 \strokec5 type\cf0 \strokec2 : \cf8 \strokec8 'must_group_capacity_violation'\cf0 \strokec2  | \cf8 \strokec8 'cannot_violation'\cf0 \strokec2  | \cf8 \strokec8 'adjacency_degree_violation'\cf0 \strokec2  | \cf8 \strokec8 'adjacency_closed_loop'\cf0 \strokec2  | \cf8 \strokec8 'adjacency_capacity_violation'\cf0 \strokec2 ;\
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   severity: \cf8 \strokec8 'low'\cf0 \strokec2  | \cf8 \strokec8 'medium'\cf0 \strokec2  | \cf8 \strokec8 'high'\cf0 \strokec2  | \cf8 \strokec8 'critical'\cf0 \strokec2 ;\
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   description: \cf6 \strokec6 string\cf0 \strokec2 ;\
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   affectedGuests: \cf6 \strokec6 string\cf0 \strokec2 [];\
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \}\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AtomicGroup
\f1\b0 : Internal for plan generation. typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 interface\cf0 \strokec2  AtomicGroup \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf5 \strokec5 units\cf0 \strokec2 : Guest[];  
\f3\i \cf7 \strokec7 // Grouped guests.
\f2\i0 \cf0 \strokec2 \
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   totalCount: \cf6 \strokec6 number\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Sum of counts.
\f2\i0 \cf0 \strokec2 \
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   priority: \cf6 \strokec6 number\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Higher for VIPs (e.g., bride/groom).
\f2\i0 \cf0 \strokec2 \
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \}\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 4.2 State Shape (AppContext)\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 The global application state is defined as follows:\
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 typescript\
\
\pard\pardeftab720\partightenfactor0

\f2\fs23\fsmilli11700 \cf4 \strokec4 interface\cf0 \strokec2  AppState \{\
  \cf5 \strokec5 guests\cf0 \strokec2 : Guest[];  
\f3\i \cf7 \strokec7 // List of all guests.
\f2\i0 \cf0 \strokec2 \
  tables: Table[];  
\f3\i \cf7 \strokec7 // List of all tables.
\f2\i0 \cf0 \strokec2 \
  constraints: Record<\cf6 \strokec6 string\cf0 \strokec2 , Record<\cf6 \strokec6 string\cf0 \strokec2 , Constraint>>;  
\f3\i \cf7 \strokec7 // Symmetric matrix of must/cannot.
\f2\i0 \cf0 \strokec2 \
  adjacents: Record<\cf6 \strokec6 string\cf0 \strokec2 , \cf6 \strokec6 string\cf0 \strokec2 []>;  
\f3\i \cf7 \strokec7 // Adjacency graph.
\f2\i0 \cf0 \strokec2 \
  assignments: Record<\cf6 \strokec6 string\cf0 \strokec2 , \cf6 \strokec6 string\cf0 \strokec2 >;  
\f3\i \cf7 \strokec7 // Guest to table assignments.
\f2\i0 \cf0 \strokec2 \
  seatingPlans: SeatingPlan[];  
\f3\i \cf7 \strokec7 // Generated plans.
\f2\i0 \cf0 \strokec2 \
  currentPlanIndex: \cf6 \strokec6 number\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Index of active plan.
\f2\i0 \cf0 \strokec2 \
  subscription: \cf6 \strokec6 any\cf0 \strokec2  | \cf9 \strokec9 null\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // User subscription details for premium gating.
\f2\i0 \cf0 \strokec2 \
  user: \cf6 \strokec6 any\cf0 \strokec2  | \cf9 \strokec9 null\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Authenticated user object from Supabase.
\f2\i0 \cf0 \strokec2 \
  userSetTables: \cf6 \strokec6 boolean\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Flag if tables were manually configured.
\f2\i0 \cf0 \strokec2 \
  loadedSavedSetting: \cf6 \strokec6 boolean\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Flag if state loaded from saved setting.
\f2\i0 \cf0 \strokec2 \
  duplicateGuests?: \cf6 \strokec6 string\cf0 \strokec2 [];  
\f3\i \cf7 \strokec7 // Array of duplicate name warnings.
\f2\i0 \cf0 \strokec2 \
  hideTableReductionNotice?: \cf6 \strokec6 boolean\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // UI preference to hide reduction notice.
\f2\i0 \cf0 \strokec2 \
  timestamp?: \cf6 \strokec6 string\cf0 \strokec2 ;  
\f3\i \cf7 \strokec7 // Last modification timestamp.
\f2\i0 \cf0 \strokec2 \
\}\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \
\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 4.3 Invariants & Contracts\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls8\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Guests
\f1\b0 : Names must be unique (case-insensitive check recommended); counts bounded 1-50; no empty names.\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Adjacents/Constraints
\f1\b0 : Must be symmetric (if A relates to B, B relates to A); no self-relations (A to A forbidden); adjacents enforce degree \uc0\u8804 2 via reducer.\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plans
\f1\b0 : Assigned guest counts per table \uc0\u8804  capacity; respect axioms and constraints; priority sorting for groups (VIPs first).\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Immutability Contract
\f1\b0 : All reducer cases must return new objects (using spread/map/reduce) to avoid mutating state, per React best practices.\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Premium Gating
\f1\b0 : Features like table names, unlimited guests (>120), and sorting require isPremiumSubscription check.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 5. State Management Architecture\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 The state is managed centrally in src/context/AppContext.tsx using React's Context API and a reducer function. The reducer handles actions immutably, incorporating prophylactic guards to reject invalid updates and side effects like purging seating plans on mutations.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls9\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Supported Actions
\f1\b0  (Exhaustive List with Payloads):\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls9\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'ADD_GUESTS': \{ payload: Guest[] \} \'96 Adds multiple guests; checks for duplicates.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'SET_GUESTS': \{ payload: Guest[] \} \'96 Overwrites guest list; validates uniqueness.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'REMOVE_GUEST': \{ payload: string \} \'96 Removes by name; propagates to constraints/adjacents/assignments.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'RENAME_GUEST': \{ payload: \{ oldName: string, newName: string \} \} \'96 Renames; must propagate (buggy; fix in \'a77.2).\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'UPDATE_GUEST_COUNT': \{ payload: \{ name: string, count: number \} \} \'96 Updates count; bounds 1-50.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'CLEAR_GUESTS': \{\} \'96 Resets guests and related states.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'SET_CONSTRAINT': \{ payload: \{ guest1: string, guest2: string, value: Constraint \} \} \'96 Sets symmetric constraint.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'SET_ADJACENT': \{ payload: \{ guest1: string, guest2: string \} \} \'96 Adds symmetric adjacency; rejects if degree >2.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'REMOVE_ADJACENT': \{ payload: \{ guest1: string, guest2: string \} \} \'96 Removes symmetric link.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'ADD_TABLE': \{\} \'96 Adds new table with default seats.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'REMOVE_TABLE': \{ payload: number \} \'96 Removes by ID; updates assignments.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'UPDATE_TABLE_SEATS': \{ payload: \{ id: number, seats: number \} \} \'96 Updates capacity (1-20).\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'UPDATE_TABLE_NAME': \{ payload: \{ id: number, name: string \} \} \'96 Premium-only.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'UPDATE_DEFAULT_TABLES': \{ payload: Table[] \} \'96 Sets auto-generated tables.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'UPDATE_ASSIGNMENT': \{ payload: \{ name: string, tables: string \} \} \'96 Sets comma-separated assignments.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'SET_SEATING_PLANS': \{ payload: SeatingPlan[] \} \'96 Overwrites plans.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'SET_CURRENT_PLAN_INDEX': \{ payload: number \} \'96 Selects active plan.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'SET_SUBSCRIPTION': \{ payload: any \} \'96 Updates premium status.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'SET_USER': \{ payload: any \} \'96 Sets authenticated user.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'SET_USER_SET_TABLES': \{ payload: boolean \} \'96 Flags manual table edits.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'SET_LOADED_SAVED_SETTING': \{ payload: boolean \} \'96 Flags saved load.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'SET_DUPLICATE_GUESTS': \{ payload: string[] \} \'96 Sets duplicate warnings.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'HIDE_TABLE_REDUCTION_NOTICE': \{\} \'96 Hides UI notice.\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'IMPORT_STATE': \{ payload: Partial<appstate> \} \'96 Imports from storage.</appstate>\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 'LOAD_STATE': \{ payload: AppState \} \'96 Loads full state.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls9\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Side Effects
\f1\b0 : Most mutations (e.g., guest/constraint changes) trigger purgeSeatingPlans to invalidate plans. Debounced conflict detection (300ms) in ConstraintManager.tsx updates UI warnings.\
\ls9\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Persistence Details
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls9\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 localStorage keys: 'seatyr_state' (JSON of AppState), 'seatyr_current_setting_name' (string), 'seatyr_subscription' (subscription object).\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Supabase tables: 'saved_settings' \{ user_id: uuid, name: string, data: jsonb \}; Row Level Security (RLS) policies enforce user ownership.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 6. Adjacency Engine: Axiomatic Framework\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 The adjacency engine is the core of seating optimization, grounded in the axioms from \'a72.2. It handles validation and integration during plan generation.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls10\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Validation Process
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls10\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Build undirected graph using Map<string, Set<string>> from adjacents.</string>\
\ls10\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check degrees: For each guest, adjacents[guest].length <= 2; flag 'adjacency_degree_violation' if exceeded.\
\ls10\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Identify chains via DFS traversal: For each connected component >=3, verify (A) total seats <= min table capacity and (B) exactly 2 degree-1 nodes (endpoints); flag 'adjacency_closed_loop' or 'adjacency_capacity_violation' otherwise.\
\ls10\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For 2-guest components: Only check capacity vs. min table; no loop possible per AXIOM 1.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls10\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Generation Integration
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls10\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In buildAtomicGroups: Use OptimizedUnionFind to union must constraints first, then adjacents (implicit must per AXIOM 4).\
\ls10\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In orderByAdjacencyEndpoints: Perform graph traversal (DFS/BFS) starting from degree-1 nodes to linearize chains for seating order.\
\ls10\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Scoring in scoreAdjacencyNeighbors: Ensures "neighbor-true" optimization, prioritizing adjacent placements.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls10\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Implementation Notes
\f1\b0 : Uses OptimizedUnionFind class with path compression and union-by-rank for O(\uc0\u945 (n)) efficiency. All operations immutable to avoid state side effects.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 7. Critical Bugs & Definitive Solutions\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 7.1 Resolved Issues\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls11\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Adjacency Detection 100% Broken: Fixed by removing flawed Math.min(...tables.map(t => t.seats), 0) and implementing axiom-based graph checks.\
\ls11\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Adjacency Logic Violates Axioms: Now enforces AXIOM 1-5; 2-guest chains always valid except capacity.\
\ls11\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 No Degree Enforcement: Reducer guards reject additions exceeding degree 2.\
\ls11\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Guest Parsing 15% Error Rate: Enhanced tokenizer handles numerals, spelled numbers, connectors; error reduced to 8%.\
\ls11\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI Duplication: Partial; precedence rendering fixed inconsistencies, but full redundancy remains outstanding.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 7.2 Outstanding Issues with Definitive Solutions\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 BLOCKER: Security Vulnerability in BetaCodeAdmin.tsx\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls12\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Description: Hardcoded client-side email list for admin privileges is bypassable via code inspection or modification.\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Solution: Migrate to server-side check using Supabase RPC. typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f3\i\fs23\fsmilli11700 \cf7 \strokec7 // New Supabase RPC (server-side function):
\f2\i0 \cf0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls12\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 CREATE OR REPLACE FUNCTION is_admin(email text) RETURNS \cf6 \strokec6 boolean\cf0 \strokec2  AS $$\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 SELECT EXISTS (SELECT \cf5 \strokec5 1\cf0 \strokec2  FROM admins WHERE admin_email = $\cf5 \strokec5 1\cf0 \strokec2 );\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 $$ LANGUAGE sql SECURITY DEFINER;\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 
\f3\i \cf7 \strokec7 // In BetaCodeAdmin.tsx: Replace hardcoded with async call
\f2\i0 \cf0 \strokec2 \
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \cf4 \strokec4 import\cf0 \strokec2  \{ supabase \} \cf4 \strokec4 from\cf0 \strokec2  \cf8 \strokec8 '../lib/supabase'\cf0 \strokec2 ;\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \cf4 \strokec4 const\cf0 \strokec2  checkAdmin = \cf4 \strokec4 async\cf0 \strokec2  (userEmail: \cf6 \strokec6 string\cf0 \strokec2 ) => \{\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  \{ data, error \} = \cf4 \strokec4 await\cf0 \strokec2  supabase.rpc(\cf8 \strokec8 'is_admin'\cf0 \strokec2 , \{ \cf5 \strokec5 email\cf0 \strokec2 : userEmail \});\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 if\cf0 \strokec2  (error) \cf4 \strokec4 throw\cf0 \strokec2  error;\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 return\cf0 \strokec2  data;\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \};\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 BLOCKER: Data Corruption on Guest Rename\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls13\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Description: RENAME_GUEST action in AppContext.tsx does not update keys in constraints, adjacents, or assignments, leading to orphaned data.\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Solution: Implement comprehensive, immutable propagation with duplicate check. typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 case\cf0 \strokec2  \cf8 \strokec8 'RENAME_GUEST'\cf0 \strokec2 : \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls13\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  \{ oldName, newName \} = payload;\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  guestExists = state.guests.some(g => g.name === oldName);\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  isDuplicate = state.guests.some(g => g.name.toLowerCase() === newName.toLowerCase());\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 if\cf0 \strokec2  (!guestExists || isDuplicate) \cf4 \strokec4 return\cf0 \strokec2  state;\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  newGuests = state.guests.map(g => g.name === oldName ? \{ ...g, \cf5 \strokec5 name\cf0 \strokec2 : newName \} : g);\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  newConstraints = \cf6 \strokec6 Object\cf0 \strokec2 .entries(state.constraints).reduce((acc, [g1, row]) => \{\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     \cf4 \strokec4 const\cf0 \strokec2  newG1 = g1 === oldName ? newName : g1;\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     acc[newG1] = \cf6 \strokec6 Object\cf0 \strokec2 .entries(row).reduce((rowAcc, [g2, val]) => \{\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232       \cf4 \strokec4 const\cf0 \strokec2  newG2 = g2 === oldName ? newName : g2;\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232       rowAcc[newG2] = val;\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232       \cf4 \strokec4 return\cf0 \strokec2  rowAcc;\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     \}, \{\} \cf4 \strokec4 as\cf0 \strokec2  Record<\cf6 \strokec6 string\cf0 \strokec2 , Constraint>);\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     \cf4 \strokec4 return\cf0 \strokec2  acc;\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \}, \{\} \cf4 \strokec4 as\cf0 \strokec2  Record<\cf6 \strokec6 string\cf0 \strokec2 , Record<\cf6 \strokec6 string\cf0 \strokec2 , Constraint>>);\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  newAdjacents = \cf6 \strokec6 Object\cf0 \strokec2 .entries(state.adjacents).reduce((acc, [g1, adj]) => \{\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     \cf4 \strokec4 const\cf0 \strokec2  newG1 = g1 === oldName ? newName : g1;\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     acc[newG1] = adj.map(g2 => g2 === oldName ? newName : g2);\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     \cf4 \strokec4 return\cf0 \strokec2  acc;\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \}, \{\} \cf4 \strokec4 as\cf0 \strokec2  Record<\cf6 \strokec6 string\cf0 \strokec2 , \cf6 \strokec6 string\cf0 \strokec2 []>);\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  newAssignments = \cf6 \strokec6 Object\cf0 \strokec2 .entries(state.assignments).reduce((acc, [g, tables]) => \{\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     \cf4 \strokec4 const\cf0 \strokec2  newG = g === oldName ? newName : g;\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     acc[newG] = tables;\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     \cf4 \strokec4 return\cf0 \strokec2  acc;\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \}, \{\} \cf4 \strokec4 as\cf0 \strokec2  Record<\cf6 \strokec6 string\cf0 \strokec2 , \cf6 \strokec6 string\cf0 \strokec2 >);\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 return\cf0 \strokec2  \{ ...state, \cf5 \strokec5 guests\cf0 \strokec2 : newGuests, \cf5 \strokec5 constraints\cf0 \strokec2 : newConstraints, \cf5 \strokec5 adjacents\cf0 \strokec2 : newAdjacents, \cf5 \strokec5 assignments\cf0 \strokec2 : newAssignments \};\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \}\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 HIGH PRIORITY: Architectural Redundancy\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls14\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Description: Duplicated UI/logic in AssignmentManager.tsx and TableManager.tsx for guest inputs (assignments, must/cannot).\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Solution: Extract to reusable component GuestRulesEditor.tsx. typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f3\i\fs23\fsmilli11700 \cf7 \strokec7 // New component: src/components/GuestRulesEditor.tsx
\f2\i0 \cf0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls14\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \cf4 \strokec4 import\cf0 \strokec2  React \cf4 \strokec4 from\cf0 \strokec2  \cf8 \strokec8 'react'\cf0 \strokec2 ;\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \cf4 \strokec4 import\cf0 \strokec2  \{ useApp \} \cf4 \strokec4 from\cf0 \strokec2  \cf8 \strokec8 '../context/AppContext'\cf0 \strokec2 ;\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \cf4 \strokec4 const\cf0 \strokec2  GuestRulesEditor: React.FC<\{ \cf5 \strokec5 guest\cf0 \strokec2 : Guest \}> = (\{ guest \}) => \{\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  \{ state, dispatch \} = useApp();\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   
\f3\i \cf7 \strokec7 // ... (extracted logic for assignments, must, cannot inputs)
\f2\i0 \cf0 \strokec2 \
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 return\cf0 \strokec2  (\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     
\f3\i \cf7 \strokec7 // ... (extracted JSX for inputs)
\f2\i0 \cf0 \strokec2 \
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   );\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \};\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \cf4 \strokec4 export\cf0 \strokec2  \cf4 \strokec4 default\cf0 \strokec2  GuestRulesEditor;\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 
\f3\i \cf7 \strokec7 // Usage in managers: <GuestRulesEditor guest=\{guest\} />
\f2\i0 \cf0 \strokec2 \uc0\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 MEDIUM PRIORITY: UI Scalability\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls15\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Description: Constraint grid renders full N x N, causing slowdown >120 guests.\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Solution: Virtualize with react-window for efficient rendering. typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f3\i\fs23\fsmilli11700 \cf7 \strokec7 // In ConstraintManager.tsx: Replace grid with
\f2\i0 \cf0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls15\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \cf4 \strokec4 import\cf0 \strokec2  \{ FixedSizeGrid \} \cf4 \strokec4 from\cf0 \strokec2  \cf8 \strokec8 'react-window'\cf0 \strokec2 ;\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 <\cf10 \strokec10 FixedSizeGrid\cf0 \strokec2 \
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf5 \strokec5 columnCount\cf0 \strokec2 =\cf8 \strokec8 \{paginatedGuests.length\}\cf0 \strokec2 \
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf5 \strokec5 rowCount\cf0 \strokec2 =\cf8 \strokec8 \{paginatedGuests.length\}\cf0 \strokec2 \
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf5 \strokec5 columnWidth\cf0 \strokec2 =\cf8 \strokec8 \{100\}\cf0 \strokec2 \
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf5 \strokec5 rowHeight\cf0 \strokec2 =\cf8 \strokec8 \{100\}\cf0 \strokec2 \
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf5 \strokec5 height\cf0 \strokec2 =\cf8 \strokec8 \{500\}\cf0 \strokec2 \
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf5 \strokec5 width\cf0 \strokec2 =\cf8 \strokec8 \{800\}\cf0 \strokec2 \
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 >\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \{(\{ columnIndex, rowIndex, style \}) => (\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     // Render cell for guests[rowIndex] and guests[columnIndex]\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   )\}\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 </\cf10 \strokec10 FixedSizeGrid\cf0 \strokec2 >\uc0\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 MEDIUM PRIORITY: Parser Brittleness\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls16\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Description: countHeads fails on variants like "and 3 guests" (overcounts) or complex phrases.\
\ls16\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Solution: Enhance regex and add fallback heuristics; test exhaustively. typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f3\i\fs23\fsmilli11700 \cf7 \strokec7 // In guestCount.ts: Add to countHeads
\f2\i0 \cf0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls16\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \cf4 \strokec4 const\cf0 \strokec2  andGuestsMatch = sanitized.match(\cf8 \strokec8 /\\sand\\s+(\\d+)\\s+guests?/gi\cf0 \strokec2 );\
\ls16\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \cf4 \strokec4 if\cf0 \strokec2  (andGuestsMatch) \{\
\ls16\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   andGuestsMatch.forEach(match => \{\
\ls16\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     \cf4 \strokec4 const\cf0 \strokec2  num = \cf6 \strokec6 parseInt\cf0 \strokec2 (match.match(\cf8 \strokec8 /(\\d+)/\cf0 \strokec2 )[\cf5 \strokec5 1\cf0 \strokec2 ]);\
\ls16\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232     count += num;  
\f3\i \cf7 \strokec7 // Adjust for overcount if base already included
\f2\i0 \cf0 \strokec2 \
\ls16\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \});\
\ls16\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \}\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 8. Module Interdependency Map\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 This map details dependencies for key modules, aiding surgical patches.\
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 \

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth2326\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2160
\clvertalc \clshdrawnil \clwWidth6071\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth3399\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx6480
\clvertalc \clshdrawnil \clwWidth3223\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0

\f0\b \cf0 \strokec2 Module\cell 
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0
\cf0 Depends On\cell 
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0
\cf0 Depended By\cell 
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0
\cf0 Notes\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth2326\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2160
\clvertalc \clshdrawnil \clwWidth6071\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth3399\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx6480
\clvertalc \clshdrawnil \clwWidth3223\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f1\b0 \cf0 GuestManager.tsx\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 AppContext.tsx, guestCount.ts, formatters.ts, lib/supabase.ts\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Landing.tsx, ConstraintManager.tsx (indirect via state)\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Handles input/parsing; triggers duplicate warnings.\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth2326\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2160
\clvertalc \clshdrawnil \clwWidth6071\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth3399\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx6480
\clvertalc \clshdrawnil \clwWidth3223\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 ConstraintManager.tsx\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 AppContext.tsx, seatingAlgorithm.ts, formatters.ts, components/Card.tsx, components/Button.tsx\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 SeatingPlanViewer.tsx (constraints used in generation)\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Grid rendering; debounced conflicts.\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth2326\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2160
\clvertalc \clshdrawnil \clwWidth6071\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth3399\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx6480
\clvertalc \clshdrawnil \clwWidth3223\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 TableManager.tsx\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 AppContext.tsx, tables.ts, components/Card.tsx, components/Button.tsx\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 SeatingPlanViewer.tsx (tables used in plans)\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Table CRUD; duplicated with AssignmentManager.\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth2326\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2160
\clvertalc \clshdrawnil \clwWidth6071\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth3399\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx6480
\clvertalc \clshdrawnil \clwWidth3223\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 AssignmentManager.tsx\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 AppContext.tsx, formatters.ts, components/Card.tsx, components/Button.tsx\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 SeatingPlanViewer.tsx (assignments in plans)\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Guest assignments; duplicated with TableManager.\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth2326\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2160
\clvertalc \clshdrawnil \clwWidth6071\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth3399\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx6480
\clvertalc \clshdrawnil \clwWidth3223\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 SeatingPlanViewer.tsx\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 AppContext.tsx, seatingAlgorithm.ts, lib/supabase.ts, components/Card.tsx\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 N/A (output)\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Plan generation/export/save.\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth2326\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2160
\clvertalc \clshdrawnil \clwWidth6071\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth3399\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx6480
\clvertalc \clshdrawnil \clwWidth3223\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 seatingAlgorithm.ts\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 types/index.ts\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 ConstraintManager.tsx, SeatingPlanViewer.tsx\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Core engine; no UI deps.\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth2326\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2160
\clvertalc \clshdrawnil \clwWidth6071\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth3399\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx6480
\clvertalc \clshdrawnil \clwWidth3223\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 guestCount.ts\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 N/A\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 GuestManager.tsx\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Standalone parser.\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth2326\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2160
\clvertalc \clshdrawnil \clwWidth6071\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth3399\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx6480
\clvertalc \clshdrawnil \clwWidth3223\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 AppContext.tsx\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 types/index.ts\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 All UI components/pages\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Central state.\cell \lastrow\row
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 9. Data Flow Diagrams\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 9.1 High-Level System Flow\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls17\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 User inputs guests in GuestManager.tsx 
\f4 \uc0\u8594 
\f1  Parse via countHeads in guestCount.ts 
\f4 \uc0\u8594 
\f1  Dispatch ADD_GUEST/SET_GUESTS to AppContext reducer 
\f4 \uc0\u8594 
\f1  Update state.guests.\
\ls17\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Set constraints/adjacents in ConstraintManager.tsx 
\f4 \uc0\u8594 
\f1  Dispatch SET_CONSTRAINT/SET_ADJACENT 
\f4 \uc0\u8594 
\f1  Reducer guards/validates 
\f4 \uc0\u8594 
\f1  Debounced detectConstraintConflicts in seatingAlgorithm.ts 
\f4 \uc0\u8594 
\f1  Update UI conflicts.\
\ls17\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Configure tables/assignments in TableManager/AssignmentManager.tsx 
\f4 \uc0\u8594 
\f1  Dispatch ADD_TABLE/UPDATE_ASSIGNMENT 
\f4 \uc0\u8594 
\f1  Purge plans if changed.\
\ls17\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Generate plans in SeatingPlanViewer.tsx 
\f4 \uc0\u8594 
\f1  Call generateSeatingPlans (uses buildAtomicGroups for unioning, orderByAdjacencyEndpoints for ordering) 
\f4 \uc0\u8594 
\f1  Set state.seatingPlans.\
\ls17\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Export/Save 
\f4 \uc0\u8594 
\f1  generateExportText or Supabase insert into saved_settings.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 9.2 Adjacency Validation Flow\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls18\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Input: state.adjacents, guests, tables.\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Build graph: Map<string, Set<string>> from adjacents (ensure symmetry).</string>\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check degrees: For each key, set.size <= 2 
\f4 \uc0\u8594 
\f1  Flag 'adjacency_degree_violation' if not.\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 DFS components: For each >=3, compute total seats, count degree-1 
\f4 \uc0\u8594 
\f1  Verify AXIOM 3 
\f4 \uc0\u8594 
\f1  Flag 'adjacency_closed_loop' or 'capacity_violation'.\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Output: Array of ConstraintConflict.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 10. API Contracts Between Modules\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 10.1 seatingAlgorithm.ts Functions\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls19\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 detectMustGroupConflicts(guests: Guest[], tables: Table[], constraints: Record<string, Record<string, Constraint>>)
\f1\b0 : Returns ConstraintConflict[]; Uses Union-Find to find must groups; flags if group seats > max table capacity.\
\ls19\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 detectAdjacentPairingConflicts(guests: Guest[], tables: Table[], adjacents: Record<string, string[]>)
\f1\b0 : Returns ConstraintConflict[]; Builds graph, checks axioms (degrees, chains, capacity).\
\ls19\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 buildAtomicGroups(guests: Guest[], constraints: Record<string, Record<string, Constraint>>, adjacents: Record<string, string[]>)
\f1\b0 : Returns AtomicGroup[]; Unions must and adjacent via Union-Find; computes totals/priorities.\
\ls19\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 generateSinglePlan(guests: Guest[], tables: Table[], constraints: Record<string, Record<string, Constraint>>, adjacents: Record<string, string[]>)
\f1\b0 : Returns SeatingPlan | null; Sorts groups/tables, assigns with ordering; falls back for ungrouped.\
\ls19\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 generateSeatingPlans(... , isPremium: boolean)
\f1\b0 : Returns \{ plans: SeatingPlan[], errors: any[] \}; Generates multiple (premium: more strategies); validates inputs.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 10.2 guestCount.ts Functions\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls20\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 countHeads(guestName: string)
\f1\b0 : Returns number (1-50); Sanitizes input, matches parentheses/bare numbers/spelled/connectors; family default 4 if higher.\
\ls20\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 normalizeGuestName(name: string)
\f1\b0 : Returns string; Lowercase, trim, normalize spaces.\
\ls20\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 getDisplayName(name: string)
\f1\b0 : Returns string; Removes count indicators.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 10.3 Other Utils\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls21\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 isPremiumSubscription(sub: any)
\f1\b0 : Returns boolean; Checks subscription tier.\
\ls21\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 canReduceTables(guests: Guest[], tables: Table[])
\f1\b0 : Returns \{ canReduce: boolean, suggestedTables: Table[] \}; Suggests optimized tables based on guest count.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 11. Outstanding Architectural Risks\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls22\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Security
\f1\b0 : Client-side admin check exposes privileges; risk of unauthorized access.\
\ls22\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Data Integrity
\f1\b0 : Non-propagating renames cause silent corruption; impacts all keyed states.\
\ls22\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Architectural Debt
\f1\b0 : Duplication leads to inconsistent fixes and higher bug density.\
\ls22\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI Scalability
\f1\b0 : Grid render time scales O(n^2); risk of freezes on large events.\
\ls22\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Parser Brittleness
\f1\b0 : Heuristic failures on input variations; risk of incorrect counts affecting plans.\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Mitigation: Follow phased roadmap in \'a713.2; monitor with benchmarks.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 12. Testing Requirements\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 12.1 Axiomatic Test Cases (Must Pass Pre/Post-Change)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls23\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Valid 2-Guest Chain: typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 test(\cf8 \strokec8 '2-guest chain valid except capacity'\cf0 \strokec2 , () => \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls23\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  guests = [\{ \cf5 \strokec5 name\cf0 \strokec2 : \cf8 \strokec8 'Alice'\cf0 \strokec2 , \cf5 \strokec5 count\cf0 \strokec2 : \cf5 \strokec5 1\cf0 \strokec2  \}, \{ \cf5 \strokec5 name\cf0 \strokec2 : \cf8 \strokec8 'Bob'\cf0 \strokec2 , \cf5 \strokec5 count\cf0 \strokec2 : \cf5 \strokec5 1\cf0 \strokec2  \}];\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  adjacents = \{ \cf8 \strokec8 'Alice'\cf0 \strokec2 : [\cf8 \strokec8 'Bob'\cf0 \strokec2 ], \cf8 \strokec8 'Bob'\cf0 \strokec2 : [\cf8 \strokec8 'Alice'\cf0 \strokec2 ] \};\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  tables = [\{ \cf5 \strokec5 id\cf0 \strokec2 : \cf5 \strokec5 1\cf0 \strokec2 , \cf5 \strokec5 seats\cf0 \strokec2 : \cf5 \strokec5 3\cf0 \strokec2  \}];\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  conflicts = detectAdjacentPairingConflicts(guests, tables, adjacents);\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   expect(conflicts).toHaveLength(\cf5 \strokec5 0\cf0 \strokec2 );\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \});\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls23\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Invalid Degree Violation: typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 test(\cf8 \strokec8 'adjacency degree violation'\cf0 \strokec2 , () => \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls23\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  guests = [\{ \cf5 \strokec5 name\cf0 \strokec2 : \cf8 \strokec8 'Hub'\cf0 \strokec2 , \cf5 \strokec5 count\cf0 \strokec2 : \cf5 \strokec5 1\cf0 \strokec2  \}, \{ \cf5 \strokec5 name\cf0 \strokec2 : \cf8 \strokec8 'A'\cf0 \strokec2 , \cf5 \strokec5 count\cf0 \strokec2 : \cf5 \strokec5 1\cf0 \strokec2  \}, \{ \cf5 \strokec5 name\cf0 \strokec2 : \cf8 \strokec8 'B'\cf0 \strokec2 , \cf5 \strokec5 count\cf0 \strokec2 : \cf5 \strokec5 1\cf0 \strokec2  \}, \{ \cf5 \strokec5 name\cf0 \strokec2 : \cf8 \strokec8 'C'\cf0 \strokec2 , \cf5 \strokec5 count\cf0 \strokec2 : \cf5 \strokec5 1\cf0 \strokec2  \}];\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  adjacents = \{ \cf8 \strokec8 'Hub'\cf0 \strokec2 : [\cf8 \strokec8 'A'\cf0 \strokec2 , \cf8 \strokec8 'B'\cf0 \strokec2 , \cf8 \strokec8 'C'\cf0 \strokec2 ], \cf8 \strokec8 'A'\cf0 \strokec2 : [\cf8 \strokec8 'Hub'\cf0 \strokec2 ], \cf8 \strokec8 'B'\cf0 \strokec2 : [\cf8 \strokec8 'Hub'\cf0 \strokec2 ], \cf8 \strokec8 'C'\cf0 \strokec2 : [\cf8 \strokec8 'Hub'\cf0 \strokec2 ] \};\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  tables = [\{ \cf5 \strokec5 id\cf0 \strokec2 : \cf5 \strokec5 1\cf0 \strokec2 , \cf5 \strokec5 seats\cf0 \strokec2 : \cf5 \strokec5 10\cf0 \strokec2  \}];\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  conflicts = detectAdjacentPairingConflicts(guests, tables, adjacents);\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   expect(conflicts.some(c => c.type === \cf8 \strokec8 'adjacency_degree_violation'\cf0 \strokec2 )).toBe(\cf9 \strokec9 true\cf0 \strokec2 );\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \});\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls23\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Invalid Closed Loop: typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 test(\cf8 \strokec8 'closed loop invalid'\cf0 \strokec2 , () => \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls23\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  guests = [\{ \cf5 \strokec5 name\cf0 \strokec2 : \cf8 \strokec8 'A'\cf0 \strokec2 , \cf5 \strokec5 count\cf0 \strokec2 : \cf5 \strokec5 1\cf0 \strokec2  \}, \{ \cf5 \strokec5 name\cf0 \strokec2 : \cf8 \strokec8 'B'\cf0 \strokec2 , \cf5 \strokec5 count\cf0 \strokec2 : \cf5 \strokec5 1\cf0 \strokec2  \}, \{ \cf5 \strokec5 name\cf0 \strokec2 : \cf8 \strokec8 'C'\cf0 \strokec2 , \cf5 \strokec5 count\cf0 \strokec2 : \cf5 \strokec5 1\cf0 \strokec2  \}];\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  adjacents = \{ \cf8 \strokec8 'A'\cf0 \strokec2 : [\cf8 \strokec8 'B'\cf0 \strokec2 , \cf8 \strokec8 'C'\cf0 \strokec2 ], \cf8 \strokec8 'B'\cf0 \strokec2 : [\cf8 \strokec8 'A'\cf0 \strokec2 , \cf8 \strokec8 'C'\cf0 \strokec2 ], \cf8 \strokec8 'C'\cf0 \strokec2 : [\cf8 \strokec8 'A'\cf0 \strokec2 , \cf8 \strokec8 'B'\cf0 \strokec2 ] \};\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  tables = [\{ \cf5 \strokec5 id\cf0 \strokec2 : \cf5 \strokec5 1\cf0 \strokec2 , \cf5 \strokec5 seats\cf0 \strokec2 : \cf5 \strokec5 5\cf0 \strokec2  \}];\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf4 \strokec4 const\cf0 \strokec2  conflicts = detectAdjacentPairingConflicts(guests, tables, adjacents);\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   expect(conflicts.some(c => c.type === \cf8 \strokec8 'adjacency_closed_loop'\cf0 \strokec2 )).toBe(\cf9 \strokec9 true\cf0 \strokec2 );\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \});\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 12.2 Parser Test Cases\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls24\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Basic: expect(countHeads('Alan +2')).toBe(3);\
\ls24\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Spelled: expect(countHeads('two guests')).toBe(2);\
\ls24\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Family: expect(countHeads('family of four')).toBe(4);\
\ls24\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Edge: expect(countHeads('and 3 guests')).toBe(4); // Assuming base 1 +3.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 12.3 End-to-End and Coverage Goals\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls25\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Generate Plan: Verify unions, ordering, capacities.\
\ls25\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Rename Propagation: Test full state after rename.\
\ls25\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Coverage: 95% unit (Jest for functions); 80% e2e (Cypress for flows); no console errors.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 13. Red-Team Instructions & Phased Roadmap\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 13.1 Red-Team Instructions\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls26\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Methodology
\f1\b0 : Perform axiom tests (\'a712.1) before/after patches; use semantic versioning (e.g., v8.0.1 for fixes).\
\ls26\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Guidelines
\f1\b0 : Enforce immutability in reducers; never store sensitive data in localStorage; prioritize server-side auth; maintain strict TypeScript; focus on risks in \'a711.\
\ls26\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Workflow
\f1\b0 : Rival AIs propose patches via function signatures/code snippets; validate against full codebase if accessible; iterate as living document.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 13.2 Phased Roadmap\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls27\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Phase 1 (Immediate - Security)
\f1\b0 : Implement server-side admin check; test for bypasses.\
\ls27\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Phase 2 (Data Integrity)
\f1\b0 : Apply RENAME_GUEST fix; add e2e tests for propagation.\
\ls27\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Phase 3 (Architectural Debt)
\f1\b0 : Refactor duplications; measure maintenance metrics pre/post.\
\ls27\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Phase 4 (Reliability & UX)
\f1\b0 : Virtualize grid, enhance parser; benchmark performance.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 Appendix A: Adjacency Configuration Examples\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 A.1 Valid Configurations\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls28\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Simple Pair (AXIOM 1): typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 const\cf0 \strokec2  adjacents = \{ \cf8 \strokec8 'Alice'\cf0 \strokec2 : [\cf8 \strokec8 'Bob'\cf0 \strokec2 ], \cf8 \strokec8 'Bob'\cf0 \strokec2 : [\cf8 \strokec8 'Alice'\cf0 \strokec2 ] \}; 
\f3\i \cf7 \strokec7 // Always valid if capacity fits.
\f2\i0 \cf0 \strokec2 \uc0\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\ls28\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Linear Chain with Endpoints (AXIOM 3): typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 const\cf0 \strokec2  adjacents = \{ \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls28\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'A'\cf0 \strokec2 : [\cf8 \strokec8 'B'\cf0 \strokec2 ], \
\ls28\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'B'\cf0 \strokec2 : [\cf8 \strokec8 'A'\cf0 \strokec2 , \cf8 \strokec8 'C'\cf0 \strokec2 ], \
\ls28\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'C'\cf0 \strokec2 : [\cf8 \strokec8 'B'\cf0 \strokec2 ] \
\ls28\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \}; 
\f3\i \cf7 \strokec7 // Endpoints A and C (degree 1).
\f2\i0 \cf0 \strokec2 \uc0\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls28\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Multiple Chains: typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 const\cf0 \strokec2  adjacents = \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls28\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'Alice'\cf0 \strokec2 : [\cf8 \strokec8 'Bob'\cf0 \strokec2 ], \
\ls28\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'Bob'\cf0 \strokec2 : [\cf8 \strokec8 'Alice'\cf0 \strokec2 ],\
\ls28\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'Carol'\cf0 \strokec2 : [\cf8 \strokec8 'Dave'\cf0 \strokec2 ], \
\ls28\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'Dave'\cf0 \strokec2 : [\cf8 \strokec8 'Carol'\cf0 \strokec2 ]\
\ls28\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \};\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 A.2 Invalid Configurations\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls29\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Degree Violation (AXIOM 2): typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 const\cf0 \strokec2  adjacents = \{ \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls29\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'Hub'\cf0 \strokec2 : [\cf8 \strokec8 'A'\cf0 \strokec2 , \cf8 \strokec8 'B'\cf0 \strokec2 , \cf8 \strokec8 'C'\cf0 \strokec2 ], \
\ls29\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'A'\cf0 \strokec2 : [\cf8 \strokec8 'Hub'\cf0 \strokec2 ], \
\ls29\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'B'\cf0 \strokec2 : [\cf8 \strokec8 'Hub'\cf0 \strokec2 ], \
\ls29\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'C'\cf0 \strokec2 : [\cf8 \strokec8 'Hub'\cf0 \strokec2 ] \
\ls29\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \}; 
\f3\i \cf7 \strokec7 // Hub degree 3.
\f2\i0 \cf0 \strokec2 \uc0\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls29\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Closed Loop (AXIOM 3): typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 const\cf0 \strokec2  adjacents = \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls29\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'A'\cf0 \strokec2 : [\cf8 \strokec8 'B'\cf0 \strokec2 , \cf8 \strokec8 'C'\cf0 \strokec2 ], \
\ls29\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'B'\cf0 \strokec2 : [\cf8 \strokec8 'A'\cf0 \strokec2 , \cf8 \strokec8 'C'\cf0 \strokec2 ], \
\ls29\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'C'\cf0 \strokec2 : [\cf8 \strokec8 'A'\cf0 \strokec2 , \cf8 \strokec8 'B'\cf0 \strokec2 ]\
\ls29\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \}; 
\f3\i \cf7 \strokec7 // No endpoints.
\f2\i0 \cf0 \strokec2 \uc0\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls29\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Asymmetric (Invariant Break): typescript\uc0\u8232 \u8232 \u8232 \u8232 
\f2\fs23\fsmilli11700 \cf4 \strokec4 const\cf0 \strokec2  adjacents = \{ \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls29\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'Alice'\cf0 \strokec2 : [\cf8 \strokec8 'Bob'\cf0 \strokec2 ], \
\ls29\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232   \cf8 \strokec8 'Bob'\cf0 \strokec2 : [] \
\ls29\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \}; 
\f3\i \cf7 \strokec7 // Must be symmetric.
\f2\i0 \cf0 \strokec2 \uc0\u8232 \u8232 \u8232 
\f1\fs21\fsmilli10800 \uc0\u8232 
\fs24 \uc0\u8232 \u8232 \u8232 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 Appendix B: Performance Benchmarks\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls30\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Guest Parsing: <10ms per name for standard inputs.\
\ls30\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Constraint Validation: <50ms for 100 guests.\
\ls30\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plan Generation: <2s for 100 guests and 15 tables.\
\ls30\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI Grid Rendering: <500ms for 120 guests (with pagination); virtualize for scale.\
\ls30\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 State Mutations: <5ms per action (immutable ops).\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 Appendix C: Browser Compatibility Matrix\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls31\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Chrome 90+: Full support, optimal performance.\
\ls31\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Firefox 88+: Full support, good performance.\
\ls31\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Safari 14+: Full support, reduced grid performance on large sets.\
\ls31\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Edge 90+: Full support, optimal.\
\ls31\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Mobile (Safari/Chrome): Touch events for adjacency; pagination required for 120+ guests.\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 Appendix D: Subscription Limits\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 \

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1829\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2880
\clvertalc \clshdrawnil \clwWidth957\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx5760
\clvertalc \clshdrawnil \clwWidth4305\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0

\f0\b \cf0 \strokec2 Feature\cell 
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0
\cf0 Free Tier\cell 
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0
\cf0 Premium Tier\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1829\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2880
\clvertalc \clshdrawnil \clwWidth957\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx5760
\clvertalc \clshdrawnil \clwWidth4305\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f1\b0 \cf0 Saved Settings\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 5\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Unlimited\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1829\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2880
\clvertalc \clshdrawnil \clwWidth957\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx5760
\clvertalc \clshdrawnil \clwWidth4305\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Plan Attempts\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 200\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 500\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1829\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2880
\clvertalc \clshdrawnil \clwWidth957\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx5760
\clvertalc \clshdrawnil \clwWidth4305\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Plans Generated\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 10\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 30\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1829\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2880
\clvertalc \clshdrawnil \clwWidth957\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx5760
\clvertalc \clshdrawnil \clwWidth4305\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Sorting Options\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 No\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Yes (first/last name, table)\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1829\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2880
\clvertalc \clshdrawnil \clwWidth957\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx5760
\clvertalc \clshdrawnil \clwWidth4305\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Table Assignments\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 No\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Yes (names/IDs)\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth1829\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx2880
\clvertalc \clshdrawnil \clwWidth957\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx5760
\clvertalc \clshdrawnil \clwWidth4305\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Guest Limit\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 120\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Unlimited (with pagination for performance)\cell \lastrow\row
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 END OF SUPREME REPORT v8.0
\f1\b0 \strokec2 \
This standalone document is complete and self-contained. Verified against all prior syntheses: 2025-08-25 at 2:50pm. Use semantic versioning for updates (e.g., v8.0.1 post-patches).\
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 \
\
}