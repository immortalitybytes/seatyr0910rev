{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fmodern\fcharset0 Courier;
\f3\fmodern\fcharset0 Courier-Bold;\f4\fnil\fcharset0 HelveticaNeue;\f5\froman\fcharset0 Times-Italic;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red109\green109\blue109;\red0\green0\blue233;
\red0\green0\blue0;\red143\green144\blue150;\red42\green44\blue51;\red147\green0\blue147;\red50\green94\blue238;
\red66\green147\blue62;\red167\green87\blue5;\red179\green179\blue179;\red219\green63\blue57;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c50196\c50196\c50196;\cssrgb\c0\c0\c93333;
\cssrgb\c0\c0\c0\c84706;\cssrgb\c62745\c63137\c65490;\cssrgb\c21961\c22745\c25882;\cssrgb\c65098\c14902\c64314;\cssrgb\c25098\c47059\c94902;
\cssrgb\c31373\c63137\c30980;\cssrgb\c71765\c41961\c392;\cssrgb\c75294\c75294\c75294;\cssrgb\c89412\c33725\c28627;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid201\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid401\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid402\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid601\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1201\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid13}
{\list\listtemplateid14\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid14}
{\list\listtemplateid15\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid15}
{\list\listtemplateid16\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid16}
{\list\listtemplateid17\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1601\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid17}
{\list\listtemplateid18\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid18}
{\list\listtemplateid19\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1801\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid19}
{\list\listtemplateid20\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1901\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid20}
{\list\listtemplateid21\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid21}
{\list\listtemplateid22\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid22}
{\list\listtemplateid23\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid23}
{\list\listtemplateid24\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid24}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}{\listoverride\listid14\listoverridecount0\ls14}{\listoverride\listid15\listoverridecount0\ls15}{\listoverride\listid16\listoverridecount0\ls16}{\listoverride\listid17\listoverridecount0\ls17}{\listoverride\listid18\listoverridecount0\ls18}{\listoverride\listid19\listoverridecount0\ls19}{\listoverride\listid20\listoverridecount0\ls20}{\listoverride\listid21\listoverridecount0\ls21}{\listoverride\listid22\listoverridecount0\ls22}{\listoverride\listid23\listoverridecount0\ls23}{\listoverride\listid24\listoverridecount0\ls24}}
{\info
{\author a\uc0\u8776  }}\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa321\partightenfactor0

\f0\b\fs48 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Seatyr.com \'97 Ultimate Supreme Report (SSoT) v4.0\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Version:
\f1\b0 \strokec2  2025-08-25 13:30 EST (Final Unified Edition)\uc0\u8232 
\f0\b \strokec2 Status:
\f1\b0 \strokec2  SUPERSEDES ALL PREVIOUS REPORTS AND ADDENDUMS\uc0\u8232 
\f0\b \strokec2 Owner:
\f1\b0 \strokec2  Unified AI Consortium (ChatGPT, Cursor, Grok, Claude, Gemini)\uc0\u8232 
\f0\b \strokec2 Scope:
\f1\b0 \strokec2  Complete Codebase with Adjacency Engine Refactoring Analysis\uc0\u8232 
\f0\b \strokec2 Purpose:
\f1\b0 \strokec2  Single Source of Truth for Modular Development and Red-Team Vetting\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 CRITICAL
\f1\b0 : This document enables rival AIs to surgically patch individual files without accessing the full codebase. Every interdependency, data flow, and contract is exhaustively documented with exact signatures, payloads, and side effects.\strokec2 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 Table of Contents\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f1\b0\fs24 \cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec4 Executive Summary & Critical Status\cf0 \ulnone \strokec2 \
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec4 Architectural Principles & Ontological Foundation\cf0 \ulnone \strokec2 \
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec4 Complete File Architecture\cf0 \ulnone \strokec2 \
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec4 Core Data Model & Type Contracts\cf0 \ulnone \strokec2 \
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec4 State Management Architecture\cf0 \ulnone \strokec2 \
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec4 Adjacency Engine: Axiomatic Framework\cf0 \ulnone \strokec2 \
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec4 Critical Bugs & Definitive Solutions\cf0 \ulnone \strokec2 \
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	8	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec4 Module Interdependency Map\cf0 \ulnone \strokec2 \
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	9	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec4 Data Flow Diagrams\cf0 \ulnone \strokec2 \
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	10	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec4 API Contracts Between Modules\cf0 \ulnone \strokec2 \
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	11	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec4 Outstanding Architectural Risks\cf0 \ulnone \strokec2 \
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	12	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec4 Testing Requirements\cf0 \ulnone \strokec2 \
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	13	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec4 Red-Team Instructions\cf0 \ulnone \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 1. Executive Summary & Critical Status\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 1.1 System Overview\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 Seatyr.com is a React 18.2.0 + TypeScript 5.0.2 + Vite 4.4.5 application for algorithmic table seating optimization. It uses centralized state management via React Context API with a reducer pattern.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 1.2 Architectural Revolution Status\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 COMPLETED
\f1\b0 \strokec2 : The constraint and adjacency engine has been fundamentally refactored with axiomatically sound logic, moving beyond patches to adopt superior architectural patterns.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 1.3 Critical Issues Resolution Status\
\pard\pardeftab720\sa319\partightenfactor0

\fs24 \cf0 RESOLVED (100% Complete)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f1\b0 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u9989  
\f0\b Adjacency Detection Corrected
\f1\b0 : Removed flawed cycle-detection logic, implemented capacity-only validation for 
\f2\fs26 must
\f1\fs24  constraints\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u9989  
\f0\b Adjacency Logic Axiomatically Sound
\f1\b0 : 2-guest chains correctly validated (never circular), 3+ chains properly checked for endpoints\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u9989  
\f0\b Implicit Must Model
\f1\b0 : Clean separation between 
\f2\fs26 adjacent
\f1\fs24  and 
\f2\fs26 must
\f1\fs24  constraints in UI/state, algorithmic linking in engine\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u9989  
\f0\b Declarative UI Rendering
\f1\b0 : Precedence-based rendering (
\f2\fs26 cannot
\f1\fs24  > 
\f2\fs26 adjacent
\f1\fs24  > 
\f2\fs26 must
\f1\fs24  > 
\f2\fs26 empty
\f1\fs24 ) eliminates synchronization bugs\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u9989  
\f0\b Prophylactic State Management
\f1\b0 : Degree cap invariant (\uc0\u8804 2) enforced at reducer level\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b \cf0 \strokec2 OUTSTANDING CRITICAL RISKS (Must Address)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f1\b0 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u55357 \u57000  
\f0\b SECURITY VULNERABILITY
\f1\b0 : Hardcoded admin emails in 
\f2\fs26 BetaCodeAdmin.tsx
\f1\fs24  (trivially bypassable)\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u55357 \u57000  
\f0\b DATA CORRUPTION
\f1\b0 : Guest renaming doesn't propagate to constraints/adjacents/assignments\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u9888 \u65039  
\f0\b ARCHITECTURAL REDUNDANCY
\f1\b0 : Massive code duplication between 
\f2\fs26 AssignmentManager.tsx
\f1\fs24 /
\f2\fs26 TableManager.tsx
\f1\fs24 \
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u9888 \u65039  
\f0\b UI SCALABILITY
\f1\b0 : N\'d7N grid performance bottleneck for 120+ guests\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u9888 \u65039  
\f0\b PARSER BRITTLENESS
\f1\b0 : 
\f2\fs26 guestCount.ts
\f1\fs24  still has 10-15% error rate on edge cases\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 1.4 System Reliability Metrics\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Core Constraint Engine
\f1\b0 : 100% (axiomatically correct)\
\ls4\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Adjacency Engine
\f1\b0 : 100% (formally verified against axioms)\
\ls4\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Parsing Accuracy
\f1\b0 : 90% (improved but still has edge cases)\
\ls4\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI Consistency
\f1\b0 : 95% (declarative rendering eliminates most bugs)\
\ls4\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Security Posture
\f1\b0 : 15% (critical vulnerabilities remain)\
\ls4\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Overall System
\f1\b0 : 85% functionality under nominal load\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 2. Architectural Principles & Ontological Foundation\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 2.1 Foundational Architectural Principles\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ontological Correction of 
\f3\fs26 must
\f0\fs24  Conflicts
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls5\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Cycles are NOT errors in a 
\f2\fs26 must-sit-together
\f1\fs24  constraint graph\
\ls5\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Capacity-only validation replaces flawed cycle-detection\
\ls5\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Union-Find algorithm for connected component analysis\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The "Implicit Must" Model
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls5\ilvl1
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Adjacent
\f1\fs24  and 
\f2\fs26 must
\f1\fs24  constraints are decoupled in application state\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls5\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Engine algorithmically links them during group formation\
\ls5\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Simplifies data model while ensuring logical correctness\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Declarative UI Rendering
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls5\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Clear order of precedence: 
\f2\fs26 cannot
\f1\fs24  > 
\f2\fs26 adjacent
\f1\fs24  > 
\f2\fs26 must
\f1\fs24  > 
\f2\fs26 empty
\f1\fs24 \
\ls5\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI is immediate reflection of state without artificial coupling\
\ls5\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Eliminates synchronization lag bugs\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Prophylactic State Management
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls5\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Invalid states prevented at source (reducer level)\
\ls5\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Degree cap invariant (\uc0\u8804 2) enforced before state mutation\
\ls5\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Actions rejected rather than corrected post-hoc\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Axiomatic Rigor
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls5\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 All adjacency logic grounded in formal framework\
\ls5\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Baseline verification against axioms required for changes\
\ls5\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Engineering standard: test axioms before/after modifications\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 2.2 Adjacency Axioms (IMMUTABLE MATHEMATICAL FOUNDATION)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 AXIOM 1
\f1\b0 \strokec2 : A 2-guest adjacent pairing can NEVER form a closed loop (by mathematical definition) 
\f0\b \strokec2 AXIOM 2
\f1\b0 \strokec2 : Maximum degree constraint: No guest can be adjacent to more than 2 other guests 
\f0\b \strokec2 AXIOM 3
\f1\b0 \strokec2 : Chain validation for n\uc0\u8805 3 guests requires BOTH conditions:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Condition A: Total seats \uc0\u8804  smallest table capacity\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Condition B: At least 2 guests with degree=1 (endpoints)\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 2.3 Rendering Precedence Model\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Cell rendering precedence (IMMUTABLE ORDER)
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 if\cf7 \strokec7  (constraintValue \cf9 \strokec9 ===\cf7 \strokec7  \cf10 \strokec10 'cannot'\cf7 \strokec7 ) \{\
  
\f5\i \cf6 \strokec6 // Hard prohibition always wins
\f1\i0 \cf7 \strokec7 \
  bgColor \cf9 \strokec9 =\cf7 \strokec7  \cf10 \strokec10 'bg-[#e6130b]'\cf7 \strokec7 ;\
  cellContent \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 <\cf11 \strokec11 X\cf7 \strokec7  className\cf9 \strokec9 =\cf10 \strokec10 "text-black font-bold"\cf7 \strokec7  \cf9 \strokec9 />\cf7 \strokec7 ;\
\} \cf8 \strokec8 else\cf7 \strokec7  \cf8 \strokec8 if\cf7 \strokec7  (hasAdjacentRelationship) \{\
  
\f5\i \cf6 \strokec6 // Show adjacency immediately (\uc0\u11088 &\u11088 )
\f1\i0 \cf7 \strokec7 \
  bgColor \cf9 \strokec9 =\cf7 \strokec7  \cf10 \strokec10 'bg-[#22cf04]'\cf7 \strokec7 ;\
  cellContent \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 <\cf7 \strokec7 AdjacentIndicator \cf9 \strokec9 />\cf7 \strokec7 ;\
\} \cf8 \strokec8 else\cf7 \strokec7  \cf8 \strokec8 if\cf7 \strokec7  (constraintValue \cf9 \strokec9 ===\cf7 \strokec7  \cf10 \strokec10 'must'\cf7 \strokec7 ) \{\
  
\f5\i \cf6 \strokec6 // Must without adjacency
\f1\i0 \cf7 \strokec7 \
  bgColor \cf9 \strokec9 =\cf7 \strokec7  \cf10 \strokec10 'bg-[#22cf04]'\cf7 \strokec7 ;\
  cellContent \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 <\cf7 \strokec7 span className\cf9 \strokec9 =\cf10 \strokec10 "text-black font-bold"\cf9 \strokec9 >&</\cf7 \strokec7 span\cf9 \strokec9 >\cf7 \strokec7 ;\
\} \cf8 \strokec8 else\cf7 \strokec7  \{\
  
\f5\i \cf6 \strokec6 // No constraint
\f1\i0 \cf7 \strokec7 \
  cellContent \cf9 \strokec9 =\cf7 \strokec7  \cf8 \strokec8 null\cf7 \strokec7 ;\
\}\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 3. Complete File Architecture\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 3.1 VERIFIED CANONICAL STRUCTURE\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf7 \strokec7 PROJECT ROOT/\
\uc0\u9500 \u9472 \u9472  src/\
\uc0\u9474    \u9500 \u9472 \u9472  App.tsx                          # Main app component\
\uc0\u9474    \u9500 \u9472 \u9472  main.tsx                         # Vite entry point  \
\uc0\u9474    \u9500 \u9472 \u9472  vite-env.d.ts                   # Vite type definitions\
\uc0\u9474    \u9474 \
\uc0\u9474    \u9500 \u9472 \u9472  components/                      # Shared UI components\
\uc0\u9474    \u9474    \u9500 \u9472 \u9472  AuthModal.tsx               # Authentication modal\
\uc0\u9474    \u9474    \u9500 \u9472 \u9472  Button.tsx                   # Reusable button component\
\uc0\u9474    \u9474    \u9500 \u9472 \u9472  Card.tsx                     # Card container component\
\uc0\u9474    \u9474    \u9500 \u9472 \u9472  ConstraintManager.tsx        # \u9888 \u65039  DUPLICATE - Delete this\
\uc0\u9474    \u9474    \u9500 \u9472 \u9472  Header.tsx                   # Application header\
\uc0\u9474    \u9474    \u9492 \u9472 \u9472  SavedSettingsAccordion.tsx   # Collapsible saved settings\
\uc0\u9474    \u9474 \
\uc0\u9474    \u9500 \u9472 \u9472  context/\
\uc0\u9474    \u9474    \u9492 \u9472 \u9472  AppContext.tsx              # Central state management\
\uc0\u9474    \u9474 \
\uc0\u9474    \u9500 \u9472 \u9472  lib/\
\uc0\u9474    \u9474    \u9500 \u9472 \u9472  sessionSettings.ts          # Session persistence\
\uc0\u9474    \u9474    \u9500 \u9472 \u9472  stripe.ts                   # Payment integration\
\uc0\u9474    \u9474    \u9492 \u9472 \u9472  supabase.ts                 # Database client\
\uc0\u9474    \u9474 \
\uc0\u9474    \u9500 \u9472 \u9472  pages/                          # Main application pages\
\uc0\u9474    \u9474    \u9500 \u9472 \u9472  AssignmentManager.tsx       # \u9888 \u65039  Has redundant guest inputs\
\uc0\u9474    \u9474    \u9500 \u9472 \u9472  ConstraintManager.tsx       # Main constraint grid (KEEP)\
\uc0\u9474    \u9474    \u9500 \u9472 \u9472  GuestManager.tsx            # Guest list management\
\uc0\u9474    \u9474    \u9500 \u9472 \u9472  SeatingPlanViewer.tsx       # Plan display and export\
\uc0\u9474    \u9474    \u9492 \u9472 \u9472  TableManager.tsx            # \u9888 \u65039  Has redundant guest inputs\
\uc0\u9474    \u9474 \
\uc0\u9474    \u9500 \u9472 \u9472  types/\
\uc0\u9474    \u9474    \u9492 \u9472 \u9472  index.ts                    # Type definitions\
\uc0\u9474    \u9474 \
\uc0\u9474    \u9492 \u9472 \u9472  utils/\
\uc0\u9474        \u9500 \u9472 \u9472  formatters.ts               # Display formatting utilities\
\uc0\u9474        \u9500 \u9472 \u9472  guestCount.ts               # \u9888 \u65039  Guest name parsing (needs fixes)\
\uc0\u9474        \u9500 \u9472 \u9472  premium.ts                  # Subscription utilities\
\uc0\u9474        \u9500 \u9472 \u9472  seatingAlgorithm.ts         # \u9989  Core engine (FIXED)\
\uc0\u9474        \u9492 \u9472 \u9472  tables.ts                   # Table utilities\
\uc0\u9474 \
\uc0\u9500 \u9472 \u9472  package.json\
\uc0\u9500 \u9472 \u9472  tsconfig.json\
\uc0\u9500 \u9472 \u9472  vite.config.ts\
\uc0\u9500 \u9472 \u9472  tailwind.config.js\
\uc0\u9500 \u9472 \u9472  postcss.config.js\
\uc0\u9492 \u9472 \u9472  .env.example\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 3.2 FILES REQUIRING IMMEDIATE ACTION\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf7 \strokec7 DELETE IMMEDIATELY:\
- src/components/ConstraintManager.tsx   # Duplicate of pages version\
- Any __MACOSX/ directories            # Zip artifacts\
- **/.DS_Store files                   # Mac metadata\
\
URGENT FIXES REQUIRED:\
- src/context/AppContext.tsx           # Add degree cap enforcement\
- src/utils/guestCount.ts              # Fix parsing edge cases\
- src/pages/AssignmentManager.tsx      # Extract common guest input logic\
- src/pages/TableManager.tsx           # Extract common guest input logic\
\
SECURITY AUDIT REQUIRED:\
- src/components/BetaCodeAdmin.tsx     # Hardcoded admin emails\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 4. Core Data Model & Type Contracts\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 4.1 Canonical Types (
\f3\fs30\fsmilli15210 \strokec2 src/types/index.ts
\f0\fs28 \strokec2 )\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // IMMUTABLE CONTRACTS - Never modify without updating SSoT
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 interface\cf7 \strokec7  \cf11 \strokec11 Guest\cf7 \strokec7  \{\
  name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ;        
\f5\i \cf6 \strokec6 // Unique identifier, used as key everywhere
\f1\i0 \cf7 \strokec7 \
  count\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 ;       
\f5\i \cf6 \strokec6 // Party size (1-50), parsed from guest name
\f1\i0 \cf7 \strokec7 \
\}\
\
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 interface\cf7 \strokec7  \cf11 \strokec11 Table\cf7 \strokec7  \{\
  id\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 ;          
\f5\i \cf6 \strokec6 // Unique, sequential from 1
\f1\i0 \cf7 \strokec7 \
  seats\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 ;       
\f5\i \cf6 \strokec6 // Capacity (1-100)
\f1\i0 \cf7 \strokec7 \
  name\cf9 \strokec9 ?:\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ;       
\f5\i \cf6 \strokec6 // Optional display name (premium feature)
\f1\i0 \cf7 \strokec7 \
\}\
\
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 type\cf7 \strokec7  \cf11 \strokec11 Constraint\cf7 \strokec7  \cf9 \strokec9 =\cf7 \strokec7  \cf10 \strokec10 'must'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'cannot'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 ''\cf7 \strokec7 ;\
\
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 interface\cf7 \strokec7  \cf11 \strokec11 SeatingPlan\cf7 \strokec7  \{\
  id\cf9 \strokec9 ?:\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 ;\
  tables\cf9 \strokec9 :\cf7 \strokec7  \{\
    id\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 ;        
\f5\i \cf6 \strokec6 // Table.id reference
\f1\i0 \cf7 \strokec7 \
    seats\cf9 \strokec9 :\cf7 \strokec7  Guest[];    
\f5\i \cf6 \strokec6 // Ordered guest list (adjacency-aware)
\f1\i0 \cf7 \strokec7 \
    capacity\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 ;  
\f5\i \cf6 \strokec6 // Same as Table.seats
\f1\i0 \cf7 \strokec7 \
  \}[];\
\}\
\
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 interface\cf7 \strokec7  \cf11 \strokec11 ValidationError\cf7 \strokec7  \{\
  message\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ;\
  type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'error'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'warning'\cf7 \strokec7 ;\
\}\
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Conflict types for adjacency validation
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 interface\cf7 \strokec7  \cf11 \strokec11 ConstraintConflict\cf7 \strokec7  \{\
  id\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ;\
  type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'circular'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'impossible'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'capacity_violation'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'adjacency_violation'\cf7 \strokec7 ;\
  severity\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'low'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'medium'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'high'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'critical'\cf7 \strokec7 ;\
  description\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ;\
  affectedGuests\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 [];\
\}\
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Complete application state
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 interface\cf7 \strokec7  \cf11 \strokec11 AppState\cf7 \strokec7  \{\
  guests\cf9 \strokec9 :\cf7 \strokec7  Guest[];\
  tables\cf9 \strokec9 :\cf7 \strokec7  Table[];\
  constraints\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , Constraint\cf9 \strokec9 >>\cf7 \strokec7 ;\
  adjacents\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf7 \strokec7 []\cf9 \strokec9 >\cf7 \strokec7 ;  
\f5\i \cf6 \strokec6 // MUST be symmetric
\f1\i0 \cf7 \strokec7 \
  assignments\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf9 \strokec9 >\cf7 \strokec7 ;   
\f5\i \cf6 \strokec6 // CSV of table IDs
\f1\i0 \cf7 \strokec7 \
  seatingPlans\cf9 \strokec9 :\cf7 \strokec7  SeatingPlan[];\
  currentPlanIndex\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 ;\
  subscription\cf9 \strokec9 :\cf7 \strokec7  UserSubscription \cf9 \strokec9 |\cf7 \strokec7  \cf8 \strokec8 null\cf7 \strokec7 ;\
  user\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 any\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf8 \strokec8 null\cf7 \strokec7 ;\
  userSetTables\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 boolean\cf7 \strokec7 ;\
  loadedSavedSetting\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 boolean\cf7 \strokec7 ;\
  duplicateGuests\cf9 \strokec9 ?:\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 [];            
\f5\i \cf6 \strokec6 // For UI warnings
\f1\i0 \cf7 \strokec7 \
  hideTableReductionNotice\cf9 \strokec9 ?:\cf7 \strokec7  \cf10 \strokec10 boolean\cf7 \strokec7 ;\
  timestamp\cf9 \strokec9 ?:\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ;\
\}\
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Subscription types
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 interface\cf7 \strokec7  \cf11 \strokec11 UserSubscription\cf7 \strokec7  \{\
  status\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'active'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'trialing'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'past_due'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'canceled'\cf7 \strokec7 ;\
  plan\cf9 \strokec9 ?:\cf7 \strokec7  \cf10 \strokec10 'premium'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'free'\cf7 \strokec7 ;\
\}\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 4.2 Data Invariants (MUST ENFORCE AT ALL TIMES)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Guest Uniqueness
\f1\b0 : 
\f2\fs26 guests[].name
\f1\fs24  are globally unique keys\
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Bidirectional Adjacency
\f1\b0 : If 
\f2\fs26 adjacents[A]
\f1\fs24  contains B, then 
\f2\fs26 adjacents[B]
\f1\fs24  contains A\
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Degree Constraint
\f1\b0 : 
\f2\fs26 adjacents[guest].length \uc0\u8804  2
\f1\fs24  for all guests\
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Symmetric Constraints
\f1\b0 : If A 
\f2\fs26 must
\f1\fs24 /
\f2\fs26 cannot
\f1\fs24  sit with B, then B 
\f2\fs26 must
\f1\fs24 /
\f2\fs26 cannot
\f1\fs24  sit with A\
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Valid References
\f1\b0 : All 
\f2\fs26 assignments
\f1\fs24  values reference existing 
\f2\fs26 tables[].id
\f1\fs24 \
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Bounded Values
\f1\b0 : 
\f2\fs26 guest.count \uc0\u8712  [1,50]
\f1\fs24 , 
\f2\fs26 table.seats \uc0\u8712  [1,100]
\f1\fs24 \
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Table ID Sequence
\f1\b0 : 
\f2\fs26 tables[].id
\f1\fs24  are unique positive integers\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 5. State Management Architecture\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 5.1 AppContext Reducer Actions (COMPLETE SIGNATURES)\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // EXACT ACTION SIGNATURES - Used by all components
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 type\cf7 \strokec7  \cf11 \strokec11 AppAction\cf7 \strokec7  \cf9 \strokec9 =\cf7 \strokec7 \
  
\f5\i \cf6 \strokec6 // Guest Management
\f1\i0 \cf7 \strokec7 \
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'ADD_GUESTS'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  Guest[] \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'SET_GUESTS'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  Guest[] \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'REMOVE_GUEST'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7  \}        
\f5\i \cf6 \strokec6 // Index in array
\f1\i0 \cf7 \strokec7 \
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'RENAME_GUEST'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \{ index\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 ; name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7  \} \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'UPDATE_GUEST_COUNT'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \{ index\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 ; count\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7  \} \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'CLEAR_GUESTS'\cf7 \strokec7  \}\
  \
  
\f5\i \cf6 \strokec6 // Constraints (Bidirectional)
\f1\i0 \cf7 \strokec7 \
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'SET_CONSTRAINT'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \{ guest1\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ; guest2\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ; value\cf9 \strokec9 :\cf7 \strokec7  Constraint \} \}\
  \
  
\f5\i \cf6 \strokec6 // Adjacency (CRITICAL - Must maintain symmetry and degree \uc0\u8804  2)
\f1\i0 \cf7 \strokec7 \
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'SET_ADJACENT'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \{ guest1\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ; guest2\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7  \} \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'REMOVE_ADJACENT'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \{ guest1\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ; guest2\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7  \} \}\
  \
  
\f5\i \cf6 \strokec6 // Tables
\f1\i0 \cf7 \strokec7 \
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'ADD_TABLE'\cf7 \strokec7  \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'REMOVE_TABLE'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7  \}        
\f5\i \cf6 \strokec6 // Table ID
\f1\i0 \cf7 \strokec7 \
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'UPDATE_TABLE_SEATS'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \{ id\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 ; seats\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7  \} \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'UPDATE_TABLE_NAME'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \{ id\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 ; name\cf9 \strokec9 ?:\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7  \} \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'UPDATE_DEFAULT_TABLES'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  Table[] \}\
  \
  
\f5\i \cf6 \strokec6 // Assignments
\f1\i0 \cf7 \strokec7 \
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'UPDATE_ASSIGNMENT'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ; tables\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7  \} \}\
  \
  
\f5\i \cf6 \strokec6 // Plans
\f1\i0 \cf7 \strokec7 \
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'SET_SEATING_PLANS'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  SeatingPlan[] \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'SET_CURRENT_PLAN_INDEX'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7  \}\
  \
  
\f5\i \cf6 \strokec6 // Session Management
\f1\i0 \cf7 \strokec7 \
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'SET_SUBSCRIPTION'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  UserSubscription \cf9 \strokec9 |\cf7 \strokec7  \cf8 \strokec8 null\cf7 \strokec7  \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'SET_USER'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 any\cf7 \strokec7  \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'SET_USER_SET_TABLES'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 boolean\cf7 \strokec7  \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'SET_LOADED_SAVED_SETTING'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 boolean\cf7 \strokec7  \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'SET_DUPLICATE_GUESTS'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 [] \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'HIDE_TABLE_REDUCTION_NOTICE'\cf7 \strokec7  \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'IMPORT_STATE'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  AppState \}\
  \cf9 \strokec9 |\cf7 \strokec7  \{ type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'LOAD_STATE'\cf7 \strokec7 ; payload\cf9 \strokec9 :\cf7 \strokec7  AppState \};\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 5.2 Critical Reducer Side Effects (MUST IMPLEMENT CORRECTLY)\
\pard\pardeftab720\sa319\partightenfactor0

\fs24 \cf0 SET_ADJACENT Implementation (FIXED)\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 case\cf7 \strokec7  \cf10 \strokec10 'SET_ADJACENT'\cf9 \strokec9 :\cf7 \strokec7  \{\
  \cf8 \strokec8 const\cf7 \strokec7  \{ guest1, guest2 \} \cf9 \strokec9 =\cf7 \strokec7  action.payload;\
  \cf8 \strokec8 const\cf7 \strokec7  newState \cf9 \strokec9 =\cf7 \strokec7  \{ \cf9 \strokec9 ...\cf7 \strokec7 state \};\
  \
  
\f5\i \cf6 \strokec6 // CRITICAL: Degree enforcement (prophylactic validation)
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 const\cf7 \strokec7  guest1Adjacents \cf9 \strokec9 =\cf7 \strokec7  newState.adjacents[guest1] \cf9 \strokec9 ||\cf7 \strokec7  [];\
  \cf8 \strokec8 const\cf7 \strokec7  guest2Adjacents \cf9 \strokec9 =\cf7 \strokec7  newState.adjacents[guest2] \cf9 \strokec9 ||\cf7 \strokec7  [];\
  \
  
\f5\i \cf6 \strokec6 // Check if adding this would exceed degree limit
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 if\cf7 \strokec7  (\cf9 \strokec9 !\cf7 \strokec7 guest1Adjacents.\cf9 \strokec9 includes\cf7 \strokec7 (guest2) \cf9 \strokec9 &&\cf7 \strokec7  guest1Adjacents.length \cf9 \strokec9 >=\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7 ) \{\
    \cf11 \strokec11 console\cf7 \strokec7 .\cf9 \strokec9 error\cf7 \strokec7 (\cf10 \strokec10 `Cannot add adjacency: \cf7 \strokec7 $\{guest1\}\cf10 \strokec10  already has 2 adjacent pairings`\cf7 \strokec7 );\
    \cf8 \strokec8 return\cf7 \strokec7  state; 
\f5\i \cf6 \strokec6 // Reject the action
\f1\i0 \cf7 \strokec7 \
  \}\
  \
  \cf8 \strokec8 if\cf7 \strokec7  (\cf9 \strokec9 !\cf7 \strokec7 guest2Adjacents.\cf9 \strokec9 includes\cf7 \strokec7 (guest1) \cf9 \strokec9 &&\cf7 \strokec7  guest2Adjacents.length \cf9 \strokec9 >=\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7 ) \{\
    \cf11 \strokec11 console\cf7 \strokec7 .\cf9 \strokec9 error\cf7 \strokec7 (\cf10 \strokec10 `Cannot add adjacency: \cf7 \strokec7 $\{guest2\}\cf10 \strokec10  already has 2 adjacent pairings`\cf7 \strokec7 );\
    \cf8 \strokec8 return\cf7 \strokec7  state; 
\f5\i \cf6 \strokec6 // Reject the action
\f1\i0 \cf7 \strokec7 \
  \}\
  \
  
\f5\i \cf6 \strokec6 // Initialize arrays if needed
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 if\cf7 \strokec7  (\cf9 \strokec9 !\cf7 \strokec7 newState.adjacents[guest1]) newState.adjacents[guest1] \cf9 \strokec9 =\cf7 \strokec7  [];\
  \cf8 \strokec8 if\cf7 \strokec7  (\cf9 \strokec9 !\cf7 \strokec7 newState.adjacents[guest2]) newState.adjacents[guest2] \cf9 \strokec9 =\cf7 \strokec7  [];\
  \
  
\f5\i \cf6 \strokec6 // Add bidirectional relationship
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 if\cf7 \strokec7  (\cf9 \strokec9 !\cf7 \strokec7 newState.adjacents[guest1].\cf9 \strokec9 includes\cf7 \strokec7 (guest2)) \{\
    newState.adjacents[guest1].\cf9 \strokec9 push\cf7 \strokec7 (guest2);\
  \}\
  \cf8 \strokec8 if\cf7 \strokec7  (\cf9 \strokec9 !\cf7 \strokec7 newState.adjacents[guest2].\cf9 \strokec9 includes\cf7 \strokec7 (guest1)) \{\
    newState.adjacents[guest2].\cf9 \strokec9 push\cf7 \strokec7 (guest1);\
  \}\
  \
  \cf8 \strokec8 return\cf7 \strokec7  newState;\
\}\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b \cf0 \strokec2 RENAME_GUEST Implementation (NEEDS FIXING)\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 case\cf7 \strokec7  \cf10 \strokec10 'RENAME_GUEST'\cf9 \strokec9 :\cf7 \strokec7  \{\
  \cf8 \strokec8 const\cf7 \strokec7  \{ index, name \} \cf9 \strokec9 =\cf7 \strokec7  action.payload;\
  \cf8 \strokec8 const\cf7 \strokec7  newState \cf9 \strokec9 =\cf7 \strokec7  \{ \cf9 \strokec9 ...\cf7 \strokec7 state \};\
  \cf8 \strokec8 const\cf7 \strokec7  oldName \cf9 \strokec9 =\cf7 \strokec7  newState.guests[index].name;\
  \
  
\f5\i \cf6 \strokec6 // Update guest name
\f1\i0 \cf7 \strokec7 \
  newState.guests[index].name \cf9 \strokec9 =\cf7 \strokec7  name;\
  \
  
\f5\i \cf6 \strokec6 // CRITICAL: Propagate name change to all references
\f1\i0 \cf7 \strokec7 \
  
\f5\i \cf6 \strokec6 // Update constraints
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 if\cf7 \strokec7  (newState.constraints[oldName]) \{\
    newState.constraints[name] \cf9 \strokec9 =\cf7 \strokec7  newState.constraints[oldName];\
    \cf8 \strokec8 delete\cf7 \strokec7  newState.constraints[oldName];\
  \}\
  \
  
\f5\i \cf6 \strokec6 // Update constraint references
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  [guest, constraints] \cf8 \strokec8 of\cf7 \strokec7  \cf11 \strokec11 Object\cf7 \strokec7 .\cf9 \strokec9 entries\cf7 \strokec7 (newState.constraints)) \{\
    \cf8 \strokec8 if\cf7 \strokec7  (constraints[oldName]) \{\
      constraints[name] \cf9 \strokec9 =\cf7 \strokec7  constraints[oldName];\
      \cf8 \strokec8 delete\cf7 \strokec7  constraints[oldName];\
    \}\
  \}\
  \
  
\f5\i \cf6 \strokec6 // Update adjacents
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 if\cf7 \strokec7  (newState.adjacents[oldName]) \{\
    newState.adjacents[name] \cf9 \strokec9 =\cf7 \strokec7  newState.adjacents[oldName];\
    \cf8 \strokec8 delete\cf7 \strokec7  newState.adjacents[oldName];\
  \}\
  \
  
\f5\i \cf6 \strokec6 // Update adjacent references
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  [guest, adjacents] \cf8 \strokec8 of\cf7 \strokec7  \cf11 \strokec11 Object\cf7 \strokec7 .\cf9 \strokec9 entries\cf7 \strokec7 (newState.adjacents)) \{\
    \cf8 \strokec8 const\cf7 \strokec7  index \cf9 \strokec9 =\cf7 \strokec7  adjacents.\cf9 \strokec9 indexOf\cf7 \strokec7 (oldName);\
    \cf8 \strokec8 if\cf7 \strokec7  (index \cf9 \strokec9 !==\cf7 \strokec7  \cf9 \strokec9 -\cf11 \strokec11 1\cf7 \strokec7 ) \{\
      adjacents[index] \cf9 \strokec9 =\cf7 \strokec7  name;\
    \}\
  \}\
  \
  
\f5\i \cf6 \strokec6 // Update assignments
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 if\cf7 \strokec7  (newState.assignments[oldName]) \{\
    newState.assignments[name] \cf9 \strokec9 =\cf7 \strokec7  newState.assignments[oldName];\
    \cf8 \strokec8 delete\cf7 \strokec7  newState.assignments[oldName];\
  \}\
  \
  \cf8 \strokec8 return\cf7 \strokec7  newState;\
\}\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 6. Adjacency Engine: Axiomatic Framework\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 6.1 Mathematical Foundation\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 \strokec2 The adjacency engine is built on three immutable axioms that define valid configurations:\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // AXIOM 1: Two guests can never form a closed loop
\f1\i0 \cf7 \strokec7 \

\f5\i \cf6 \strokec6 // Mathematical proof: A loop requires \uc0\u8805 3 vertices
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 is2GuestChainValid\cf7 \strokec7 (chain\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 [])\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 boolean\cf7 \strokec7  \{\
  \cf8 \strokec8 return\cf7 \strokec7  chain.length \cf9 \strokec9 ===\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7 ; 
\f5\i \cf6 \strokec6 // Always valid except for capacity
\f1\i0 \cf7 \strokec7 \
\}\
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // AXIOM 2: Maximum degree constraint
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 hasValidDegrees\cf7 \strokec7 (adjacents\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf7 \strokec7 []\cf9 \strokec9 >\cf7 \strokec7 )\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 boolean\cf7 \strokec7  \{\
  \cf8 \strokec8 return\cf7 \strokec7  \cf11 \strokec11 Object\cf7 \strokec7 .\cf9 \strokec9 values\cf7 \strokec7 (adjacents).\cf9 \strokec9 every\cf7 \strokec7 (list \cf9 \strokec9 =>\cf7 \strokec7  list.length \cf9 \strokec9 <=\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7 );\
\}\
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // AXIOM 3: Chains of 3+ guests need exactly 2 endpoints
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 hasValidEndpoints\cf7 \strokec7 (chain\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 [], adjacents\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf7 \strokec7 []\cf9 \strokec9 >\cf7 \strokec7 )\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 boolean\cf7 \strokec7  \{\
  \cf8 \strokec8 const\cf7 \strokec7  endpoints \cf9 \strokec9 =\cf7 \strokec7  chain.\cf9 \strokec9 filter\cf7 \strokec7 (guest \cf9 \strokec9 =>\cf7 \strokec7  adjacents[guest].length \cf9 \strokec9 ===\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7 );\
  \cf8 \strokec8 return\cf7 \strokec7  endpoints.length \cf9 \strokec9 >=\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7 ;\
\}\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 6.2 Validation Algorithm (CORRECT IMPLEMENTATION)\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 detectAdjacentPairingConflicts\cf7 \strokec7 (\
  guests\cf9 \strokec9 :\cf7 \strokec7  Guest[],\
  tables\cf9 \strokec9 :\cf7 \strokec7  Table[],\
  adjacents\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf7 \strokec7 []\cf9 \strokec9 >\cf7 \strokec7 \
)\cf9 \strokec9 :\cf7 \strokec7  ConstraintConflict[] \{\
  \cf8 \strokec8 const\cf7 \strokec7  conflicts\cf9 \strokec9 :\cf7 \strokec7  ConstraintConflict[] \cf9 \strokec9 =\cf7 \strokec7  [];\
  \
  \cf8 \strokec8 if\cf7 \strokec7  (\cf9 \strokec9 !\cf7 \strokec7 tables.length \cf9 \strokec9 ||\cf7 \strokec7  \cf9 \strokec9 !\cf11 \strokec11 Object\cf7 \strokec7 .\cf9 \strokec9 keys\cf7 \strokec7 (adjacents).length) \{\
    \cf8 \strokec8 return\cf7 \strokec7  conflicts;\
  \}\
  \
  
\f5\i \cf6 \strokec6 // Get minimum table capacity (FIXED: removed erroneous 0)
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 const\cf7 \strokec7  minTableCapacity \cf9 \strokec9 =\cf7 \strokec7  \cf11 \strokec11 Math\cf7 \strokec7 .\cf9 \strokec9 min\cf7 \strokec7 (\cf9 \strokec9 ...\cf7 \strokec7 tables.\cf9 \strokec9 map\cf7 \strokec7 (t \cf9 \strokec9 =>\cf7 \strokec7  t.seats));\
  \cf8 \strokec8 const\cf7 \strokec7  present \cf9 \strokec9 =\cf7 \strokec7  \cf8 \strokec8 new\cf7 \strokec7  \cf11 \strokec11 Set\cf7 \strokec7 (guests.\cf9 \strokec9 map\cf7 \strokec7 (g \cf9 \strokec9 =>\cf7 \strokec7  g.name));\
  \cf8 \strokec8 const\cf7 \strokec7  countBy \cf9 \strokec9 =\cf7 \strokec7  \cf8 \strokec8 new\cf7 \strokec7  \cf11 \strokec11 Map\cf7 \strokec7 (guests.\cf9 \strokec9 map\cf7 \strokec7 (g \cf9 \strokec9 =>\cf7 \strokec7  [g.name, g.count]));\
  \
  
\f5\i \cf6 \strokec6 // Build restricted undirected graph on present guests
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 const\cf7 \strokec7  graph \cf9 \strokec9 =\cf7 \strokec7  \cf8 \strokec8 new\cf7 \strokec7  \cf11 \strokec11 Map\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 ,\cf11 \strokec11  Set\cf9 \strokec9 <\cf10 \strokec10 string\cf9 \strokec9 >>\cf7 \strokec7 ();\
  \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  name \cf8 \strokec8 of\cf7 \strokec7  present) graph.\cf9 \strokec9 set\cf7 \strokec7 (name, \cf8 \strokec8 new\cf7 \strokec7  \cf11 \strokec11 Set\cf7 \strokec7 ());\
  \
  \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  [a, list] \cf8 \strokec8 of\cf7 \strokec7  \cf11 \strokec11 Object\cf7 \strokec7 .\cf9 \strokec9 entries\cf7 \strokec7 (adjacents)) \{\
    \cf8 \strokec8 if\cf7 \strokec7  (\cf9 \strokec9 !\cf7 \strokec7 present.\cf9 \strokec9 has\cf7 \strokec7 (a)) \cf8 \strokec8 continue\cf7 \strokec7 ;\
    \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  b \cf8 \strokec8 of\cf7 \strokec7  list \cf9 \strokec9 ||\cf7 \strokec7  []) \{\
      \cf8 \strokec8 if\cf7 \strokec7  (\cf9 \strokec9 !\cf7 \strokec7 present.\cf9 \strokec9 has\cf7 \strokec7 (b) \cf9 \strokec9 ||\cf7 \strokec7  a \cf9 \strokec9 ===\cf7 \strokec7  b) \cf8 \strokec8 continue\cf7 \strokec7 ;\
      graph.\cf9 \strokec9 get\cf7 \strokec7 (a)\cf9 \strokec9 !\cf7 \strokec7 .\cf9 \strokec9 add\cf7 \strokec7 (b);\
      graph.\cf9 \strokec9 get\cf7 \strokec7 (b)\cf9 \strokec9 !\cf7 \strokec7 .\cf9 \strokec9 add\cf7 \strokec7 (a);\
    \}\
  \}\
  \
  
\f5\i \cf6 \strokec6 // CRITICAL: Check degree violations first
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  [name, neighbors] \cf8 \strokec8 of\cf7 \strokec7  graph.\cf9 \strokec9 entries\cf7 \strokec7 ()) \{\
    \cf8 \strokec8 if\cf7 \strokec7  (neighbors.size \cf9 \strokec9 >\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7 ) \{\
      conflicts.\cf9 \strokec9 push\cf7 \strokec7 (\{\
        id\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 `degree-violation-\cf7 \strokec7 $\{\cf11 \strokec11 Date\cf7 \strokec7 .\cf9 \strokec9 now\cf7 \strokec7 ()\}\cf10 \strokec10 -\cf7 \strokec7 $\{\cf11 \strokec11 Math\cf7 \strokec7 .\cf9 \strokec9 random\cf7 \strokec7 ()\}\cf10 \strokec10 `\cf7 \strokec7 ,\
        type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'adjacency_violation'\cf7 \strokec7 ,\
        severity\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'critical'\cf7 \strokec7 ,\
        description\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 `\cf7 \strokec7 $\{name\}\cf10 \strokec10  has too many adjacent pairings (\cf7 \strokec7 $\{neighbors.size\}\cf10 \strokec10  > 2 maximum)`\cf7 \strokec7 ,\
        affectedGuests\cf9 \strokec9 :\cf7 \strokec7  [name, \cf9 \strokec9 ...\cf11 \strokec11 Array\cf7 \strokec7 .\cf8 \strokec8 from\cf7 \strokec7 (neighbors)]\
      \});\
    \}\
  \}\
  \
  
\f5\i \cf6 \strokec6 // Find connected components (chains)
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 const\cf7 \strokec7  visited \cf9 \strokec9 =\cf7 \strokec7  \cf8 \strokec8 new\cf7 \strokec7  \cf11 \strokec11 Set\cf9 \strokec9 <\cf10 \strokec10 string\cf9 \strokec9 >\cf7 \strokec7 ();\
  \cf8 \strokec8 const\cf7 \strokec7  chains\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 [][] \cf9 \strokec9 =\cf7 \strokec7  [];\
  \
  \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  startNode \cf8 \strokec8 of\cf7 \strokec7  present) \{\
    \cf8 \strokec8 if\cf7 \strokec7  (visited.\cf9 \strokec9 has\cf7 \strokec7 (startNode)) \cf8 \strokec8 continue\cf7 \strokec7 ;\
    \
    \cf8 \strokec8 const\cf7 \strokec7  component\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 [] \cf9 \strokec9 =\cf7 \strokec7  [];\
    \cf8 \strokec8 const\cf7 \strokec7  stack \cf9 \strokec9 =\cf7 \strokec7  [startNode];\
    \cf8 \strokec8 let\cf7 \strokec7  hasEdges \cf9 \strokec9 =\cf7 \strokec7  graph.\cf9 \strokec9 get\cf7 \strokec7 (startNode)\cf9 \strokec9 !\cf7 \strokec7 .size \cf9 \strokec9 >\cf7 \strokec7  \cf11 \strokec11 0\cf7 \strokec7 ;\
    \
    \cf8 \strokec8 while\cf7 \strokec7  (stack.length) \{\
      \cf8 \strokec8 const\cf7 \strokec7  node \cf9 \strokec9 =\cf7 \strokec7  stack.\cf9 \strokec9 pop\cf7 \strokec7 ()\cf9 \strokec9 !\cf7 \strokec7 ;\
      \cf8 \strokec8 if\cf7 \strokec7  (visited.\cf9 \strokec9 has\cf7 \strokec7 (node)) \cf8 \strokec8 continue\cf7 \strokec7 ;\
      \
      visited.\cf9 \strokec9 add\cf7 \strokec7 (node);\
      component.\cf9 \strokec9 push\cf7 \strokec7 (node);\
      \
      \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  neighbor \cf8 \strokec8 of\cf7 \strokec7  graph.\cf9 \strokec9 get\cf7 \strokec7 (node) \cf9 \strokec9 ||\cf7 \strokec7  []) \{\
        \cf8 \strokec8 if\cf7 \strokec7  (\cf9 \strokec9 !\cf7 \strokec7 visited.\cf9 \strokec9 has\cf7 \strokec7 (neighbor)) \{\
          stack.\cf9 \strokec9 push\cf7 \strokec7 (neighbor);\
          hasEdges \cf9 \strokec9 =\cf7 \strokec7  \cf11 \strokec11 true\cf7 \strokec7 ;\
        \}\
      \}\
    \}\
    \
    \cf8 \strokec8 if\cf7 \strokec7  (hasEdges) chains.\cf9 \strokec9 push\cf7 \strokec7 (component);\
  \}\
  \
  
\f5\i \cf6 \strokec6 // Validate each chain
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  chain \cf8 \strokec8 of\cf7 \strokec7  chains) \{\
    \cf8 \strokec8 const\cf7 \strokec7  totalSeats \cf9 \strokec9 =\cf7 \strokec7  chain.\cf9 \strokec9 reduce\cf7 \strokec7 ((sum, name) \cf9 \strokec9 =>\cf7 \strokec7  \
      sum \cf9 \strokec9 +\cf7 \strokec7  (countBy.\cf9 \strokec9 get\cf7 \strokec7 (name) \cf9 \strokec9 ||\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7 ), \cf11 \strokec11 0\cf7 \strokec7 \
    );\
    \
    
\f5\i \cf6 \strokec6 // AXIOM 1: 2-guest chains are never circular - only check capacity
\f1\i0 \cf7 \strokec7 \
    \cf8 \strokec8 if\cf7 \strokec7  (chain.length \cf9 \strokec9 ===\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7 ) \{\
      \cf8 \strokec8 if\cf7 \strokec7  (totalSeats \cf9 \strokec9 >\cf7 \strokec7  minTableCapacity) \{\
        conflicts.\cf9 \strokec9 push\cf7 \strokec7 (\{\
          id\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 `capacity-adjacent-\cf7 \strokec7 $\{\cf11 \strokec11 Date\cf7 \strokec7 .\cf9 \strokec9 now\cf7 \strokec7 ()\}\cf10 \strokec10 -\cf7 \strokec7 $\{\cf11 \strokec11 Math\cf7 \strokec7 .\cf9 \strokec9 random\cf7 \strokec7 ()\}\cf10 \strokec10 `\cf7 \strokec7 ,\
          type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'capacity_violation'\cf7 \strokec7 ,\
          severity\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'high'\cf7 \strokec7 ,\
          description\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 `Adjacent pair \cf7 \strokec7 $\{chain.\cf9 \strokec9 join\cf7 \strokec7 (\cf10 \strokec10 ' & '\cf7 \strokec7 )\}\cf10 \strokec10  needs \cf7 \strokec7 $\{totalSeats\}\cf10 \strokec10  seats but smallest table has \cf7 \strokec7 $\{minTableCapacity\}\cf10 \strokec10 `\cf7 \strokec7 ,\
          affectedGuests\cf9 \strokec9 :\cf7 \strokec7  chain\
        \});\
      \}\
      \cf8 \strokec8 continue\cf7 \strokec7 ; 
\f5\i \cf6 \strokec6 // Skip endpoint check for 2-guest chains
\f1\i0 \cf7 \strokec7 \
    \}\
    \
    
\f5\i \cf6 \strokec6 // AXIOM 3: For 3+ guest chains, check BOTH conditions
\f1\i0 \cf7 \strokec7 \
    \
    
\f5\i \cf6 \strokec6 // Condition A: Capacity constraint
\f1\i0 \cf7 \strokec7 \
    \cf8 \strokec8 if\cf7 \strokec7  (totalSeats \cf9 \strokec9 >\cf7 \strokec7  minTableCapacity) \{\
      conflicts.\cf9 \strokec9 push\cf7 \strokec7 (\{\
        id\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 `capacity-adjacent-\cf7 \strokec7 $\{\cf11 \strokec11 Date\cf7 \strokec7 .\cf9 \strokec9 now\cf7 \strokec7 ()\}\cf10 \strokec10 -\cf7 \strokec7 $\{\cf11 \strokec11 Math\cf7 \strokec7 .\cf9 \strokec9 random\cf7 \strokec7 ()\}\cf10 \strokec10 `\cf7 \strokec7 ,\
        type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'capacity_violation'\cf7 \strokec7 ,\
        severity\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'high'\cf7 \strokec7 ,\
        description\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 `Adjacent chain \cf7 \strokec7 $\{chain.\cf9 \strokec9 join\cf7 \strokec7 (\cf10 \strokec10 ' \uc0\u8594  '\cf7 \strokec7 )\}\cf10 \strokec10  needs \cf7 \strokec7 $\{totalSeats\}\cf10 \strokec10  seats but smallest table has \cf7 \strokec7 $\{minTableCapacity\}\cf10 \strokec10 `\cf7 \strokec7 ,\
        affectedGuests\cf9 \strokec9 :\cf7 \strokec7  chain\
      \});\
      \cf8 \strokec8 continue\cf7 \strokec7 ; 
\f5\i \cf6 \strokec6 // Skip endpoint check if capacity already violated
\f1\i0 \cf7 \strokec7 \
    \}\
    \
    
\f5\i \cf6 \strokec6 // Condition B: Endpoint constraint
\f1\i0 \cf7 \strokec7 \
    \cf8 \strokec8 const\cf7 \strokec7  endpoints \cf9 \strokec9 =\cf7 \strokec7  chain.\cf9 \strokec9 filter\cf7 \strokec7 (name \cf9 \strokec9 =>\cf7 \strokec7  \
      (graph.\cf9 \strokec9 get\cf7 \strokec7 (name) \cf9 \strokec9 ||\cf7 \strokec7  \cf8 \strokec8 new\cf7 \strokec7  \cf11 \strokec11 Set\cf7 \strokec7 ()).size \cf9 \strokec9 ===\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7 \
    );\
    \
    \cf8 \strokec8 if\cf7 \strokec7  (endpoints.length \cf9 \strokec9 <\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7 ) \{\
      conflicts.\cf9 \strokec9 push\cf7 \strokec7 (\{\
        id\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 `loop-adjacent-\cf7 \strokec7 $\{\cf11 \strokec11 Date\cf7 \strokec7 .\cf9 \strokec9 now\cf7 \strokec7 ()\}\cf10 \strokec10 -\cf7 \strokec7 $\{\cf11 \strokec11 Math\cf7 \strokec7 .\cf9 \strokec9 random\cf7 \strokec7 ()\}\cf10 \strokec10 `\cf7 \strokec7 ,\
        type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'circular'\cf7 \strokec7 ,\
        severity\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'high'\cf7 \strokec7 ,\
        description\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 `Adjacent chain forms a closed loop: \cf7 \strokec7 $\{chain.\cf9 \strokec9 join\cf7 \strokec7 (\cf10 \strokec10 ' \uc0\u8594  '\cf7 \strokec7 )\}\cf10 \strokec10  (has \cf7 \strokec7 $\{endpoints.length\}\cf10 \strokec10  endpoints, needs 2)`\cf7 \strokec7 ,\
        affectedGuests\cf9 \strokec9 :\cf7 \strokec7  chain\
      \});\
    \}\
  \}\
  \
  \cf8 \strokec8 return\cf7 \strokec7  conflicts;\
\}\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 6.3 Group Formation Algorithm (IMPLICIT MUST MODEL)\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 buildAtomicGroups\cf7 \strokec7 (\
  guests\cf9 \strokec9 :\cf7 \strokec7  Guest[],\
  constraints\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , Constraint\cf9 \strokec9 >>\cf7 \strokec7 ,\
  adjacents\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf7 \strokec7 []\cf9 \strokec9 >\cf7 \strokec7 \
)\cf9 \strokec9 :\cf7 \strokec7  AtomicGroup[] \{\
  \cf8 \strokec8 const\cf7 \strokec7  unionFind \cf9 \strokec9 =\cf7 \strokec7  \cf8 \strokec8 new\cf7 \strokec7  \cf11 \strokec11 OptimizedUnionFind\cf7 \strokec7 ();\
  \cf8 \strokec8 const\cf7 \strokec7  guestMap \cf9 \strokec9 =\cf7 \strokec7  \cf8 \strokec8 new\cf7 \strokec7  \cf11 \strokec11 Map\cf7 \strokec7 (guests.\cf9 \strokec9 map\cf7 \strokec7 (g \cf9 \strokec9 =>\cf7 \strokec7  [g.name, g]));\
  \
  
\f5\i \cf6 \strokec6 // Initialize all guests
\f1\i0 \cf7 \strokec7 \
  guests.\cf9 \strokec9 forEach\cf7 \strokec7 (g \cf9 \strokec9 =>\cf7 \strokec7  unionFind.\cf9 \strokec9 find\cf7 \strokec7 (g.name));\
  \
  
\f5\i \cf6 \strokec6 // Union guests with explicit 'must' constraints
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  [guest1, guestConstraints] \cf8 \strokec8 of\cf7 \strokec7  \cf11 \strokec11 Object\cf7 \strokec7 .\cf9 \strokec9 entries\cf7 \strokec7 (constraints)) \{\
    \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  [guest2, constraint] \cf8 \strokec8 of\cf7 \strokec7  \cf11 \strokec11 Object\cf7 \strokec7 .\cf9 \strokec9 entries\cf7 \strokec7 (guestConstraints)) \{\
      \cf8 \strokec8 if\cf7 \strokec7  (constraint \cf9 \strokec9 ===\cf7 \strokec7  \cf10 \strokec10 'must'\cf7 \strokec7 ) \{\
        unionFind.\cf9 \strokec9 union\cf7 \strokec7 (guest1, guest2);\
      \}\
    \}\
  \}\
  \
  
\f5\i \cf6 \strokec6 // IMPLICIT MUST: Union guests with adjacency requirements
\f1\i0 \cf7 \strokec7 \
  
\f5\i \cf6 \strokec6 // Adjacency implies they must sit at the same table
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  [guest1, adjacentList] \cf8 \strokec8 of\cf7 \strokec7  \cf11 \strokec11 Object\cf7 \strokec7 .\cf9 \strokec9 entries\cf7 \strokec7 (adjacents)) \{\
    \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  guest2 \cf8 \strokec8 of\cf7 \strokec7  adjacentList \cf9 \strokec9 ||\cf7 \strokec7  []) \{\
      \cf8 \strokec8 if\cf7 \strokec7  (guest1 \cf9 \strokec9 ===\cf7 \strokec7  guest2) \cf8 \strokec8 continue\cf7 \strokec7 ;\
      \cf8 \strokec8 if\cf7 \strokec7  (guestMap.\cf9 \strokec9 has\cf7 \strokec7 (guest1) \cf9 \strokec9 &&\cf7 \strokec7  guestMap.\cf9 \strokec9 has\cf7 \strokec7 (guest2)) \{\
        unionFind.\cf9 \strokec9 union\cf7 \strokec7 (guest1, guest2);\
      \}\
    \}\
  \}\
  \
  \cf8 \strokec8 return\cf7 \strokec7  unionFind.\cf9 \strokec9 getGroups\cf7 \strokec7 ().\cf9 \strokec9 map\cf7 \strokec7 ((groupNames\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 []) \cf9 \strokec9 =>\cf7 \strokec7  \{\
    \cf8 \strokec8 const\cf7 \strokec7  units \cf9 \strokec9 =\cf7 \strokec7  groupNames\
      .\cf9 \strokec9 map\cf7 \strokec7 ((name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ) \cf9 \strokec9 =>\cf7 \strokec7  guestMap.\cf9 \strokec9 get\cf7 \strokec7 (name))\
      .\cf9 \strokec9 filter\cf7 \strokec7 ((g)\cf9 \strokec9 :\cf7 \strokec7  g \cf8 \strokec8 is\cf7 \strokec7  Guest \cf9 \strokec9 =>\cf7 \strokec7  \cf9 \strokec9 !!\cf7 \strokec7 g);\
    \cf8 \strokec8 const\cf7 \strokec7  totalCount \cf9 \strokec9 =\cf7 \strokec7  units.\cf9 \strokec9 reduce\cf7 \strokec7 ((sum, u) \cf9 \strokec9 =>\cf7 \strokec7  sum \cf9 \strokec9 +\cf7 \strokec7  u.count, \cf11 \strokec11 0\cf7 \strokec7 );\
    \cf8 \strokec8 const\cf7 \strokec7  priority \cf9 \strokec9 =\cf7 \strokec7  units.\cf9 \strokec9 some\cf7 \strokec7 (u \cf9 \strokec9 =>\cf7 \strokec7  \cf10 \strokec10 /bride|groom/i\cf7 \strokec7 .\cf9 \strokec9 test\cf7 \strokec7 (u.name)) \cf9 \strokec9 ?\cf7 \strokec7  \cf11 \strokec11 25\cf7 \strokec7  \cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 0\cf7 \strokec7 ;\
    \cf8 \strokec8 return\cf7 \strokec7  \{ units, totalCount, priority \};\
  \});\
\}\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 7. Critical Bugs & Definitive Solutions\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 7.1 \uc0\u9989  RESOLVED: Adjacency Detection Engine (COMPLETE FIX IMPLEMENTED)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 Status
\f1\b0 \strokec2 : FIXED in current codebase\uc0\u8232 
\f0\b \strokec2 Files
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 src/utils/seatingAlgorithm.ts
\f1\fs24 \strokec2 \uc0\u8232 
\f0\b \strokec2 Previous Issues
\f1\b0 \strokec2 :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls8\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Math.min(...tables.map(t => t.seats), 0)
\f1\fs24  always returned 0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls8\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 2-guest chains incorrectly checked for circular conflicts\
\ls8\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 No degree > 2 enforcement\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 Solution Applied
\f1\b0 \strokec2 : See Section 6.2 for complete correct implementation\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 7.2 \uc0\u9989  RESOLVED: UI Rendering Synchronization (DECLARATIVE MODEL)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 Status
\f1\b0 \strokec2 : FIXED via declarative precedence rendering\uc0\u8232 
\f0\b \strokec2 Files
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 src/pages/ConstraintManager.tsx
\f1\fs24 \strokec2 , 
\f2\fs26 \strokec2 src/components/ConstraintManager.tsx
\f1\fs24 \strokec2 \uc0\u8232 
\f0\b \strokec2 Solution
\f1\b0 \strokec2 : Rendering precedence model eliminates state coupling issues\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 7.3 \uc0\u9989  RESOLVED: Must Constraint Cycle Detection (ONTOLOGICAL CORRECTION)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 Status
\f1\b0 \strokec2 : FIXED via Union-Find algorithm\uc0\u8232 
\f0\b \strokec2 Solution
\f1\b0 \strokec2 : Cycles in 
\f2\fs26 \strokec2 must
\f1\fs24 \strokec2  constraints are valid; only capacity matters\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 7.4 \uc0\u55357 \u57000  CRITICAL OUTSTANDING: Guest Name Propagation\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 File
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 src/context/AppContext.tsx
\f1\fs24 \strokec2 \uc0\u8232 
\f0\b \strokec2 Issue
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 RENAME_GUEST
\f1\fs24 \strokec2  doesn't update constraints/adjacents/assignments\uc0\u8232 
\f0\b \strokec2 Impact
\f1\b0 \strokec2 : Data corruption, lost guest rules\uc0\u8232 
\f0\b \strokec2 Priority
\f1\b0 \strokec2 : BLOCKER\

\f0\b \strokec2 Required Fix
\f1\b0 \strokec2 : See Section 5.2 for complete implementation\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 7.5 \uc0\u55357 \u57000  SECURITY CRITICAL: Hardcoded Admin Access\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 File
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 src/components/BetaCodeAdmin.tsx
\f1\fs24 \strokec2  (referenced but not provided)\uc0\u8232 
\f0\b \strokec2 Issue
\f1\b0 \strokec2 : Client-side hardcoded admin email list\uc0\u8232 
\f0\b \strokec2 Impact
\f1\b0 \strokec2 : Trivially bypassable security\uc0\u8232 
\f0\b \strokec2 Priority
\f1\b0 \strokec2 : SECURITY BLOCKER\

\f0\b \strokec2 Required Fix
\f1\b0 \strokec2 :\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // REMOVE CLIENT-SIDE ADMIN CHECK
\f1\i0 \cf7 \strokec7 \

\f5\i \cf6 \strokec6 // IMPLEMENT SERVER-SIDE ROLE VERIFICATION
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 const\cf7 \strokec7  \cf9 \strokec9 checkAdminStatus\cf7 \strokec7  \cf9 \strokec9 =\cf7 \strokec7  \cf8 \strokec8 async\cf7 \strokec7  (user\cf9 \strokec9 :\cf7 \strokec7  User) \cf9 \strokec9 =>\cf7 \strokec7  \{\
  \cf8 \strokec8 const\cf7 \strokec7  \{ data, error \} \cf9 \strokec9 =\cf7 \strokec7  \cf8 \strokec8 await\cf7 \strokec7  supabase\
    .\cf8 \strokec8 from\cf7 \strokec7 (\cf10 \strokec10 'admin_users'\cf7 \strokec7 )\
    .\cf9 \strokec9 select\cf7 \strokec7 (\cf10 \strokec10 'role'\cf7 \strokec7 )\
    .\cf9 \strokec9 eq\cf7 \strokec7 (\cf10 \strokec10 'user_id'\cf7 \strokec7 , user.id)\
    .\cf9 \strokec9 single\cf7 \strokec7 ();\
    \
  \cf8 \strokec8 return\cf7 \strokec7  data\cf9 \strokec9 ?.\cf7 \strokec7 role \cf9 \strokec9 ===\cf7 \strokec7  \cf10 \strokec10 'admin'\cf7 \strokec7 ;\
\};\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 7.6 \uc0\u9888 \u65039  HIGH: Architectural Code Duplication\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 Files
\f1\b0 \strokec2 :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls9\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 src/pages/AssignmentManager.tsx
\f1\fs24  (lines ~140-280)\
\ls9\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 src/pages/TableManager.tsx
\f1\fs24  (lines ~280-420)\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 Issue
\f1\b0 \strokec2 : Massive duplication of guest assignment UI logic\uc0\u8232 
\f0\b \strokec2 Impact
\f1\b0 \strokec2 : Maintenance overhead, inconsistent behavior\uc0\u8232 
\f0\b \strokec2 Priority
\f1\b0 \strokec2 : HIGH\

\f0\b \strokec2 Required Refactor
\f1\b0 \strokec2 :\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Create src/components/GuestAssignmentGrid.tsx
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 interface\cf7 \strokec7  \cf11 \strokec11 GuestAssignmentGridProps\cf7 \strokec7  \{\
  guests\cf9 \strokec9 :\cf7 \strokec7  Guest[];\
  assignments\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf9 \strokec9 >\cf7 \strokec7 ;\
  constraints\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , Constraint\cf9 \strokec9 >>\cf7 \strokec7 ;\
  adjacents\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf7 \strokec7 []\cf9 \strokec9 >\cf7 \strokec7 ;\
  tables\cf9 \strokec9 :\cf7 \strokec7  Table[];\
  \cf9 \strokec9 onUpdateAssignment:\cf7 \strokec7  (name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 , tables\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ) \cf9 \strokec9 =>\cf7 \strokec7  \cf8 \strokec8 void\cf7 \strokec7 ;\
  \cf9 \strokec9 onUpdateMustConstraints:\cf7 \strokec7  (name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 , mustNames\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ) \cf9 \strokec9 =>\cf7 \strokec7  \cf8 \strokec8 void\cf7 \strokec7 ;\
  \cf9 \strokec9 onUpdateCannotConstraints:\cf7 \strokec7  (name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 , cannotNames\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ) \cf9 \strokec9 =>\cf7 \strokec7  \cf8 \strokec8 void\cf7 \strokec7 ;\
\}\
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Replace duplicated logic in both files
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 7.7 \uc0\u9888 \u65039  MEDIUM: Guest Count Parser Edge Cases\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 File
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 src/utils/guestCount.ts
\f1\fs24 \strokec2 \uc0\u8232 
\f0\b \strokec2 Issues
\f1\b0 \strokec2 :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls10\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "John plus 1" returns 1 (should be 2)\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "two guests" returns 1 (should be 2)\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "Family of five" returns 4 (should be 5)\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 Partial Fixes Applied
\f1\b0 \strokec2 : Improved but not complete\uc0\u8232 
\f0\b \strokec2 Remaining Error Rate
\f1\b0 \strokec2 : ~10-15%\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 8. Module Interdependency Map\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 8.1 Critical Import Chains\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf7 \strokec7 App.tsx\
  \uc0\u9492 \u9472 \u9472  AppContext.tsx (provides state to entire app)\
      \uc0\u9500 \u9472 \u9472  types/index.ts (all type definitions)\
      \uc0\u9492 \u9472 \u9472  Reducer functions (state management logic)\
\
pages/ConstraintManager.tsx\
  \uc0\u9500 \u9472 \u9472  utils/seatingAlgorithm.ts::detectConstraintConflicts() \
  \uc0\u9500 \u9472 \u9472  utils/formatters.ts::getLastNameForSorting()\
  \uc0\u9500 \u9472 \u9472  utils/premium.ts::isPremiumSubscription()\
  \uc0\u9492 \u9472 \u9472  AppContext for state management\
\
pages/SeatingPlanViewer.tsx  \
  \uc0\u9500 \u9472 \u9472  utils/seatingAlgorithm.ts::generateSeatingPlans()\
  \uc0\u9500 \u9472 \u9472  utils/premium.ts::isPremiumSubscription()\
  \uc0\u9500 \u9472 \u9472  lib/supabase.ts (for saving plans)\
  \uc0\u9492 \u9472 \u9472  AppContext for state management\
\
utils/seatingAlgorithm.ts\
  \uc0\u9500 \u9472 \u9472  types/index.ts (Guest, Table, SeatingPlan interfaces)\
  \uc0\u9500 \u9472 \u9472  Internal: OptimizedUnionFind class\
  \uc0\u9500 \u9472 \u9472  Internal: detectAdjacentPairingConflicts function  \
  \uc0\u9492 \u9472 \u9472  Internal: buildAtomicGroups function\
\
utils/guestCount.ts\
  \uc0\u9492 \u9472 \u9472  Standalone (no imports, pure functions)\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 8.2 Data Flow Critical Paths\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf7 \strokec7 USER INPUT \uc0\u8594  ADD_GUESTS \u8594  guestCount::countHeads() \u8594  State Update\
                                 \uc0\u8595 \
                         PARSING ERROR \uc0\u8594  Wrong counts  \
                                 \uc0\u8595 \
                     CAPACITY VIOLATIONS\
\
CONSTRAINT CLICK \uc0\u8594  SET_CONSTRAINT \u8594  State Update \u8594  detectConstraintConflicts()\
                        \uc0\u8595                                 \u8595 \
                  Purge Plans                      Show Conflicts\
\
ADJACENT DOUBLE-\
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf5 \strokec5 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb12 Retry\cb1 \
\pard\pardeftab720\qc\partightenfactor0
\cf5 \
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 DA\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Continue\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf5 \cb12 \strokec5 Edit
\f1\fs24 \cf0 \cb1 \strokec2 \
\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf7 \strokec7 ADJACENT DOUBLE-CLICK \uc0\u8594  SET_ADJACENT \u8594  Degree Check \u8594  State Update \u8594  detectAdjacentPairingConflicts()\
                             \uc0\u8595               \u8595               \u8595                     \u8595 \
                       Select Guest1   Check \uc0\u8804 2 Rule   Symmetric Update   Apply Axioms\
                             \uc0\u8595               \u8595               \u8595                     \u8595 \
                       Select Guest2   Reject if >2   Bidirectional Add   Validate Chains\
                             \uc0\u8595                              \u8595                     \u8595 \
                       Create Pairing                Purge Plans        Show UI Feedback\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 8.3 State Mutation Chain\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf7 \strokec7 User Action \uc0\u8594  Component Handler \u8594  dispatch(Action) \u8594  Reducer Logic \u8594  State Update\
     \uc0\u8595               \u8595                    \u8595                \u8595               \u8595 \
UI Interaction  Event Handler     Action Payload   Validation    Re-render\
     \uc0\u8595               \u8595                    \u8595                \u8595               \u8595 \
Form Submit    onClick/onChange   Type-safe Data   Invariant     useContext\
     \uc0\u8595               \u8595                    \u8595                \u8595               \u8595 \
File Upload    File Processing    Parsed Guests    Degree Cap    Component Update\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 9. Data Flow Diagrams\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 9.1 Complete Constraint Setting Flow\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf7 \strokec7 User Click Cell \uc0\u8594  handleToggleConstraint(guest1, guest2)\
                            \uc0\u8595 \
                  Get currentValue from state.constraints[guest1][guest2]\
                            \uc0\u8595 \
              Cycle: '' \uc0\u8594  'must' \u8594  'cannot' \u8594  ''\
                            \uc0\u8595 \
                  If changing FROM 'must' AND adjacency exists:\
                            \uc0\u8595 \
              dispatch(REMOVE_ADJACENT, \{guest1, guest2\})\
                            \uc0\u8595 \
              dispatch(SET_CONSTRAINT, \{guest1, guest2, value: nextValue\})\
                            \uc0\u8595 \
                  Reducer: Symmetric constraint update\
                            \uc0\u8595 \
                  purgeSeatingPlans() - Clear all generated plans\
                            \uc0\u8595 \
         detectConstraintConflicts() [debounced 300ms]\
                            \uc0\u8595 \
              Update conflicts state \uc0\u8594  Display warnings\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 9.2 Complete Adjacency Flow (With Axiomatic Validation)\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf7 \strokec7 Double-click Guest Header \uc0\u8594  setSelectedGuest(guest1)\
                                    \uc0\u8595 \
                          UI highlights guest1\
                                    \uc0\u8595 \
Double-click Another Guest \uc0\u8594  handleGuestSelect(guest2)\
                                    \uc0\u8595 \
                    Check: selectedGuest !== null && selectedGuest !== guest2\
                                    \uc0\u8595 \
                          DEGREE VALIDATION:\
                          Check guest1 adjacency count \uc0\u8804  1\
                          Check guest2 adjacency count \uc0\u8804  1  \
                                    \uc0\u8595 \
                    If either guest has 2 adjacencies:\
                          Alert user, return early\
                                    \uc0\u8595 \
              dispatch(SET_ADJACENT, \{guest1, guest2\})\
                                    \uc0\u8595 \
              Reducer: Prophylactic degree check + symmetric update\
                                    \uc0\u8595 \
                    setHighlightedPair(\{guest1, guest2\})\
                                    \uc0\u8595 \
                          Clear highlight after 3 seconds\
                                    \uc0\u8595 \
         detectAdjacentPairingConflicts() [debounced 300ms]\
                                    \uc0\u8595 \
                          Apply Adjacency Axioms:\
                          - 2-guest chain: capacity only\
                          - 3+ chain: capacity + endpoints\
                                    \uc0\u8595 \
                    Update conflicts \uc0\u8594  Display validation results\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 9.3 Plan Generation Flow (Complete Engine)\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf7 \strokec7 generateSeatingPlans(guests, tables, constraints, adjacents, assignments, isPremium)\
                            \uc0\u8595 \
              validateConstraints() \uc0\u8594  ValidationError[]\
                            \uc0\u8595 \
         detectConstraintConflicts() \uc0\u8594  ConstraintConflict[]\
                            \uc0\u8595 \
              If critical conflicts: Return \{plans: [], errors\}\
                            \uc0\u8595 \
           buildAtomicGroups(guests, constraints, adjacents)\
                            \uc0\u8595 \
              Union-Find algorithm:\
              1. Union explicit 'must' constraints\
              2. Union implicit 'must' (adjacent pairs)\
              3. Group connected components\
                            \uc0\u8595 \
         Sort groups by priority (bride/groom) and size\
                            \uc0\u8595 \
         Loop: attempts < maxAttempts (isPremium ? 500 : 200)\
                            \uc0\u8595 \
         generateSinglePlan():\
              1. Sort tables by capacity (largest first)\
              2. Place atomic groups on tables\
              3. Order seats using adjacency endpoints\
              4. Assign remaining ungrouped guests\
                            \uc0\u8595 \
              scorePlan():\
              - Adjacent neighbors satisfied\
              - Constraint violations penalized\
              - Table utilization optimized\
                            \uc0\u8595 \
         isPlanSufficientlyUnique()?\
              Compare against existing plans\
                            \uc0\u8595 \
         Add to plans[] (max: isPremium ? 30 : 10)\
                            \uc0\u8595 \
         Return \{plans: SeatingPlan[], errors: ValidationError[]\}\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 10. API Contracts Between Modules\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 10.1 seatingAlgorithm.ts Complete API\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // MAIN ENTRY POINT - Never change signature
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 async\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 generateSeatingPlans\cf7 \strokec7 (\
  guests\cf9 \strokec9 :\cf7 \strokec7  Guest[],\
  tables\cf9 \strokec9 :\cf7 \strokec7  Table[],\
  constraints\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 'must'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'cannot'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 ''\cf9 \strokec9 >>\cf7 \strokec7 ,\
  adjacents\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf7 \strokec7 []\cf9 \strokec9 >\cf7 \strokec7 ,\
  assignments\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf9 \strokec9 >\cf7 \strokec7 ,\
  isPremium\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 boolean\cf7 \strokec7  \cf9 \strokec9 =\cf7 \strokec7  \cf11 \strokec11 false\cf7 \strokec7 \
)\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 Promise\cf9 \strokec9 <\cf7 \strokec7 \{ plans\cf9 \strokec9 :\cf7 \strokec7  SeatingPlan[], errors\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 ValidationError\cf7 \strokec7 [] \}\cf9 \strokec9 >\cf7 \strokec7 \
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // VALIDATION FUNCTIONS
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 detectConstraintConflicts\cf7 \strokec7 (\
  guests\cf9 \strokec9 :\cf7 \strokec7  Guest[],\
  constraints\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 'must'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'cannot'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 ''\cf9 \strokec9 >>\cf7 \strokec7 ,\
  tables\cf9 \strokec9 :\cf7 \strokec7  Table[],\
  checkAdjacents\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 boolean\cf7 \strokec7  \cf9 \strokec9 =\cf7 \strokec7  \cf11 \strokec11 false\cf7 \strokec7 ,\
  adjacents\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf7 \strokec7 []\cf9 \strokec9 >\cf7 \strokec7  \cf9 \strokec9 =\cf7 \strokec7  \{\}\
)\cf9 \strokec9 :\cf7 \strokec7  ConstraintConflict[]\
\
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 detectMustGroupConflicts\cf7 \strokec7 (\
  guests\cf9 \strokec9 :\cf7 \strokec7  Guest[],\
  tables\cf9 \strokec9 :\cf7 \strokec7  Table[],\
  constraints\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 'must'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'cannot'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 ''\cf9 \strokec9 >>\cf7 \strokec7 \
)\cf9 \strokec9 :\cf7 \strokec7  ConstraintConflict[]\
\
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 detectAdjacentPairingConflicts\cf7 \strokec7 (\
  guests\cf9 \strokec9 :\cf7 \strokec7  Guest[],\
  tables\cf9 \strokec9 :\cf7 \strokec7  Table[],\
  adjacents\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf7 \strokec7 []\cf9 \strokec9 >\cf7 \strokec7 \
)\cf9 \strokec9 :\cf7 \strokec7  ConstraintConflict[]\
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // UTILITY FUNCTIONS  
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 orderByAdjacencyEndpoints\cf7 \strokec7 (\
  units\cf9 \strokec9 :\cf7 \strokec7  Guest[],\
  adjacents\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf7 \strokec7 []\cf9 \strokec9 >\cf7 \strokec7 \
)\cf9 \strokec9 :\cf7 \strokec7  Guest[]\
\
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 scoreAdjacencyNeighbors\cf7 \strokec7 (\
  plan\cf9 \strokec9 :\cf7 \strokec7  \{ tables\cf9 \strokec9 :\cf7 \strokec7  \{ id\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 ; seats\cf9 \strokec9 :\cf7 \strokec7  Guest[] \}[] \},\
  adjacents\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf7 \strokec7 []\cf9 \strokec9 >\cf7 \strokec7 \
)\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 10.2 guestCount.ts API Contract\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // PRIMARY PARSER - Used by ADD_GUESTS action
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 countHeads\cf7 \strokec7 (guestName\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 )\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Input: "John & Jane Smith" \uc0\u8594  Output: 2
\f1\i0 \cf7 \strokec7 \

\f5\i \cf6 \strokec6 // Input: "The Smiths (4)" \uc0\u8594  Output: 4  
\f1\i0 \cf7 \strokec7 \

\f5\i \cf6 \strokec6 // Input: "Family of five" \uc0\u8594  Output: 5
\f1\i0 \cf7 \strokec7 \

\f5\i \cf6 \strokec6 // Input: "John plus 2" \uc0\u8594  Output: 3
\f1\i0 \cf7 \strokec7 \
\

\f5\i \cf6 \strokec6 // UTILITY FUNCTIONS
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 normalizeGuestName\cf7 \strokec7 (name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 )\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Converts to lowercase, trims whitespace, normalizes spacing
\f1\i0 \cf7 \strokec7 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 getDisplayName\cf7 \strokec7 (name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 )\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7   \
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Removes count indicators: "John (3)" \uc0\u8594  "John"
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 10.3 formatters.ts API Contract\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // SORTING UTILITY
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 getLastNameForSorting\cf7 \strokec7 (fullName\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 )\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Handles: "John Smith" \uc0\u8594  "Smith"
\f1\i0 \cf7 \strokec7 \

\f5\i \cf6 \strokec6 // Handles: "Mary-Jane Wilson-Brown" \uc0\u8594  "Wilson-Brown"  
\f1\i0 \cf7 \strokec7 \

\f5\i \cf6 \strokec6 // Handles: "Jos\'e9 Mar\'eda Garc\'eda L\'f3pez" \uc0\u8594  "L\'f3pez"
\f1\i0 \cf7 \strokec7 \
\

\f5\i \cf6 \strokec6 // TABLE ASSIGNMENT FORMATTER
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 formatTableAssignment\cf7 \strokec7 (\
  assignments\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf9 \strokec9 >\cf7 \strokec7 ,\
  tables\cf9 \strokec9 :\cf7 \strokec7  Table[],\
  guestName\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 \
)\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf8 \strokec8 null\cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Input: assignments["John"] = "1,3", tables with names
\f1\i0 \cf7 \strokec7 \

\f5\i \cf6 \strokec6 // Output: "Table 1 (Main), Table 3 (Kids)"
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 10.4 premium.ts API Contract\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 isPremiumSubscription\cf7 \strokec7 (\
  subscription\cf9 \strokec9 :\cf7 \strokec7  UserSubscription \cf9 \strokec9 |\cf7 \strokec7  \cf8 \strokec8 null\cf7 \strokec7 \
)\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 boolean\cf7 \strokec7 \
\
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 getMaxGuestLimit\cf7 \strokec7 (\
  subscription\cf9 \strokec9 :\cf7 \strokec7  UserSubscription \cf9 \strokec9 |\cf7 \strokec7  \cf8 \strokec8 null\cf7 \strokec7   \
)\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Free: 80 guests, Premium: unlimited
\f1\i0 \cf7 \strokec7 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 getMaxSavedSettingsLimit\cf7 \strokec7 (\
  subscription\cf9 \strokec9 :\cf7 \strokec7  UserSubscription \cf9 \strokec9 |\cf7 \strokec7  \cf8 \strokec8 null\cf7 \strokec7 \
)\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7   \
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Free: 5 settings, Premium: unlimited
\f1\i0 \cf7 \strokec7 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 export\cf7 \strokec7  \cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 getGuestLimitMessage\cf7 \strokec7 (\
  subscription\cf9 \strokec9 :\cf7 \strokec7  UserSubscription \cf9 \strokec9 |\cf7 \strokec7  \cf8 \strokec8 null\cf7 \strokec7 ,\
  currentCount\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 \
)\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Dynamic message based on usage
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 11. Outstanding Architectural Risks\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 11.1 CRITICAL SECURITY RISKS\
\pard\pardeftab720\sa319\partightenfactor0

\fs24 \cf0 11.1.1 Client-Side Admin Privilege Escalation\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 File
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 src/components/BetaCodeAdmin.tsx
\f1\fs24 \strokec2  (referenced but not in provided files)\uc0\u8232 
\f0\b \strokec2 Severity
\f1\b0 \strokec2 : CRITICAL\uc0\u8232 
\f0\b \strokec2 CVSS Score
\f1\b0 \strokec2 : 9.8 (Critical)\uc0\u8232 
\f0\b \strokec2 Description
\f1\b0 \strokec2 : Administrative privileges determined via hardcoded client-side email list\uc0\u8232 
\f0\b \strokec2 Exploitation
\f1\b0 \strokec2 : Trivially bypassable via browser developer tools\uc0\u8232 
\f0\b \strokec2 Remediation
\f1\b0 \strokec2 : Implement server-side role verification with JWT claims\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // CURRENT VULNERABLE PATTERN (MUST REMOVE)
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 const\cf7 \strokec7  adminEmails \cf9 \strokec9 =\cf7 \strokec7  [\cf10 \strokec10 'admin@company.com'\cf7 \strokec7 , \cf10 \strokec10 'boss@company.com'\cf7 \strokec7 ];\
\cf8 \strokec8 const\cf7 \strokec7  isAdmin \cf9 \strokec9 =\cf7 \strokec7  adminEmails.\cf9 \strokec9 includes\cf7 \strokec7 (user.email);\
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // SECURE REPLACEMENT REQUIRED
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 const\cf7 \strokec7  \{ data\cf9 \strokec9 :\cf7 \strokec7  adminStatus \} \cf9 \strokec9 =\cf7 \strokec7  \cf8 \strokec8 await\cf7 \strokec7  supabase\
  .\cf8 \strokec8 from\cf7 \strokec7 (\cf10 \strokec10 'user_roles'\cf7 \strokec7 )  \
  .\cf9 \strokec9 select\cf7 \strokec7 (\cf10 \strokec10 'role'\cf7 \strokec7 )\
  .\cf9 \strokec9 eq\cf7 \strokec7 (\cf10 \strokec10 'user_id'\cf7 \strokec7 , user.id)\
  .\cf9 \strokec9 single\cf7 \strokec7 ();\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b \cf0 \strokec2 11.1.2 State Injection via Import Functionality\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Files
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 GuestManager.tsx
\f1\fs24 \strokec2 , 
\f2\fs26 \strokec2 SeatingPlanViewer.tsx
\f1\fs24 \strokec2 \uc0\u8232 
\f0\b \strokec2 Severity
\f1\b0 \strokec2 : MEDIUM\uc0\u8232 
\f0\b \strokec2 Description
\f1\b0 \strokec2 : User-provided JSON directly imported into application state\uc0\u8232 
\f0\b \strokec2 Risk
\f1\b0 \strokec2 : Malicious state injection, XSS via crafted guest names\uc0\u8232 
\f0\b \strokec2 Remediation
\f1\b0 \strokec2 : Implement state sanitization and validation\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 11.2 DATA INTEGRITY RISKS\
\pard\pardeftab720\sa319\partightenfactor0

\fs24 \cf0 11.2.1 Guest Rename Data Corruption\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 File
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 src/context/AppContext.tsx
\f1\fs24 \strokec2 \uc0\u8232 
\f0\b \strokec2 Severity
\f1\b0 \strokec2 : HIGH\uc0\u8232 
\f0\b \strokec2 Impact
\f1\b0 \strokec2 : Complete loss of guest constraints and assignments\uc0\u8232 
\f0\b \strokec2 Trigger
\f1\b0 \strokec2 : User renames any guest\uc0\u8232 
\f0\b \strokec2 Data Loss
\f1\b0 \strokec2 : All 
\f2\fs26 \strokec2 constraints
\f1\fs24 \strokec2 , 
\f2\fs26 \strokec2 adjacents
\f1\fs24 \strokec2 , 
\f2\fs26 \strokec2 assignments
\f1\fs24 \strokec2  for renamed guest\uc0\u8232 
\f0\b \strokec2 Status
\f1\b0 \strokec2 : CONFIRMED BUG - See Section 7.4 for fix\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b \cf0 \strokec2 11.2.2 Asymmetric Adjacency State Corruption\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Risk
\f1\b0 \strokec2 : Manual state manipulation could break bidirectional adjacency invariant\uc0\u8232 
\f0\b \strokec2 Detection
\f1\b0 \strokec2 : Implement state validation in development mode\uc0\u8232 
\f0\b \strokec2 Prevention
\f1\b0 \strokec2 : Reducer-level invariant enforcement (currently implemented)\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 11.3 PERFORMANCE & SCALABILITY RISKS\
\pard\pardeftab720\sa319\partightenfactor0

\fs24 \cf0 11.3.1 N\'d7N Constraint Grid Rendering Bottleneck\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 File
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 src/pages/ConstraintManager.tsx
\f1\fs24 \strokec2 \uc0\u8232 
\f0\b \strokec2 Threshold
\f1\b0 \strokec2 : 120+ guests (14,400+ cells)\uc0\u8232 
\f0\b \strokec2 Symptoms
\f1\b0 \strokec2 : Browser unresponsiveness, high memory usage\uc0\u8232 
\f0\b \strokec2 Current Mitigation
\f1\b0 \strokec2 : Pagination for premium users\uc0\u8232 
\f0\b \strokec2 Risk Level
\f1\b0 \strokec2 : MEDIUM (affects premium user experience)\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b \cf0 \strokec2 11.3.2 Unbounded Plan Generation Loops\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 File
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 src/utils/seatingAlgorithm.ts
\f1\fs24 \strokec2 \uc0\u8232 
\f0\b \strokec2 Risk
\f1\b0 \strokec2 : Infinite loops with impossible constraint sets\uc0\u8232 
\f0\b \strokec2 Current Mitigation
\f1\b0 \strokec2 : Maximum attempt limits (200/500)\uc0\u8232 
\f0\b \strokec2 Improvement Needed
\f1\b0 \strokec2 : Early termination conditions\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 11.4 MAINTENANCE & ARCHITECTURAL RISKS\
\pard\pardeftab720\sa319\partightenfactor0

\fs24 \cf0 11.4.1 Massive Code Duplication\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Files
\f1\b0 \strokec2 :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls11\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 src/pages/AssignmentManager.tsx
\f1\fs24  (guest assignment UI)\
\ls11\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 src/pages/TableManager.tsx
\f1\fs24  (identical guest assignment UI)\uc0\u8232 
\f0\b Lines
\f1\b0 : ~400+ lines duplicated\uc0\u8232 
\f0\b Risk
\f1\b0 : Inconsistent behavior, double maintenance overhead\uc0\u8232 
\f0\b Estimated Tech Debt
\f1\b0 : 2-3 days refactoring required\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b \cf0 \strokec2 11.4.2 Parser Reliability Degradation\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 File
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 src/utils/guestCount.ts
\f1\fs24 \strokec2 \uc0\u8232 
\f0\b \strokec2 Current Error Rate
\f1\b0 \strokec2 : 10-15% on edge cases\uc0\u8232 
\f0\b \strokec2 Risk
\f1\b0 \strokec2 : Silent guest count errors leading to capacity miscalculations\uc0\u8232 
\f0\b \strokec2 Business Impact
\f1\b0 \strokec2 : Under-booked tables, angry customers\uc0\u8232 
\f0\b \strokec2 Examples of Failures
\f1\b0 \strokec2 :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls12\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "Wedding party of 6" \uc0\u8594  1 (should be 6)\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "John + guest" \uc0\u8594  1 (should be 2)\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "The Smiths plus two kids" \uc0\u8594  2 (should be 4)\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 11.5 RISK MITIGATION PRIORITIES\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf7 \strokec7 PRIORITY 1 (SECURITY BLOCKERS):\
\uc0\u10003  Fix client-side admin check\
\uc0\u10003  Implement input sanitization\
\
PRIORITY 2 (DATA CORRUPTION):  \
\uc0\u10003  Fix guest rename propagation\
\uc0\u10003  Add state validation in dev mode\
\
PRIORITY 3 (ARCHITECTURAL DEBT):\
\uc0\u10003  Refactor duplicated guest assignment UI\
\uc0\u10003  Create shared component library\
\
PRIORITY 4 (RELIABILITY):\
\uc0\u10003  Improve parser accuracy to 95%+\
\uc0\u10003  Add comprehensive test coverage\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 12. Testing Requirements\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 12.1 Unit Test Coverage Requirements (95%+ Required)\
\pard\pardeftab720\sa319\partightenfactor0

\fs24 \cf0 12.1.1 Guest Count Parser Tests (CRITICAL)\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // src/utils/guestCount.test.ts
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf9 \strokec9 describe\cf7 \strokec7 (\cf10 \strokec10 'countHeads - Core Parser'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
  test.\cf9 \strokec9 each\cf7 \strokec7 ([\
    
\f5\i \cf6 \strokec6 // Basic cases
\f1\i0 \cf7 \strokec7 \
    [\cf10 \strokec10 'John Smith'\cf7 \strokec7 , \cf11 \strokec11 1\cf7 \strokec7 ],\
    [\cf10 \strokec10 'John & Jane'\cf7 \strokec7 , \cf11 \strokec11 2\cf7 \strokec7 ], \
    [\cf10 \strokec10 'John and Jane'\cf7 \strokec7 , \cf11 \strokec11 2\cf7 \strokec7 ],\
    [\cf10 \strokec10 'John + Jane'\cf7 \strokec7 , \cf11 \strokec11 2\cf7 \strokec7 ],\
    [\cf10 \strokec10 'John plus Jane'\cf7 \strokec7 , \cf11 \strokec11 2\cf7 \strokec7 ],\
    \
    
\f5\i \cf6 \strokec6 // Numeric variations (CURRENTLY FAILING)
\f1\i0 \cf7 \strokec7 \
    [\cf10 \strokec10 'John + 1'\cf7 \strokec7 , \cf11 \strokec11 2\cf7 \strokec7 ],\
    [\cf10 \strokec10 'John plus 1'\cf7 \strokec7 , \cf11 \strokec11 2\cf7 \strokec7 ], \
    [\cf10 \strokec10 'John plus one'\cf7 \strokec7 , \cf11 \strokec11 2\cf7 \strokec7 ],\
    [\cf10 \strokec10 'Plus one'\cf7 \strokec7 , \cf11 \strokec11 2\cf7 \strokec7 ],\
    \
    
\f5\i \cf6 \strokec6 // Spelled numbers (CURRENTLY FAILING)
\f1\i0 \cf7 \strokec7 \
    [\cf10 \strokec10 'Two guests'\cf7 \strokec7 , \cf11 \strokec11 2\cf7 \strokec7 ],\
    [\cf10 \strokec10 'Five people'\cf7 \strokec7 , \cf11 \strokec11 5\cf7 \strokec7 ],\
    [\cf10 \strokec10 'Ten attendees'\cf7 \strokec7 , \cf11 \strokec11 10\cf7 \strokec7 ],\
    \
    
\f5\i \cf6 \strokec6 // Family syntax (PARTIAL FAILURES)
\f1\i0 \cf7 \strokec7 \
    [\cf10 \strokec10 'Family of 5'\cf7 \strokec7 , \cf11 \strokec11 5\cf7 \strokec7 ],\
    [\cf10 \strokec10 'Family of five'\cf7 \strokec7 , \cf11 \strokec11 5\cf7 \strokec7 ],\
    [\cf10 \strokec10 'Household of 3'\cf7 \strokec7 , \cf11 \strokec11 3\cf7 \strokec7 ],\
    \
    
\f5\i \cf6 \strokec6 // Complex cases
\f1\i0 \cf7 \strokec7 \
    [\cf10 \strokec10 'The Smiths (4)'\cf7 \strokec7 , \cf11 \strokec11 4\cf7 \strokec7 ],\
    [\cf10 \strokec10 'Wedding party (8)'\cf7 \strokec7 , \cf11 \strokec11 8\cf7 \strokec7 ],\
    [\cf10 \strokec10 'John & Jane + 2 kids'\cf7 \strokec7 , \cf11 \strokec11 4\cf7 \strokec7 ],\
    [\cf10 \strokec10 'Mr. & Mrs. Smith and guest'\cf7 \strokec7 , \cf11 \strokec11 3\cf7 \strokec7 ],\
    \
    
\f5\i \cf6 \strokec6 // Edge cases
\f1\i0 \cf7 \strokec7 \
    [\cf10 \strokec10 ''\cf7 \strokec7 , \cf11 \strokec11 1\cf7 \strokec7 ],                    
\f5\i \cf6 \strokec6 // Empty string
\f1\i0 \cf7 \strokec7 \
    [\cf10 \strokec10 '   '\cf7 \strokec7 , \cf11 \strokec11 1\cf7 \strokec7 ],                 
\f5\i \cf6 \strokec6 // Whitespace only  
\f1\i0 \cf7 \strokec7 \
    [\cf10 \strokec10 'Guest123'\cf7 \strokec7 , \cf11 \strokec11 1\cf7 \strokec7 ],            
\f5\i \cf6 \strokec6 // Alphanumeric
\f1\i0 \cf7 \strokec7 \
    [\cf10 \strokec10 'John & Jane & Bob'\cf7 \strokec7 , \cf11 \strokec11 3\cf7 \strokec7 ],   
\f5\i \cf6 \strokec6 // Multiple ampersands
\f1\i0 \cf7 \strokec7 \
  ])(\cf10 \strokec10 'parses "%s" as %i people'\cf7 \strokec7 , (input, expected) \cf9 \strokec9 =>\cf7 \strokec7  \{\
    \cf9 \strokec9 expect\cf7 \strokec7 (\cf9 \strokec9 countHeads\cf7 \strokec7 (input)).\cf9 \strokec9 toBe\cf7 \strokec7 (expected);\
  \});\
  \
  
\f5\i \cf6 \strokec6 // Boundary testing
\f1\i0 \cf7 \strokec7 \
  \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'handles large numbers'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
    \cf9 \strokec9 expect\cf7 \strokec7 (\cf9 \strokec9 countHeads\cf7 \strokec7 (\cf10 \strokec10 'Group (50)'\cf7 \strokec7 )).\cf9 \strokec9 toBe\cf7 \strokec7 (\cf11 \strokec11 50\cf7 \strokec7 );\
    \cf9 \strokec9 expect\cf7 \strokec7 (\cf9 \strokec9 countHeads\cf7 \strokec7 (\cf10 \strokec10 'Group (51)'\cf7 \strokec7 )).\cf9 \strokec9 toBe\cf7 \strokec7 (\cf11 \strokec11 1\cf7 \strokec7 ); 
\f5\i \cf6 \strokec6 // Should clamp to max
\f1\i0 \cf7 \strokec7 \
  \});\
  \
  
\f5\i \cf6 \strokec6 // XSS prevention
\f1\i0 \cf7 \strokec7 \
  \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'sanitizes malicious input'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
    \cf9 \strokec9 expect\cf7 \strokec7 (\cf9 \strokec9 countHeads\cf7 \strokec7 (\cf10 \strokec10 '<script>alert("xss")</script>'\cf7 \strokec7 )).\cf9 \strokec9 toBe\cf7 \strokec7 (\cf11 \strokec11 1\cf7 \strokec7 );\
    \cf9 \strokec9 expect\cf7 \strokec7 (\cf9 \strokec9 countHeads\cf7 \strokec7 (\cf10 \strokec10 'John<img src=x onerror=alert(1)>'\cf7 \strokec7 )).\cf9 \strokec9 toBe\cf7 \strokec7 (\cf11 \strokec11 1\cf7 \strokec7 );\
  \});\
\});\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b \cf0 \strokec2 12.1.2 Adjacency Engine Axiom Tests (CRITICAL)\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // src/utils/seatingAlgorithm.test.ts
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf9 \strokec9 describe\cf7 \strokec7 (\cf10 \strokec10 'Adjacency Axioms - Mathematical Foundation'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
  \cf8 \strokec8 const\cf7 \strokec7  standardTables \cf9 \strokec9 =\cf7 \strokec7  [\
    \{ id\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7 , seats\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 8\cf7 \strokec7  \},\
    \{ id\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7 , seats\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 10\cf7 \strokec7  \},\
    \{ id\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 3\cf7 \strokec7 , seats\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 6\cf7 \strokec7  \}  
\f5\i \cf6 \strokec6 // Smallest capacity
\f1\i0 \cf7 \strokec7 \
  ];\
  \
  \cf9 \strokec9 describe\cf7 \strokec7 (\cf10 \strokec10 'AXIOM 1: 2-guest chains never circular'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
    \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'valid 2-guest adjacency with sufficient capacity'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
      \cf8 \strokec8 const\cf7 \strokec7  guests \cf9 \strokec9 =\cf7 \strokec7  [\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Alice'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7  \},\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Bob'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 3\cf7 \strokec7  \}\
      ];\
      \cf8 \strokec8 const\cf7 \strokec7  adjacents \cf9 \strokec9 =\cf7 \strokec7  \{ \
        \cf13 \strokec13 'Alice'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Bob'\cf7 \strokec7 ], \
        \cf13 \strokec13 'Bob'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Alice'\cf7 \strokec7 ] \
      \};\
      \
      \cf8 \strokec8 const\cf7 \strokec7  conflicts \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 detectAdjacentPairingConflicts\cf7 \strokec7 (guests, standardTables, adjacents);\
      \cf9 \strokec9 expect\cf7 \strokec7 (conflicts).\cf9 \strokec9 toHaveLength\cf7 \strokec7 (\cf11 \strokec11 0\cf7 \strokec7 );\
    \});\
    \
    \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 '2-guest adjacency with capacity violation'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
      \cf8 \strokec8 const\cf7 \strokec7  guests \cf9 \strokec9 =\cf7 \strokec7  [\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Alice'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 4\cf7 \strokec7  \},  \
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Bob'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 4\cf7 \strokec7  \}     
\f5\i \cf6 \strokec6 // Total: 8 > smallest table (6)
\f1\i0 \cf7 \strokec7 \
      ];\
      \cf8 \strokec8 const\cf7 \strokec7  adjacents \cf9 \strokec9 =\cf7 \strokec7  \{ \
        \cf13 \strokec13 'Alice'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Bob'\cf7 \strokec7 ], \
        \cf13 \strokec13 'Bob'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Alice'\cf7 \strokec7 ] \
      \};\
      \
      \cf8 \strokec8 const\cf7 \strokec7  conflicts \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 detectAdjacentPairingConflicts\cf7 \strokec7 (guests, standardTables, adjacents);\
      \cf9 \strokec9 expect\cf7 \strokec7 (conflicts).\cf9 \strokec9 toHaveLength\cf7 \strokec7 (\cf11 \strokec11 1\cf7 \strokec7 );\
      \cf9 \strokec9 expect\cf7 \strokec7 (conflicts[\cf11 \strokec11 0\cf7 \strokec7 ].type).\cf9 \strokec9 toBe\cf7 \strokec7 (\cf10 \strokec10 'capacity_violation'\cf7 \strokec7 );\
      \cf9 \strokec9 expect\cf7 \strokec7 (conflicts[\cf11 \strokec11 0\cf7 \strokec7 ].description).\cf9 \strokec9 toContain\cf7 \strokec7 (\cf10 \strokec10 'smallest table has 6'\cf7 \strokec7 );\
    \});\
  \});\
  \
  \cf9 \strokec9 describe\cf7 \strokec7 (\cf10 \strokec10 'AXIOM 2: Degree constraint \uc0\u8804  2'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
    \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'rejects guest with 3 adjacencies'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
      \cf8 \strokec8 const\cf7 \strokec7  guests \cf9 \strokec9 =\cf7 \strokec7  [\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Hub'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'A'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'B'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},  \
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'C'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \}\
      ];\
      \cf8 \strokec8 const\cf7 \strokec7  adjacents \cf9 \strokec9 =\cf7 \strokec7  \{\
        \cf13 \strokec13 'Hub'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'B'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ],  
\f5\i \cf6 \strokec6 // Degree 3 - INVALID
\f1\i0 \cf7 \strokec7 \
        \cf13 \strokec13 'A'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Hub'\cf7 \strokec7 ],\
        \cf13 \strokec13 'B'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Hub'\cf7 \strokec7 ], \
        \cf13 \strokec13 'C'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Hub'\cf7 \strokec7 ]\
      \};\
      \
      \cf8 \strokec8 const\cf7 \strokec7  conflicts \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 detectAdjacentPairingConflicts\cf7 \strokec7 (guests, standardTables, adjacents);\
      \cf9 \strokec9 expect\cf7 \strokec7 (conflicts.\cf9 \strokec9 some\cf7 \strokec7 (c \cf9 \strokec9 =>\cf7 \strokec7  c.type \cf9 \strokec9 ===\cf7 \strokec7  \cf10 \strokec10 'adjacency_violation'\cf7 \strokec7 )).\cf9 \strokec9 toBe\cf7 \strokec7 (\cf11 \strokec11 true\cf7 \strokec7 );\
      \cf9 \strokec9 expect\cf7 \strokec7 (conflicts.\cf9 \strokec9 some\cf7 \strokec7 (c \cf9 \strokec9 =>\cf7 \strokec7  c.description.\cf9 \strokec9 includes\cf7 \strokec7 (\cf10 \strokec10 'too many'\cf7 \strokec7 ))).\cf9 \strokec9 toBe\cf7 \strokec7 (\cf11 \strokec11 true\cf7 \strokec7 );\
    \});\
    \
    \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'accepts valid degree-2 configuration'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
      \cf8 \strokec8 const\cf7 \strokec7  guests \cf9 \strokec9 =\cf7 \strokec7  [\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'A'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'B'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'C'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \}\
      ];\
      \cf8 \strokec8 const\cf7 \strokec7  adjacents \cf9 \strokec9 =\cf7 \strokec7  \{\
        \cf13 \strokec13 'A'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'B'\cf7 \strokec7 ],           
\f5\i \cf6 \strokec6 // Degree 1 (endpoint)
\f1\i0 \cf7 \strokec7 \
        \cf13 \strokec13 'B'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ],      
\f5\i \cf6 \strokec6 // Degree 2 (middle)
\f1\i0 \cf7 \strokec7 \
        \cf13 \strokec13 'C'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'B'\cf7 \strokec7 ]            
\f5\i \cf6 \strokec6 // Degree 1 (endpoint)  
\f1\i0 \cf7 \strokec7 \
      \};\
      \
      \cf8 \strokec8 const\cf7 \strokec7  conflicts \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 detectAdjacentPairingConflicts\cf7 \strokec7 (guests, standardTables, adjacents);\
      \cf9 \strokec9 expect\cf7 \strokec7 (conflicts).\cf9 \strokec9 toHaveLength\cf7 \strokec7 (\cf11 \strokec11 0\cf7 \strokec7 );\
    \});\
  \});\
  \
  \cf9 \strokec9 describe\cf7 \strokec7 (\cf10 \strokec10 'AXIOM 3: 3+ guest chains need 2 endpoints'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
    \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'valid 4-guest linear chain'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
      \cf8 \strokec8 const\cf7 \strokec7  guests \cf9 \strokec9 =\cf7 \strokec7  [\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'A'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'B'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \}, \
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'C'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'D'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \}\
      ];\
      \cf8 \strokec8 const\cf7 \strokec7  adjacents \cf9 \strokec9 =\cf7 \strokec7  \{\
        \cf13 \strokec13 'A'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'B'\cf7 \strokec7 ],           
\f5\i \cf6 \strokec6 // Endpoint (degree 1)
\f1\i0 \cf7 \strokec7 \
        \cf13 \strokec13 'B'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ],      
\f5\i \cf6 \strokec6 // Middle (degree 2)
\f1\i0 \cf7 \strokec7 \
        \cf13 \strokec13 'C'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'B'\cf7 \strokec7 , \cf10 \strokec10 'D'\cf7 \strokec7 ],      
\f5\i \cf6 \strokec6 // Middle (degree 2) 
\f1\i0 \cf7 \strokec7 \
        \cf13 \strokec13 'D'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'C'\cf7 \strokec7 ]            
\f5\i \cf6 \strokec6 // Endpoint (degree 1)
\f1\i0 \cf7 \strokec7 \
      \};\
      \
      \cf8 \strokec8 const\cf7 \strokec7  conflicts \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 detectAdjacentPairingConflicts\cf7 \strokec7 (guests, standardTables, adjacents);\
      \cf9 \strokec9 expect\cf7 \strokec7 (conflicts).\cf9 \strokec9 toHaveLength\cf7 \strokec7 (\cf11 \strokec11 0\cf7 \strokec7 );\
    \});\
    \
    \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'invalid 3-guest triangle (closed loop)'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
      \cf8 \strokec8 const\cf7 \strokec7  guests \cf9 \strokec9 =\cf7 \strokec7  [\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'A'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'B'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'C'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \}\
      ];\
      \cf8 \strokec8 const\cf7 \strokec7  adjacents \cf9 \strokec9 =\cf7 \strokec7  \{\
        \cf13 \strokec13 'A'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'B'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ],      
\f5\i \cf6 \strokec6 // Degree 2, no endpoints
\f1\i0 \cf7 \strokec7 \
        \cf13 \strokec13 'B'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ],      
\f5\i \cf6 \strokec6 // Degree 2, no endpoints  
\f1\i0 \cf7 \strokec7 \
        \cf13 \strokec13 'C'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'B'\cf7 \strokec7 ]       
\f5\i \cf6 \strokec6 // Degree 2, no endpoints
\f1\i0 \cf7 \strokec7 \
      \};\
      \
      \cf8 \strokec8 const\cf7 \strokec7  conflicts \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 detectAdjacentPairingConflicts\cf7 \strokec7 (guests, standardTables, adjacents);\
      \cf9 \strokec9 expect\cf7 \strokec7 (conflicts.\cf9 \strokec9 some\cf7 \strokec7 (c \cf9 \strokec9 =>\cf7 \strokec7  c.type \cf9 \strokec9 ===\cf7 \strokec7  \cf10 \strokec10 'circular'\cf7 \strokec7 )).\cf9 \strokec9 toBe\cf7 \strokec7 (\cf11 \strokec11 true\cf7 \strokec7 );\
      \cf9 \strokec9 expect\cf7 \strokec7 (conflicts.\cf9 \strokec9 some\cf7 \strokec7 (c \cf9 \strokec9 =>\cf7 \strokec7  c.description.\cf9 \strokec9 includes\cf7 \strokec7 (\cf10 \strokec10 'closed loop'\cf7 \strokec7 ))).\cf9 \strokec9 toBe\cf7 \strokec7 (\cf11 \strokec11 true\cf7 \strokec7 );\
    \});\
    \
    \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'mixed valid configuration: 2-guest + 4-guest chains'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
      \cf8 \strokec8 const\cf7 \strokec7  guests \cf9 \strokec9 =\cf7 \strokec7  [\
        
\f5\i \cf6 \strokec6 // Chain 1: Simple pair
\f1\i0 \cf7 \strokec7 \
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Alice'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7  \}, \
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Bob'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},\
        
\f5\i \cf6 \strokec6 // Chain 2: Linear 4-guest  
\f1\i0 \cf7 \strokec7 \
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Carol'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Dave'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Eve'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Frank'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \}\
      ];\
      \cf8 \strokec8 const\cf7 \strokec7  adjacents \cf9 \strokec9 =\cf7 \strokec7  \{\
        
\f5\i \cf6 \strokec6 // Chain 1: A-B (2-guest, axiomatically valid)
\f1\i0 \cf7 \strokec7 \
        \cf13 \strokec13 'Alice'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Bob'\cf7 \strokec7 ],\
        \cf13 \strokec13 'Bob'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Alice'\cf7 \strokec7 ],\
        
\f5\i \cf6 \strokec6 // Chain 2: C-D-E-F (4-guest linear)
\f1\i0 \cf7 \strokec7 \
        \cf13 \strokec13 'Carol'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Dave'\cf7 \strokec7 ],      
\f5\i \cf6 \strokec6 // Endpoint
\f1\i0 \cf7 \strokec7 \
        \cf13 \strokec13 'Dave'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Carol'\cf7 \strokec7 , \cf10 \strokec10 'Eve'\cf7 \strokec7 ],\
        \cf13 \strokec13 'Eve'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Dave'\cf7 \strokec7 , \cf10 \strokec10 'Frank'\cf7 \strokec7 ], \
        \cf13 \strokec13 'Frank'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Eve'\cf7 \strokec7 ]        
\f5\i \cf6 \strokec6 // Endpoint
\f1\i0 \cf7 \strokec7 \
      \};\
      \
      \cf8 \strokec8 const\cf7 \strokec7  conflicts \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 detectAdjacentPairingConflicts\cf7 \strokec7 (guests, standardTables, adjacents);\
      \cf9 \strokec9 expect\cf7 \strokec7 (conflicts).\cf9 \strokec9 toHaveLength\cf7 \strokec7 (\cf11 \strokec11 0\cf7 \strokec7 );\
    \});\
  \});\
\});\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b \cf0 \strokec2 12.1.3 State Management Tests (Prophylactic Validation)\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // src/context/AppContext.test.tsx  
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf9 \strokec9 describe\cf7 \strokec7 (\cf10 \strokec10 'AppContext Reducer - Invariant Enforcement'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
  \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'SET_ADJACENT rejects when guest1 has 2 adjacencies'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
    \cf8 \strokec8 const\cf7 \strokec7  initialState\cf9 \strokec9 :\cf7 \strokec7  AppState \cf9 \strokec9 =\cf7 \strokec7  \{\
      adjacents\cf9 \strokec9 :\cf7 \strokec7  \{\
        \cf13 \strokec13 'Alice'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Bob'\cf7 \strokec7 , \cf10 \strokec10 'Carol'\cf7 \strokec7 ],  
\f5\i \cf6 \strokec6 // Already at limit
\f1\i0 \cf7 \strokec7 \
        \cf13 \strokec13 'Bob'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Alice'\cf7 \strokec7 ], \
        \cf13 \strokec13 'Carol'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Alice'\cf7 \strokec7 ],\
        \cf13 \strokec13 'Dave'\cf9 \strokec9 :\cf7 \strokec7  []\
      \},\
      
\f5\i \cf6 \strokec6 // ... other state
\f1\i0 \cf7 \strokec7 \
    \};\
    \
    \cf8 \strokec8 const\cf7 \strokec7  action \cf9 \strokec9 =\cf7 \strokec7  \{\
      type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'SET_ADJACENT'\cf7 \strokec7  \cf8 \strokec8 as\cf7 \strokec7  \cf8 \strokec8 const\cf7 \strokec7 ,\
      payload\cf9 \strokec9 :\cf7 \strokec7  \{ guest1\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Alice'\cf7 \strokec7 , guest2\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Dave'\cf7 \strokec7  \}  \
    \};\
    \
    \cf8 \strokec8 const\cf7 \strokec7  newState \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 appReducer\cf7 \strokec7 (initialState, action);\
    \
    
\f5\i \cf6 \strokec6 // Should reject - Alice already has 2 adjacencies
\f1\i0 \cf7 \strokec7 \
    \cf9 \strokec9 expect\cf7 \strokec7 (newState.adjacents[\cf10 \strokec10 'Alice'\cf7 \strokec7 ]).not.\cf9 \strokec9 toContain\cf7 \strokec7 (\cf10 \strokec10 'Dave'\cf7 \strokec7 );\
    \cf9 \strokec9 expect\cf7 \strokec7 (newState.adjacents[\cf10 \strokec10 'Dave'\cf7 \strokec7 ]).not.\cf9 \strokec9 toContain\cf7 \strokec7 (\cf10 \strokec10 'Alice'\cf7 \strokec7 );\
    \cf9 \strokec9 expect\cf7 \strokec7 (newState.adjacents[\cf10 \strokec10 'Alice'\cf7 \strokec7 ]).\cf9 \strokec9 toHaveLength\cf7 \strokec7 (\cf11 \strokec11 2\cf7 \strokec7 );\
  \});\
  \
  \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'SET_ADJACENT maintains bidirectional symmetry'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
    \cf8 \strokec8 const\cf7 \strokec7  initialState\cf9 \strokec9 :\cf7 \strokec7  AppState \cf9 \strokec9 =\cf7 \strokec7  \{\
      adjacents\cf9 \strokec9 :\cf7 \strokec7  \{\},\
      
\f5\i \cf6 \strokec6 // ... other state  
\f1\i0 \cf7 \strokec7 \
    \};\
    \
    \cf8 \strokec8 const\cf7 \strokec7  action \cf9 \strokec9 =\cf7 \strokec7  \{\
      type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'SET_ADJACENT'\cf7 \strokec7  \cf8 \strokec8 as\cf7 \strokec7  \cf8 \strokec8 const\cf7 \strokec7 ,\
      payload\cf9 \strokec9 :\cf7 \strokec7  \{ guest1\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Alice'\cf7 \strokec7 , guest2\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Bob'\cf7 \strokec7  \}\
    \};\
    \
    \cf8 \strokec8 const\cf7 \strokec7  newState \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 appReducer\cf7 \strokec7 (initialState, action);\
    \
    \cf9 \strokec9 expect\cf7 \strokec7 (newState.adjacents[\cf10 \strokec10 'Alice'\cf7 \strokec7 ]).\cf9 \strokec9 toContain\cf7 \strokec7 (\cf10 \strokec10 'Bob'\cf7 \strokec7 );\
    \cf9 \strokec9 expect\cf7 \strokec7 (newState.adjacents[\cf10 \strokec10 'Bob'\cf7 \strokec7 ]).\cf9 \strokec9 toContain\cf7 \strokec7 (\cf10 \strokec10 'Alice'\cf7 \strokec7 );\
  \});\
  \
  \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'RENAME_GUEST propagates to all state objects'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
    \cf8 \strokec8 const\cf7 \strokec7  initialState\cf9 \strokec9 :\cf7 \strokec7  AppState \cf9 \strokec9 =\cf7 \strokec7  \{\
      guests\cf9 \strokec9 :\cf7 \strokec7  [\{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'OldName'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7  \}],\
      constraints\cf9 \strokec9 :\cf7 \strokec7  \{\
        \cf13 \strokec13 'OldName'\cf9 \strokec9 :\cf7 \strokec7  \{ \cf13 \strokec13 'Other'\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'must'\cf7 \strokec7  \},\
        \cf13 \strokec13 'Other'\cf9 \strokec9 :\cf7 \strokec7  \{ \cf13 \strokec13 'OldName'\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'must'\cf7 \strokec7  \}\
      \},\
      adjacents\cf9 \strokec9 :\cf7 \strokec7  \{\
        \cf13 \strokec13 'OldName'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Other'\cf7 \strokec7 ],\
        \cf13 \strokec13 'Other'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'OldName'\cf7 \strokec7 ]  \
      \},\
      assignments\cf9 \strokec9 :\cf7 \strokec7  \{\
        \cf13 \strokec13 'OldName'\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 '1,2'\cf7 \strokec7 \
      \}\
      
\f5\i \cf6 \strokec6 // ... other state
\f1\i0 \cf7 \strokec7 \
    \};\
    \
    \cf8 \strokec8 const\cf7 \strokec7  action \cf9 \strokec9 =\cf7 \strokec7  \{\
      type\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'RENAME_GUEST'\cf7 \strokec7  \cf8 \strokec8 as\cf7 \strokec7  \cf8 \strokec8 const\cf7 \strokec7 ,\
      payload\cf9 \strokec9 :\cf7 \strokec7  \{ index\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 0\cf7 \strokec7 , name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'NewName'\cf7 \strokec7  \}\
    \};\
    \
    \cf8 \strokec8 const\cf7 \strokec7  newState \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 appReducer\cf7 \strokec7 (initialState, action);\
    \
    
\f5\i \cf6 \strokec6 // Verify propagation  
\f1\i0 \cf7 \strokec7 \
    \cf9 \strokec9 expect\cf7 \strokec7 (newState.guests[\cf11 \strokec11 0\cf7 \strokec7 ].name).\cf9 \strokec9 toBe\cf7 \strokec7 (\cf10 \strokec10 'NewName'\cf7 \strokec7 );\
    \cf9 \strokec9 expect\cf7 \strokec7 (newState.constraints[\cf10 \strokec10 'NewName'\cf7 \strokec7 ]).\cf9 \strokec9 toBeDefined\cf7 \strokec7 ();\
    \cf9 \strokec9 expect\cf7 \strokec7 (newState.constraints[\cf10 \strokec10 'OldName'\cf7 \strokec7 ]).\cf9 \strokec9 toBeUndefined\cf7 \strokec7 ();\
    \cf9 \strokec9 expect\cf7 \strokec7 (newState.adjacents[\cf10 \strokec10 'NewName'\cf7 \strokec7 ]).\cf9 \strokec9 toContain\cf7 \strokec7 (\cf10 \strokec10 'Other'\cf7 \strokec7 );\
    \cf9 \strokec9 expect\cf7 \strokec7 (newState.adjacents[\cf10 \strokec10 'Other'\cf7 \strokec7 ]).\cf9 \strokec9 toContain\cf7 \strokec7 (\cf10 \strokec10 'NewName'\cf7 \strokec7 );\
    \cf9 \strokec9 expect\cf7 \strokec7 (newState.assignments[\cf10 \strokec10 'NewName'\cf7 \strokec7 ]).\cf9 \strokec9 toBe\cf7 \strokec7 (\cf10 \strokec10 '1,2'\cf7 \strokec7 );\
    \cf9 \strokec9 expect\cf7 \strokec7 (newState.assignments[\cf10 \strokec10 'OldName'\cf7 \strokec7 ]).\cf9 \strokec9 toBeUndefined\cf7 \strokec7 ();\
  \});\
\});\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 12.2 Integration Test Requirements\
\pard\pardeftab720\sa319\partightenfactor0

\fs24 \cf0 12.2.1 End-to-End Constraint Management\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // integration/ConstraintManager.integration.test.tsx
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf9 \strokec9 describe\cf7 \strokec7 (\cf10 \strokec10 'ConstraintManager Integration'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
  \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'complete adjacency workflow'\cf7 \strokec7 , \cf8 \strokec8 async\cf7 \strokec7  () \cf9 \strokec9 =>\cf7 \strokec7  \{\
    \cf9 \strokec9 render\cf7 \strokec7 (\cf9 \strokec9 <\cf7 \strokec7 ConstraintManagerPage \cf9 \strokec9 />\cf7 \strokec7 );\
    \
    
\f5\i \cf6 \strokec6 // Double-click first guest  
\f1\i0 \cf7 \strokec7 \
    fireEvent.\cf9 \strokec9 doubleClick\cf7 \strokec7 (screen.\cf9 \strokec9 getByText\cf7 \strokec7 (\cf10 \strokec10 'Alice Johnson'\cf7 \strokec7 ));\
    \cf9 \strokec9 expect\cf7 \strokec7 (screen.\cf9 \strokec9 getByText\cf7 \strokec7 (\cf10 \strokec10 'Alice Johnson'\cf7 \strokec7 )).\cf9 \strokec9 toHaveClass\cf7 \strokec7 (\cf10 \strokec10 'bg-[#586D78]'\cf7 \strokec7 );\
    \
    
\f5\i \cf6 \strokec6 // Double-click second guest
\f1\i0 \cf7 \strokec7 \
    fireEvent.\cf9 \strokec9 doubleClick\cf7 \strokec7 (screen.\cf9 \strokec9 getByText\cf7 \strokec7 (\cf10 \strokec10 'Bob Smith'\cf7 \strokec7 ));  \
    \
    
\f5\i \cf6 \strokec6 // Verify adjacency created
\f1\i0 \cf7 \strokec7 \
    \cf8 \strokec8 await\cf7 \strokec7  \cf9 \strokec9 waitFor\cf7 \strokec7 (() \cf9 \strokec9 =>\cf7 \strokec7  \{\
      \cf8 \strokec8 const\cf7 \strokec7  cell \cf9 \strokec9 =\cf7 \strokec7  screen.\cf9 \strokec9 getByTestId\cf7 \strokec7 (\cf10 \strokec10 'constraint-cell-Alice-Bob'\cf7 \strokec7 );\
      \cf9 \strokec9 expect\cf7 \strokec7 (cell).\cf9 \strokec9 toHaveTextContent\cf7 \strokec7 (\cf10 \strokec10 '\uc0\u11088 &\u11088 '\cf7 \strokec7 );\
      \cf9 \strokec9 expect\cf7 \strokec7 (cell).\cf9 \strokec9 toHaveClass\cf7 \strokec7 (\cf10 \strokec10 'bg-[#22cf04]'\cf7 \strokec7 );\
    \});\
    \
    
\f5\i \cf6 \strokec6 // Verify symmetric update  
\f1\i0 \cf7 \strokec7 \
    \cf8 \strokec8 const\cf7 \strokec7  reverseCell \cf9 \strokec9 =\cf7 \strokec7  screen.\cf9 \strokec9 getByTestId\cf7 \strokec7 (\cf10 \strokec10 'constraint-cell-Bob-Alice'\cf7 \strokec7 ); \
    \cf9 \strokec9 expect\cf7 \strokec7 (reverseCell).\cf9 \strokec9 toHaveTextContent\cf7 \strokec7 (\cf10 \strokec10 '\uc0\u11088 &\u11088 '\cf7 \strokec7 );\
  \});\
  \
  \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'degree limit enforcement in UI'\cf7 \strokec7 , \cf8 \strokec8 async\cf7 \strokec7  () \cf9 \strokec9 =>\cf7 \strokec7  \{\
    
\f5\i \cf6 \strokec6 // Set up guest with 2 existing adjacencies
\f1\i0 \cf7 \strokec7 \
    \cf8 \strokec8 const\cf7 \strokec7  mockState \cf9 \strokec9 =\cf7 \strokec7  \{\
      guests\cf9 \strokec9 :\cf7 \strokec7  [\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'Hub'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'A'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \}, \
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'B'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \},\
        \{ name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 'C'\cf7 \strokec7 , count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \}\
      ],\
      adjacents\cf9 \strokec9 :\cf7 \strokec7  \{\
        \cf13 \strokec13 'Hub'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'B'\cf7 \strokec7 ],  
\f5\i \cf6 \strokec6 // Already at limit
\f1\i0 \cf7 \strokec7 \
        \cf13 \strokec13 'A'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Hub'\cf7 \strokec7 ],\
        \cf13 \strokec13 'B'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Hub'\cf7 \strokec7 ], \
        \cf13 \strokec13 'C'\cf9 \strokec9 :\cf7 \strokec7  []\
      \}\
    \};\
    \
    \cf9 \strokec9 render\cf7 \strokec7 (\cf9 \strokec9 <\cf7 \strokec7 ConstraintManagerPage \cf9 \strokec9 />\cf7 \strokec7 , \{ mockState \});\
    \
    
\f5\i \cf6 \strokec6 // Try to create third adjacency
\f1\i0 \cf7 \strokec7 \
    fireEvent.\cf9 \strokec9 doubleClick\cf7 \strokec7 (screen.\cf9 \strokec9 getByText\cf7 \strokec7 (\cf10 \strokec10 'Hub'\cf7 \strokec7 ));\
    fireEvent.\cf9 \strokec9 doubleClick\cf7 \strokec7 (screen.\cf9 \strokec9 getByText\cf7 \strokec7 (\cf10 \strokec10 'C'\cf7 \strokec7 ));\
    \
    
\f5\i \cf6 \strokec6 // Should show error and reject
\f1\i0 \cf7 \strokec7 \
    \cf8 \strokec8 await\cf7 \strokec7  \cf9 \strokec9 waitFor\cf7 \strokec7 (() \cf9 \strokec9 =>\cf7 \strokec7  \{\
      \cf9 \strokec9 expect\cf7 \strokec7 (screen.\cf9 \strokec9 getByText\cf7 \strokec7 (\cf10 \strokec10 /already has 2 adjacent pairings/\cf7 \strokec7 )).\cf9 \strokec9 toBeInTheDocument\cf7 \strokec7 ();\
    \});\
    \
    
\f5\i \cf6 \strokec6 // Verify adjacency was NOT created
\f1\i0 \cf7 \strokec7 \
    \cf9 \strokec9 expect\cf7 \strokec7 (mockState.adjacents[\cf10 \strokec10 'Hub'\cf7 \strokec7 ]).not.\cf9 \strokec9 toContain\cf7 \strokec7 (\cf10 \strokec10 'C'\cf7 \strokec7 );\
  \});\
\});\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 12.3 Performance Test Requirements\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // performance/LargeGuestList.perf.test.tsx
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf9 \strokec9 describe\cf7 \strokec7 (\cf10 \strokec10 'Performance Tests'\cf7 \strokec7 , () \cf9 \strokec9 =>\cf7 \strokec7  \{\
  \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'constraint grid renders 120 guests under 500ms'\cf7 \strokec7 , \cf8 \strokec8 async\cf7 \strokec7  () \cf9 \strokec9 =>\cf7 \strokec7  \{\
    \cf8 \strokec8 const\cf7 \strokec7  largeGuestList \cf9 \strokec9 =\cf7 \strokec7  \cf11 \strokec11 Array\cf7 \strokec7 .\cf8 \strokec8 from\cf7 \strokec7 (\{ length\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 120\cf7 \strokec7  \}, (_, i) \cf9 \strokec9 =>\cf7 \strokec7  (\{\
      name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 `Guest \cf7 \strokec7 $\{i \cf9 \strokec9 +\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7 \}\cf10 \strokec10 `\cf7 \strokec7 ,\
      count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7 \
    \}));\
    \
    \cf8 \strokec8 const\cf7 \strokec7  startTime \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 performance\cf7 \strokec7 .\cf9 \strokec9 now\cf7 \strokec7 ();\
    \cf9 \strokec9 render\cf7 \strokec7 (\cf9 \strokec9 <\cf7 \strokec7 ConstraintManager guests\cf9 \strokec9 =\cf7 \strokec7 \{largeGuestList\} \cf9 \strokec9 />\cf7 \strokec7 );\
    \cf8 \strokec8 const\cf7 \strokec7  endTime \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 performance\cf7 \strokec7 .\cf9 \strokec9 now\cf7 \strokec7 ();\
    \
    \cf9 \strokec9 expect\cf7 \strokec7 (endTime \cf9 \strokec9 -\cf7 \strokec7  startTime).\cf9 \strokec9 toBeLessThan\cf7 \strokec7 (\cf11 \strokec11 500\cf7 \strokec7 );\
  \});\
  \
  \cf9 \strokec9 test\cf7 \strokec7 (\cf10 \strokec10 'plan generation completes within 2 seconds for 100 guests'\cf7 \strokec7 , \cf8 \strokec8 async\cf7 \strokec7  () \cf9 \strokec9 =>\cf7 \strokec7  \{\
    \cf8 \strokec8 const\cf7 \strokec7  guests \cf9 \strokec9 =\cf7 \strokec7  \cf11 \strokec11 Array\cf7 \strokec7 .\cf8 \strokec8 from\cf7 \strokec7 (\{ length\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 100\cf7 \strokec7  \}, (_, i) \cf9 \strokec9 =>\cf7 \strokec7  (\{\
      name\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 `Guest \cf7 \strokec7 $\{i \cf9 \strokec9 +\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7 \}\cf10 \strokec10 `\cf7 \strokec7 , \
      count\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7 \
    \}));\
    \cf8 \strokec8 const\cf7 \strokec7  tables \cf9 \strokec9 =\cf7 \strokec7  \cf11 \strokec11 Array\cf7 \strokec7 .\cf8 \strokec8 from\cf7 \strokec7 (\{ length\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 15\cf7 \strokec7  \}, (_, i) \cf9 \strokec9 =>\cf7 \strokec7  (\{\
      id\cf9 \strokec9 :\cf7 \strokec7  i \cf9 \strokec9 +\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7 ,\
      seats\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 8\cf7 \strokec7 \
    \}));\
    \
    \cf8 \strokec8 const\cf7 \strokec7  startTime \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 performance\cf7 \strokec7 .\cf9 \strokec9 now\cf7 \strokec7 ();\
    \cf8 \strokec8 const\cf7 \strokec7  result \cf9 \strokec9 =\cf7 \strokec7  \cf8 \strokec8 await\cf7 \strokec7  \cf9 \strokec9 generateSeatingPlans\cf7 \strokec7 (guests, tables, \{\}, \{\}, \{\}, \cf11 \strokec11 false\cf7 \strokec7 );\
    \cf8 \strokec8 const\cf7 \strokec7  endTime \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 performance\cf7 \strokec7 .\cf9 \strokec9 now\cf7 \strokec7 ();\
    \
    \cf9 \strokec9 expect\cf7 \strokec7 (endTime \cf9 \strokec9 -\cf7 \strokec7  startTime).\cf9 \strokec9 toBeLessThan\cf7 \strokec7 (\cf11 \strokec11 2000\cf7 \strokec7 );\
    \cf9 \strokec9 expect\cf7 \strokec7 (result.plans.length).\cf9 \strokec9 toBeGreaterThan\cf7 \strokec7 (\cf11 \strokec11 0\cf7 \strokec7 );\
  \});\
\});\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 13. Red-Team Instructions\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 13.1 File Patching Protocol\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 CRITICAL: Read this before modifying ANY file
\f1\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls13\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Verify File Status
\f1\b0 : Check Section 3.1 for file's current status (keep/delete/fix)\
\ls13\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Understand Dependencies
\f1\b0 : Review Section 8.1 for import chains affecting your target file\
\ls13\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Maintain Type Safety
\f1\b0 : Never modify type signatures in 
\f2\fs26 src/types/index.ts
\f1\fs24  without updating all consumers\
\ls13\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Preserve Invariants
\f1\b0 : Always maintain bidirectional adjacency/constraint relationships\
\ls13\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Test Axioms
\f1\b0 : For adjacency changes, verify all axioms in Section 6.1 still hold\
\ls13\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Run Verification
\f1\b0 : Execute verification checklist in Section 13.5 before submitting\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 13.2 Priority Patch Targets\
\pard\pardeftab720\sa319\partightenfactor0

\fs24 \cf0 13.2.1 BLOCKER: Guest Rename Data Corruption\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 File
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 src/context/AppContext.tsx
\f1\fs24 \strokec2 \uc0\u8232 
\f0\b \strokec2 Location
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 RENAME_GUEST
\f1\fs24 \strokec2  case in reducer\uc0\u8232 
\f0\b \strokec2 Current Status
\f1\b0 \strokec2 : BROKEN - loses all guest data\uc0\u8232 
\f0\b \strokec2 Required Fix
\f1\b0 \strokec2 : Complete implementation from Section 7.4\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // PATCH LOCATION: Line ~180-190 in reducer
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 case\cf7 \strokec7  \cf10 \strokec10 'RENAME_GUEST'\cf9 \strokec9 :\cf7 \strokec7  \{\
  
\f5\i \cf6 \strokec6 // REPLACE CURRENT BROKEN IMPLEMENTATION WITH:
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 const\cf7 \strokec7  \{ index, name \} \cf9 \strokec9 =\cf7 \strokec7  action.payload;\
  \cf8 \strokec8 const\cf7 \strokec7  newState \cf9 \strokec9 =\cf7 \strokec7  \{ \cf9 \strokec9 ...\cf7 \strokec7 state \};\
  \cf8 \strokec8 const\cf7 \strokec7  oldName \cf9 \strokec9 =\cf7 \strokec7  newState.guests[index].name;\
  \
  
\f5\i \cf6 \strokec6 // Update guest name
\f1\i0 \cf7 \strokec7 \
  newState.guests[index].name \cf9 \strokec9 =\cf7 \strokec7  name;\
  \
  
\f5\i \cf6 \strokec6 // CRITICAL: Propagate to all data structures
\f1\i0 \cf7 \strokec7 \
  
\f5\i \cf6 \strokec6 // [Complete implementation from Section 7.4]
\f1\i0 \cf7 \strokec7 \
  \
  \cf8 \strokec8 return\cf7 \strokec7  newState;\
\}\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b \cf0 \strokec2 13.2.2 CRITICAL: Adjacency Degree Enforcement\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 File
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 src/context/AppContext.tsx
\f1\fs24 \strokec2 \uc0\u8232 
\f0\b \strokec2 Location
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 SET_ADJACENT
\f1\fs24 \strokec2  case in reducer\uc0\u8232 
\f0\b \strokec2 Current Status
\f1\b0 \strokec2 : MISSING - no degree validation\uc0\u8232 
\f0\b \strokec2 Required Fix
\f1\b0 \strokec2 : Prophylactic validation from Section 6.1\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // PATCH LOCATION: Line ~200-220 in reducer  
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 case\cf7 \strokec7  \cf10 \strokec10 'SET_ADJACENT'\cf9 \strokec9 :\cf7 \strokec7  \{\
  \cf8 \strokec8 const\cf7 \strokec7  \{ guest1, guest2 \} \cf9 \strokec9 =\cf7 \strokec7  action.payload;\
  \cf8 \strokec8 const\cf7 \strokec7  newState \cf9 \strokec9 =\cf7 \strokec7  \{ \cf9 \strokec9 ...\cf7 \strokec7 state \};\
  \
  
\f5\i \cf6 \strokec6 // ADD THIS CRITICAL VALIDATION:
\f1\i0 \cf7 \strokec7 \
  \cf8 \strokec8 const\cf7 \strokec7  guest1Adjacents \cf9 \strokec9 =\cf7 \strokec7  newState.adjacents[guest1] \cf9 \strokec9 ||\cf7 \strokec7  [];\
  \cf8 \strokec8 const\cf7 \strokec7  guest2Adjacents \cf9 \strokec9 =\cf7 \strokec7  newState.adjacents[guest2] \cf9 \strokec9 ||\cf7 \strokec7  [];\
  \
  \cf8 \strokec8 if\cf7 \strokec7  (\cf9 \strokec9 !\cf7 \strokec7 guest1Adjacents.\cf9 \strokec9 includes\cf7 \strokec7 (guest2) \cf9 \strokec9 &&\cf7 \strokec7  guest1Adjacents.length \cf9 \strokec9 >=\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7 ) \{\
    \cf11 \strokec11 console\cf7 \strokec7 .\cf9 \strokec9 error\cf7 \strokec7 (\cf10 \strokec10 `Cannot add adjacency: \cf7 \strokec7 $\{guest1\}\cf10 \strokec10  already has 2 adjacent pairings`\cf7 \strokec7 );\
    \cf8 \strokec8 return\cf7 \strokec7  state; 
\f5\i \cf6 \strokec6 // Reject the action
\f1\i0 \cf7 \strokec7 \
  \}\
  \
  
\f5\i \cf6 \strokec6 // [Complete implementation from Section 6.1]
\f1\i0 \cf7 \strokec7 \
  \
  \cf8 \strokec8 return\cf7 \strokec7  newState;\
\}\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b \cf0 \strokec2 13.2.3 HIGH: Guest Count Parser Accuracy\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 File
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 src/utils/guestCount.ts
\f1\fs24 \strokec2 \uc0\u8232 
\f0\b \strokec2 Location
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 countHeads()
\f1\fs24 \strokec2  function\uc0\u8232 
\f0\b \strokec2 Current Accuracy
\f1\b0 \strokec2 : ~85%\uc0\u8232 
\f0\b \strokec2 Target Accuracy
\f1\b0 \strokec2 : >95%\uc0\u8232 
\f0\b \strokec2 Required Fixes
\f1\b0 \strokec2 : Handle spelled numbers, "plus N" syntax, family patterns\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // PATCH LOCATION: Lines 40-80 in countHeads function
\f1\i0 \cf7 \strokec7 \

\f5\i \cf6 \strokec6 // ADD THESE MISSING PATTERNS:
\f1\i0 \cf7 \strokec7 \
\

\f5\i \cf6 \strokec6 // Handle "plus [number]" without requiring "one"  
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 const\cf7 \strokec7  plusNumberMatch \cf9 \strokec9 =\cf7 \strokec7  sanitized.\cf9 \strokec9 match\cf7 \strokec7 (\cf10 \strokec10 /plus\\s+(\\d+)/i\cf7 \strokec7 );\
\cf8 \strokec8 if\cf7 \strokec7  (plusNumberMatch \cf9 \strokec9 &&\cf7 \strokec7  plusNumberMatch[\
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf5 \strokec5 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb12 Retry\cb1 \
\pard\pardeftab720\qc\partightenfactor0
\cf5 \
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 DA\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Continue\
\pard\pardeftab720\partightenfactor0

\f4\fs22 \cf5 \cb12 \strokec5 Edit
\f1\fs24 \cf0 \cb1 \strokec2 \
\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // PATCH LOCATION: Lines 40-80 in countHeads function
\f1\i0 \cf7 \strokec7 \

\f5\i \cf6 \strokec6 // ADD THESE MISSING PATTERNS:
\f1\i0 \cf7 \strokec7 \
\

\f5\i \cf6 \strokec6 // Handle "plus [number]" without requiring "one"  
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 const\cf7 \strokec7  plusNumberMatch \cf9 \strokec9 =\cf7 \strokec7  sanitized.\cf9 \strokec9 match\cf7 \strokec7 (\cf10 \strokec10 /plus\\s+(\\d+)/i\cf7 \strokec7 );\
\cf8 \strokec8 if\cf7 \strokec7  (plusNumberMatch \cf9 \strokec9 &&\cf7 \strokec7  plusNumberMatch[\cf11 \strokec11 1\cf7 \strokec7 ] \cf9 \strokec9 !==\cf7 \strokec7  \cf10 \strokec10 '1'\cf7 \strokec7 ) \{\
 \cf8 \strokec8 const\cf7 \strokec7  additionalGuests \cf9 \strokec9 =\cf7 \strokec7  \cf9 \strokec9 parseInt\cf7 \strokec7 (plusNumberMatch[\cf11 \strokec11 1\cf7 \strokec7 ]);\
 \cf8 \strokec8 if\cf7 \strokec7  (\cf9 \strokec9 !isNaN\cf7 \strokec7 (additionalGuests) \cf9 \strokec9 &&\cf7 \strokec7  additionalGuests \cf9 \strokec9 >\cf7 \strokec7  \cf11 \strokec11 0\cf7 \strokec7 ) \{\
   \cf8 \strokec8 return\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7  \cf9 \strokec9 +\cf7 \strokec7  additionalGuests; 
\f5\i \cf6 \strokec6 // Base guest + additional
\f1\i0 \cf7 \strokec7 \
 \}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Add spelled numerals map
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 const\cf7 \strokec7  spelledNumbers\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 number\cf9 \strokec9 >\cf7 \strokec7  \cf9 \strokec9 =\cf7 \strokec7  \{\
 \cf13 \strokec13 'one'\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7 , \cf13 \strokec13 'two'\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7 , \cf13 \strokec13 'three'\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 3\cf7 \strokec7 , \cf13 \strokec13 'four'\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 4\cf7 \strokec7 , \cf13 \strokec13 'five'\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 5\cf7 \strokec7 ,\
 \cf13 \strokec13 'six'\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 6\cf7 \strokec7 , \cf13 \strokec13 'seven'\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 7\cf7 \strokec7 , \cf13 \strokec13 'eight'\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 8\cf7 \strokec7 , \cf13 \strokec13 'nine'\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 9\cf7 \strokec7 , \cf13 \strokec13 'ten'\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 10\cf7 \strokec7 \
\};\
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Check for spelled numbers in specific contexts
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  [word, num] \cf8 \strokec8 of\cf7 \strokec7  \cf11 \strokec11 Object\cf7 \strokec7 .\cf9 \strokec9 entries\cf7 \strokec7 (spelledNumbers)) \{\
 \cf8 \strokec8 const\cf7 \strokec7  regex \cf9 \strokec9 =\cf7 \strokec7  \cf8 \strokec8 new\cf7 \strokec7  \cf11 \strokec11 RegExp\cf7 \strokec7 (\cf10 \strokec10 `\\\\b\cf7 \strokec7 $\{word\}\cf10 \strokec10 \\\\s+(guests?|people|persons?)\\\\b`\cf7 \strokec7 , \cf10 \strokec10 'gi'\cf7 \strokec7 );\
 \cf8 \strokec8 if\cf7 \strokec7  (regex.\cf9 \strokec9 test\cf7 \strokec7 (sanitized)) \{\
   \cf8 \strokec8 return\cf7 \strokec7  num; 
\f5\i \cf6 \strokec6 // Direct return for "two guests", "five people"
\f1\i0 \cf7 \strokec7 \
 \}\
 \
 
\f5\i \cf6 \strokec6 // Handle "family of [number]"
\f1\i0 \cf7 \strokec7 \
 \cf8 \strokec8 const\cf7 \strokec7  familyRegex \cf9 \strokec9 =\cf7 \strokec7  \cf8 \strokec8 new\cf7 \strokec7  \cf11 \strokec11 RegExp\cf7 \strokec7 (\cf10 \strokec10 `family\\\\s+of\\\\s+\cf7 \strokec7 $\{word\}\cf10 \strokec10 \\\\b`\cf7 \strokec7 , \cf10 \strokec10 'gi'\cf7 \strokec7 );\
 \cf8 \strokec8 if\cf7 \strokec7  (familyRegex.\cf9 \strokec9 test\cf7 \strokec7 (sanitized)) \{\
   \cf8 \strokec8 return\cf7 \strokec7  num; 
\f5\i \cf6 \strokec6 // Return actual number, not default 4
\f1\i0 \cf7 \strokec7 \
 \}\
\}\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 13.3 Module-Specific Patch Guidelines\
\pard\pardeftab720\sa319\partightenfactor0

\fs24 \cf0 13.3.1 seatingAlgorithm.ts Modifications\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Status
\f1\b0 \strokec2 : VERIFIED CORRECT - Do not modify unless extending functionality\uc0\u8232 
\f0\b \strokec2 Critical Functions
\f1\b0 \strokec2 :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls14\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 detectAdjacentPairingConflicts()
\f1\fs24  - Axiomatically sound, mathematically proven\
\ls14\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 buildAtomicGroups()
\f1\fs24  - Implements "Implicit Must" model correctly\
\ls14\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 generateSeatingPlans()
\f1\fs24  - Core engine, verified working\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 If extending:
\f1\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls15\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Maintain axiom compliance (Section 6.1)\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Preserve Union-Find efficiency\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Test against all examples in Section 12.1.2\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b \cf0 \strokec2 13.3.2 AppContext.tsx Modifications\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Critical Areas
\f1\b0 \strokec2 :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls16\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 SET_ADJACENT
\f1\b0 : Must enforce degree \uc0\u8804  2 and maintain symmetry\
\ls16\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 RENAME_GUEST
\f1\b0 : Must propagate changes to all state objects\
\ls16\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 SET_CONSTRAINT
\f1\b0 : Must maintain bidirectional relationships\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 Validation Required
\f1\b0 \strokec2 :\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Add this validation helper at top of file
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 validateStateInvariants\cf7 \strokec7 (state\cf9 \strokec9 :\cf7 \strokec7  AppState)\cf9 \strokec9 :\cf7 \strokec7  \cf8 \strokec8 void\cf7 \strokec7  \{\
  \cf8 \strokec8 if\cf7 \strokec7  (process.env.\cf11 \strokec11 NODE_ENV\cf7 \strokec7  \cf9 \strokec9 ===\cf7 \strokec7  \cf10 \strokec10 'development'\cf7 \strokec7 ) \{\
    
\f5\i \cf6 \strokec6 // Check adjacency symmetry
\f1\i0 \cf7 \strokec7 \
    \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  [guest1, adjacents] \cf8 \strokec8 of\cf7 \strokec7  \cf11 \strokec11 Object\cf7 \strokec7 .\cf9 \strokec9 entries\cf7 \strokec7 (state.adjacents)) \{\
      \cf8 \strokec8 for\cf7 \strokec7  (\cf8 \strokec8 const\cf7 \strokec7  guest2 \cf8 \strokec8 of\cf7 \strokec7  adjacents) \{\
        \cf8 \strokec8 if\cf7 \strokec7  (\cf9 \strokec9 !\cf7 \strokec7 state.adjacents[guest2]\cf9 \strokec9 ?.includes\cf7 \strokec7 (guest1)) \{\
          \cf11 \strokec11 console\cf7 \strokec7 .\cf9 \strokec9 error\cf7 \strokec7 (\cf10 \strokec10 `Asymmetric adjacency: \cf7 \strokec7 $\{guest1\}\cf10 \strokec10  \uc0\u8594  \cf7 \strokec7 $\{guest2\}\cf10 \strokec10  but not reverse`\cf7 \strokec7 );\
        \}\
      \}\
      \
      
\f5\i \cf6 \strokec6 // Check degree constraint
\f1\i0 \cf7 \strokec7 \
      \cf8 \strokec8 if\cf7 \strokec7  (adjacents.length \cf9 \strokec9 >\cf7 \strokec7  \cf11 \strokec11 2\cf7 \strokec7 ) \{\
        \cf11 \strokec11 console\cf7 \strokec7 .\cf9 \strokec9 error\cf7 \strokec7 (\cf10 \strokec10 `Degree violation: \cf7 \strokec7 $\{guest1\}\cf10 \strokec10  has \cf7 \strokec7 $\{adjacents.length\}\cf10 \strokec10  adjacencies`\cf7 \strokec7 );\
      \}\
    \}\
  \}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Call at end of every reducer case
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 return\cf7 \strokec7  \cf9 \strokec9 validateStateInvariants\cf7 \strokec7 (newState), newState;\
\pard\pardeftab720\sa319\partightenfactor0

\f0\b \cf0 \strokec2 13.3.3 UI Component Modifications\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Files
\f1\b0 \strokec2 : 
\f2\fs26 \strokec2 ConstraintManager.tsx
\f1\fs24 \strokec2 , 
\f2\fs26 \strokec2 AssignmentManager.tsx
\f1\fs24 \strokec2 , 
\f2\fs26 \strokec2 TableManager.tsx
\f1\fs24 \strokec2 \uc0\u8232 
\f0\b \strokec2 Rendering Precedence
\f1\b0 \strokec2 : Always maintain order 
\f2\fs26 \strokec2 cannot > adjacent > must > empty
\f1\fs24 \strokec2 \uc0\u8232 
\f0\b \strokec2 Performance
\f1\b0 \strokec2 : For 120+ guests, ensure pagination/virtualization\uc0\u8232 
\f0\b \strokec2 Accessibility
\f1\b0 \strokec2 : Maintain ARIA labels and keyboard navigation\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 13.4 Critical Testing Protocol\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 Before submitting ANY patch:
\f1\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls17\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Unit Tests
\f1\b0 : Run specific tests for your modified function\
\ls17\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Integration Tests
\f1\b0 : Test data flow end-to-end\
\ls17\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Axiom Validation
\f1\b0 : For adjacency changes, verify all axiom examples pass\
\ls17\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Performance
\f1\b0 : Profile rendering with 100+ guests\
\ls17\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Edge Cases
\f1\b0 : Test with malformed input, boundary conditions\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 Test Commands
\f1\b0 \strokec2 :\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 bash\
\pard\pardeftab720\partightenfactor0
\cf9 \strokec9 npm\cf7 \strokec7  \cf11 \strokec11 test\cf7 \strokec7  -- --testPathPattern\cf9 \strokec9 =\cf7 \strokec7 guestCount  
\f5\i \cf6 \strokec6 # Parser tests
\f1\i0 \cf7 \strokec7 \
\cf9 \strokec9 npm\cf7 \strokec7  \cf11 \strokec11 test\cf7 \strokec7  -- --testPathPattern\cf9 \strokec9 =\cf7 \strokec7 seatingAlgorithm  
\f5\i \cf6 \strokec6 # Engine tests  
\f1\i0 \cf7 \strokec7 \
\cf9 \strokec9 npm\cf7 \strokec7  \cf11 \strokec11 test\cf7 \strokec7  -- --testPathPattern\cf9 \strokec9 =\cf7 \strokec7 AppContext  
\f5\i \cf6 \strokec6 # State tests
\f1\i0 \cf7 \strokec7 \
\cf9 \strokec9 npm\cf7 \strokec7  run test:integration  
\f5\i \cf6 \strokec6 # Full integration suite
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 13.5 Patch Verification Checklist\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 Pre-Submission Requirements
\f1\b0 \strokec2 :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls18\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 TypeScript compiles without errors (
\f2\fs26 npx tsc --noEmit
\f1\fs24 )\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 All existing tests pass (
\f2\fs26 npm test
\f1\fs24 )\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 New functionality has corresponding tests\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Adjacency axioms verified (if applicable)\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 No console errors in browser dev tools\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Performance acceptable with large datasets\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI renders correctly on mobile/desktop\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Accessibility maintained (ARIA, keyboard nav)\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 No security vulnerabilities introduced\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Documentation updated if API contracts changed\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 Critical Adjacency Validation
\f1\b0 \strokec2 :\
\pard\pardeftab720\qc\partightenfactor0

\f4\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Run these specific test cases manually
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 const\cf7 \strokec7  testCases \cf9 \strokec9 =\cf7 \strokec7  [\
  
\f5\i \cf6 \strokec6 // 2-guest chains (should never fail except capacity)
\f1\i0 \cf7 \strokec7 \
  \{ guests\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'B'\cf7 \strokec7 ], adjacents\cf9 \strokec9 :\cf7 \strokec7  \{\cf13 \strokec13 'A'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'B'\cf7 \strokec7 ], \cf13 \strokec13 'B'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 ]\}, shouldPass\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 true\cf7 \strokec7  \},\
  \
  
\f5\i \cf6 \strokec6 // Valid 3-guest chain (has endpoints)  
\f1\i0 \cf7 \strokec7 \
  \{ guests\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'B'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ], adjacents\cf9 \strokec9 :\cf7 \strokec7  \{\cf13 \strokec13 'A'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'B'\cf7 \strokec7 ], \cf13 \strokec13 'B'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ], \cf13 \strokec13 'C'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'B'\cf7 \strokec7 ]\}, shouldPass\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 true\cf7 \strokec7  \},\
  \
  
\f5\i \cf6 \strokec6 // Invalid 3-guest triangle (no endpoints)
\f1\i0 \cf7 \strokec7 \
  \{ guests\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'B'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ], adjacents\cf9 \strokec9 :\cf7 \strokec7  \{\cf13 \strokec13 'A'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'B'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ], \cf13 \strokec13 'B'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ], \cf13 \strokec13 'C'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'B'\cf7 \strokec7 ]\}, shouldPass\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 false\cf7 \strokec7  \},\
  \
  
\f5\i \cf6 \strokec6 // Degree violation
\f1\i0 \cf7 \strokec7 \
  \{ guests\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Hub'\cf7 \strokec7 , \cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'B'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ], adjacents\cf9 \strokec9 :\cf7 \strokec7  \{\cf13 \strokec13 'Hub'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'B'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ], \cf13 \strokec13 'A'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Hub'\cf7 \strokec7 ], \cf13 \strokec13 'B'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Hub'\cf7 \strokec7 ], \cf13 \strokec13 'C'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Hub'\cf7 \strokec7 ]\}, shouldPass\cf9 \strokec9 :\cf7 \strokec7  \cf11 \strokec11 false\cf7 \strokec7  \}\
];\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 13.6 Emergency Rollback Procedures\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 If system becomes unstable after patch:
\f1\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls19\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Immediate
\f1\b0 : Revert specific file from git\
\ls19\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 State Recovery
\f1\b0 : Clear localStorage, refresh browser\
\ls19\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Fallback Functions
\f1\b0 : 
\f4\fs22 \cf5 \strokec5 \uc0\u8232 \u8232 \u8232 
\f1\fs24 \cf0 \strokec2 \uc0\u8232 \u8232 typescript\u8232 
\f5\i \cf6 \strokec6 // Emergency adjacency bypass
\f1\i0 \cf7 \strokec7 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls19\ilvl0\cf8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 detectAdjacentPairingConflicts\cf7 \strokec7 () \{ \cf8 \strokec8 return\cf7 \strokec7  []; \}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls19\ilvl0\cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls19\ilvl0
\f5\i \cf6 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 // Emergency parser fallback  
\f1\i0 \cf7 \strokec7 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls19\ilvl0\cf8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 function\cf7 \strokec7  \cf9 \strokec9 countHeads\cf7 \strokec7 () \{ \cf8 \strokec8 return\cf7 \strokec7  \cf11 \strokec11 1\cf7 \strokec7 ; \}\uc0\u8232 \cf0 \strokec2 \uc0\u8232 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 13.7 Architecture Evolution Guidelines\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 When adding new features:
\f1\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls20\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Type Safety First
\f1\b0 : Add types to 
\f2\fs26 src/types/index.ts
\f1\fs24  before implementation\
\ls20\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 State Management
\f1\b0 : New state goes through reducer with validation\
\ls20\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI Components
\f1\b0 : Use existing design system, maintain responsive design\
\ls20\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Business Logic
\f1\b0 : Keep in 
\f2\fs26 utils/
\f1\fs24  directory, not in components\
\ls20\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Performance
\f1\b0 : Consider impact on 120+ guest scenarios\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 Prohibited Changes
\f1\b0 \strokec2 :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls21\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Never modify adjacency axioms (mathematically proven)\
\ls21\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Never break bidirectional constraint/adjacency relationships\
\ls21\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Never store sensitive data in localStorage\
\ls21\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Never implement client-side admin checks\
\ls21\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Never bypass TypeScript strict mode\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 Appendix A: Adjacency Configuration Examples\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 A.1 Valid Configurations (Will Pass All Tests)\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Simple pair (AXIOM 1: always valid except capacity)
\f1\i0 \cf7 \strokec7 \
adjacents\cf9 \strokec9 :\cf7 \strokec7  \{ \cf13 \strokec13 'Alice'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Bob'\cf7 \strokec7 ], \cf13 \strokec13 'Bob'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Alice'\cf7 \strokec7 ] \}\
\

\f5\i \cf6 \strokec6 // Linear chain with endpoints
\f1\i0 \cf7 \strokec7 \
adjacents\cf9 \strokec9 :\cf7 \strokec7  \{ \
  \cf13 \strokec13 'A'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'B'\cf7 \strokec7 ],           
\f5\i \cf6 \strokec6 // Endpoint (degree 1)
\f1\i0 \cf7 \strokec7 \
  \cf13 \strokec13 'B'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ],      
\f5\i \cf6 \strokec6 // Middle (degree 2) 
\f1\i0 \cf7 \strokec7 \
  \cf13 \strokec13 'C'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'B'\cf7 \strokec7 , \cf10 \strokec10 'D'\cf7 \strokec7 ],      
\f5\i \cf6 \strokec6 // Middle (degree 2)
\f1\i0 \cf7 \strokec7 \
  \cf13 \strokec13 'D'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'C'\cf7 \strokec7 ]            
\f5\i \cf6 \strokec6 // Endpoint (degree 1)
\f1\i0 \cf7 \strokec7 \
\}\
\

\f5\i \cf6 \strokec6 // Multiple separate chains  
\f1\i0 \cf7 \strokec7 \
adjacents\cf9 \strokec9 :\cf7 \strokec7  \{\
  \cf13 \strokec13 'Alice'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Bob'\cf7 \strokec7 ],     
\f5\i \cf6 \strokec6 // Chain 1
\f1\i0 \cf7 \strokec7 \
  \cf13 \strokec13 'Bob'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Alice'\cf7 \strokec7 ],\
  \cf13 \strokec13 'Carol'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Dave'\cf7 \strokec7 ],    
\f5\i \cf6 \strokec6 // Chain 2  
\f1\i0 \cf7 \strokec7 \
  \cf13 \strokec13 'Dave'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Carol'\cf7 \strokec7 ]\
\}\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 A.2 Invalid Configurations (Will Generate Conflicts)\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Degree violation (AXIOM 2)
\f1\i0 \cf7 \strokec7 \
adjacents\cf9 \strokec9 :\cf7 \strokec7  \{ \
  \cf13 \strokec13 'Hub'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'B'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ],  
\f5\i \cf6 \strokec6 // Degree 3 > limit of 2
\f1\i0 \cf7 \strokec7 \
  \cf13 \strokec13 'A'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Hub'\cf7 \strokec7 ], \cf13 \strokec13 'B'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Hub'\cf7 \strokec7 ], \cf13 \strokec13 'C'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Hub'\cf7 \strokec7 ] \
\}\
\

\f5\i \cf6 \strokec6 // Closed loop (AXIOM 3)  
\f1\i0 \cf7 \strokec7 \
adjacents\cf9 \strokec9 :\cf7 \strokec7  \{\
  \cf13 \strokec13 'A'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'B'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ],      
\f5\i \cf6 \strokec6 // No endpoints - all have degree 2
\f1\i0 \cf7 \strokec7 \
  \cf13 \strokec13 'B'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'C'\cf7 \strokec7 ],  \
  \cf13 \strokec13 'C'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'A'\cf7 \strokec7 , \cf10 \strokec10 'B'\cf7 \strokec7 ]\
\}\
\

\f5\i \cf6 \strokec6 // Asymmetric (breaks invariant)
\f1\i0 \cf7 \strokec7 \
adjacents\cf9 \strokec9 :\cf7 \strokec7  \{ \
  \cf13 \strokec13 'Alice'\cf9 \strokec9 :\cf7 \strokec7  [\cf10 \strokec10 'Bob'\cf7 \strokec7 ],     
\f5\i \cf6 \strokec6 // Alice \uc0\u8594  Bob but Bob \u8603  Alice  
\f1\i0 \cf7 \strokec7 \
  \cf13 \strokec13 'Bob'\cf9 \strokec9 :\cf7 \strokec7  []             
\f5\i \cf6 \strokec6 // INVALID - must be symmetric
\f1\i0 \cf7 \strokec7 \
\}\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 Appendix B: State Object References\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 B.1 Complete AppState Schema\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 interface\cf7 \strokec7  \cf11 \strokec11 AppState\cf7 \strokec7  \{\
  guests\cf9 \strokec9 :\cf7 \strokec7  Guest[];                    
\f5\i \cf6 \strokec6 // Core guest list
\f1\i0 \cf7 \strokec7 \
  tables\cf9 \strokec9 :\cf7 \strokec7  Table[];                    
\f5\i \cf6 \strokec6 // Table definitions  
\f1\i0 \cf7 \strokec7 \
  constraints\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , Constraint\cf9 \strokec9 >>\cf7 \strokec7 ;  
\f5\i \cf6 \strokec6 // Must/cannot matrix
\f1\i0 \cf7 \strokec7 \
  adjacents\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf7 \strokec7 []\cf9 \strokec9 >\cf7 \strokec7 ;                     
\f5\i \cf6 \strokec6 // Adjacency graph
\f1\i0 \cf7 \strokec7 \
  assignments\cf9 \strokec9 :\cf7 \strokec7  Record\cf9 \strokec9 <\cf10 \strokec10 string\cf7 \strokec7 , \cf10 \strokec10 string\cf9 \strokec9 >\cf7 \strokec7 ;                     
\f5\i \cf6 \strokec6 // Table assignments
\f1\i0 \cf7 \strokec7 \
  seatingPlans\cf9 \strokec9 :\cf7 \strokec7  SeatingPlan[];                            
\f5\i \cf6 \strokec6 // Generated plans
\f1\i0 \cf7 \strokec7 \
  currentPlanIndex\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 number\cf7 \strokec7 ;                               
\f5\i \cf6 \strokec6 // Active plan
\f1\i0 \cf7 \strokec7 \
  subscription\cf9 \strokec9 :\cf7 \strokec7  UserSubscription \cf9 \strokec9 |\cf7 \strokec7  \cf8 \strokec8 null\cf7 \strokec7 ;                  
\f5\i \cf6 \strokec6 // User tier
\f1\i0 \cf7 \strokec7 \
  user\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 any\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf8 \strokec8 null\cf7 \strokec7 ;                                      
\f5\i \cf6 \strokec6 // Auth user
\f1\i0 \cf7 \strokec7 \
  userSetTables\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 boolean\cf7 \strokec7 ;                                
\f5\i \cf6 \strokec6 // Manual vs auto tables
\f1\i0 \cf7 \strokec7 \
  loadedSavedSetting\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 boolean\cf7 \strokec7 ;                          
\f5\i \cf6 \strokec6 // From saved setting
\f1\i0 \cf7 \strokec7 \
  duplicateGuests\cf9 \strokec9 ?:\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 [];                           
\f5\i \cf6 \strokec6 // UI warnings
\f1\i0 \cf7 \strokec7 \
  hideTableReductionNotice\cf9 \strokec9 ?:\cf7 \strokec7  \cf10 \strokec10 boolean\cf7 \strokec7 ;                   
\f5\i \cf6 \strokec6 // UI preferences
\f1\i0 \cf7 \strokec7 \
  timestamp\cf9 \strokec9 ?:\cf7 \strokec7  \cf10 \strokec10 string\cf7 \strokec7 ;                                   
\f5\i \cf6 \strokec6 // Last modified
\f1\i0 \cf7 \strokec7 \
\}\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 B.2 Action Type Reference\
\pard\pardeftab720\qc\partightenfactor0

\f4\b0\fs22 \cf5 \strokec5 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf0 \strokec2 typescript\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Guest Actions
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf10 \strokec10 'ADD_GUESTS'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'SET_GUESTS'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'REMOVE_GUEST'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'RENAME_GUEST'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'UPDATE_GUEST_COUNT'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'CLEAR_GUESTS'\cf7 \strokec7 \
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Constraint Actions  
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf10 \strokec10 'SET_CONSTRAINT'\cf7 \strokec7 \
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Adjacency Actions
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf10 \strokec10 'SET_ADJACENT'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'REMOVE_ADJACENT'\cf7 \strokec7   \
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Table Actions
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf10 \strokec10 'ADD_TABLE'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'REMOVE_TABLE'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'UPDATE_TABLE_SEATS'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'UPDATE_TABLE_NAME'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'UPDATE_DEFAULT_TABLES'\cf7 \strokec7 \
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Assignment Actions
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf10 \strokec10 'UPDATE_ASSIGNMENT'\cf7 \strokec7 \
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Plan Actions  
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf10 \strokec10 'SET_SEATING_PLANS'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'SET_CURRENT_PLAN_INDEX'\cf7 \strokec7 \
\
\pard\pardeftab720\partightenfactor0

\f5\i \cf6 \strokec6 // Session Actions
\f1\i0 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf10 \strokec10 'SET_SUBSCRIPTION'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'SET_USER'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'SET_USER_SET_TABLES'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'SET_LOADED_SAVED_SETTING'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'SET_DUPLICATE_GUESTS'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'HIDE_TABLE_REDUCTION_NOTICE'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'IMPORT_STATE'\cf7 \strokec7  \cf9 \strokec9 |\cf7 \strokec7  \cf10 \strokec10 'LOAD_STATE'\cf7 \strokec7 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 Appendix C: Performance Benchmarks\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 \strokec2 C.1 Target Performance Metrics\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls22\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Guest parsing
\f1\b0 : < 10ms per guest name\
\ls22\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Constraint validation
\f1\b0 : < 50ms for 100 guests\
\ls22\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Plan generation
\f1\b0 : < 2s for 100 guests, 15 tables\
\ls22\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI grid rendering
\f1\b0 : < 500ms for 120 guests\
\ls22\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 State mutations
\f1\b0 : < 5ms per action\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 C.2 Browser Compatibility Matrix\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls23\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Chrome 90+
\f1\b0 : Full support, optimal performance\
\ls23\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Firefox 88+
\f1\b0 : Full support, good performance\
\ls23\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Safari 14+
\f1\b0 : Full support, reduced performance on large grids\
\ls23\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Edge 90+
\f1\b0 : Full support, optimal performance\
\ls23\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Mobile Safari
\f1\b0 : Touch events supported, pagination required 120+\
\ls23\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Mobile Chrome
\f1\b0 : Full feature parity with desktop\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 END OF SUPREME REPORT v4.0
\f1\b0 \strokec2 \
This unified document supersedes all previous reports and addendums. Any discrepancies should be resolved in favor of this Single Source of Truth.\

\f0\b \strokec2 Critical Implementation Status
\f1\b0 \strokec2 :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls24\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u9989  
\f0\b Adjacency Engine
\f1\b0 : Axiomatically correct and mathematically sound\
\ls24\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u9989  
\f0\b Constraint Validation
\f1\b0 : Union-Find algorithm prevents false positives\
\ls24\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u9989  
\f0\b UI Rendering
\f1\b0 : Declarative precedence model eliminates sync bugs\
\ls24\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u55357 \u57000  
\f0\b Security
\f1\b0 : Critical vulnerabilities require immediate attention\
\ls24\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u55357 \u57000  
\f0\b Data Integrity
\f1\b0 : Guest rename propagation must be fixed before production\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 Next Review
\f1\b0 \strokec2 : After critical security patches and data integrity fixes are implemented.\

\f0\b \strokec2 Verification Date
\f1\b0 \strokec2 : 2025-08-25 13:30 EST\uc0\u8232 
\f0\b \strokec2 Codebase Version
\f1\b0 \strokec2 : SeatyrBolt0822zippy2 + Addendum Analysis\
}